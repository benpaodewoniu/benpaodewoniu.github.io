<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>犀牛的博客</title>
  
  <subtitle>姑苏城外一茅屋，万树梅花月满天</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://benpaodewoniu.github.io/"/>
  <updated>2024-06-21T16:37:38.144Z</updated>
  <id>http://benpaodewoniu.github.io/</id>
  
  <author>
    <name>犀牛</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>centos | ssh 更改端口</title>
    <link href="http://benpaodewoniu.github.io/2024/06/22/centos1/"/>
    <id>http://benpaodewoniu.github.io/2024/06/22/centos1/</id>
    <published>2024-06-21T16:26:15.000Z</published>
    <updated>2024-06-21T16:37:38.144Z</updated>
    
    <content type="html"><![CDATA[<p><code>centos</code> 的 <code>ssh</code> 默认是 <code>22</code>。</p><a id="more"></a><h2 id="更改-ssh-端口"><a href="#更改-ssh-端口" class="headerlink" title="更改 ssh 端口"></a>更改 ssh 端口</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vi <span class="regexp">/etc/</span>ssh<span class="regexp">/sshd_config</span></span><br></pre></td></tr></table></figure><p>将 <code>Port</code> 修改成你想要的端口号，这里建议保留一下 <code>22</code>，防止出错，连不上服务器。</p><h2 id="重启-ssh"><a href="#重启-ssh" class="headerlink" title="重启 ssh"></a>重启 ssh</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">sudo</span> <span class="selector-tag">systemctl</span> <span class="selector-tag">restart</span> <span class="selector-tag">sshd</span><span class="selector-class">.service</span></span><br></pre></td></tr></table></figure><p>如果你执行这一步的时候出现 <code>Job for sshd.service failed because the control process exited with error</code>，说明 <code>SELinux</code> 允许的 <code>ssh</code> 端口和你配置的不一致，所以，你需要自己在 <code>SELinux</code> 中注册一下。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo semanage<span class="built_in"> port </span>-a -t ssh_port_t -p tcp 11234</span><br></pre></td></tr></table></figure><p>这里添加一下你要用的端口，然后重新启动 <code>ssh</code> 服务。</p><p>这里要注意的是，如果你启动了防火墙千万在断开链接之前，先开启这个端口的防火墙，否则将会连接不上。</p><ul><li><a href="/2024/06/22/centos0/">centos | 防火墙开启和用法</a></li></ul><p>如果你不幸没开防火墙，导致连不上，请参考</p><ul><li><a href="/2024/03/29/aws4/">aws | 修改 SSH 端口忘记打开防火墙</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;centos&lt;/code&gt; 的 &lt;code&gt;ssh&lt;/code&gt; 默认是 &lt;code&gt;22&lt;/code&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="linux" scheme="http://benpaodewoniu.github.io/categories/linux/"/>
    
      <category term="centos" scheme="http://benpaodewoniu.github.io/categories/linux/centos/"/>
    
    
      <category term="centos" scheme="http://benpaodewoniu.github.io/tags/centos/"/>
    
  </entry>
  
  <entry>
    <title>centos | 防火墙开启和用法</title>
    <link href="http://benpaodewoniu.github.io/2024/06/22/centos0/"/>
    <id>http://benpaodewoniu.github.io/2024/06/22/centos0/</id>
    <published>2024-06-21T16:26:13.000Z</published>
    <updated>2024-06-21T16:41:55.281Z</updated>
    
    <content type="html"><![CDATA[<p>防火墙相关。</p><a id="more"></a><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install firewalld <span class="comment"># 安装防火墙</span></span><br><span class="line">sudo systemctl start firewalld <span class="comment"># 开启防火墙</span></span><br><span class="line">sudo systemctl stop firewalld <span class="comment"># 关闭防火墙</span></span><br><span class="line">sudo firewall-<span class="keyword">cmd</span><span class="bash"> --reload <span class="comment"># 重启防火墙，修改配置后要进行这个命令</span></span></span><br><span class="line">sudo firewall-<span class="keyword">cmd</span><span class="bash"> --state <span class="comment"># 查看状态</span></span></span><br><span class="line">sudo firewall-<span class="keyword">cmd</span><span class="bash"> --query-port=80/tcp <span class="comment"># 查看相关端口</span></span></span><br><span class="line">sudo firewall-<span class="keyword">cmd</span><span class="bash"> --permanent --list-ports <span class="comment"># 查看所有的开放端口</span></span></span><br><span class="line">sudo firewall-<span class="keyword">cmd</span><span class="bash"> --permanent --add-port=8080/tcp <span class="comment"># 开启端口</span></span></span><br><span class="line">sudo firewall-<span class="keyword">cmd</span><span class="bash"> --permanent --add-port=8083-8085/tcp <span class="comment"># 开启某一系列端口</span></span></span><br><span class="line">sudo firewall-<span class="keyword">cmd</span><span class="bash"> --permanent --remove-port=8083-8085/tcp <span class="comment"># 移除端口</span></span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;防火墙相关。&lt;/p&gt;
    
    </summary>
    
      <category term="linux" scheme="http://benpaodewoniu.github.io/categories/linux/"/>
    
      <category term="centos" scheme="http://benpaodewoniu.github.io/categories/linux/centos/"/>
    
    
      <category term="centos" scheme="http://benpaodewoniu.github.io/tags/centos/"/>
    
  </entry>
  
  <entry>
    <title>python | 用户相关</title>
    <link href="http://benpaodewoniu.github.io/2024/06/18/python207/"/>
    <id>http://benpaodewoniu.github.io/2024/06/18/python207/</id>
    <published>2024-06-18T15:43:34.000Z</published>
    <updated>2024-06-18T15:43:59.088Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="python" scheme="http://benpaodewoniu.github.io/categories/python/"/>
    
      <category term="模块" scheme="http://benpaodewoniu.github.io/categories/python/%E6%A8%A1%E5%9D%97/"/>
    
      <category term="selenium" scheme="http://benpaodewoniu.github.io/categories/python/%E6%A8%A1%E5%9D%97/selenium/"/>
    
    
      <category term="python" scheme="http://benpaodewoniu.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>ok | ok api 平台对接</title>
    <link href="http://benpaodewoniu.github.io/2024/06/18/ok1/"/>
    <id>http://benpaodewoniu.github.io/2024/06/18/ok1/</id>
    <published>2024-06-17T16:01:07.000Z</published>
    <updated>2024-06-17T16:25:01.609Z</updated>
    
    <content type="html"><![CDATA[<p><code>ok api</code> 其实分为两种</p><ul><li><code>oklink</code><ul><li><a href="/2024/03/21/ok0/">oklink</a></li></ul></li><li><code>okapi</code><ul><li>这篇文章主要说这个</li><li>这里的 api 指的是平台 api，但是，平台 api 又分为两种</li><li><a href="https://www.okx.com/docs-v5/zh/#public-data">cex</a></li><li><a href="https://www.okx.com/zh-hans/web3/build/docs/home/welcome">链上</a></li></ul></li></ul><a id="more"></a><p>这里主要贴一下 <code>okpi</code> 的认证。</p><p>这里主要是抓取了 <code>ok</code> 平台的链上挂单。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> hmac</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> urllib.parse</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime, timezone</span><br><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> Dict</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OkApiService</span>:</span></span><br><span class="line">    key = <span class="string">''</span></span><br><span class="line">    secret = <span class="string">""</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">pre_hash</span><span class="params">(self, timestamp, method, request_path, params=None)</span>:</span></span><br><span class="line">        <span class="comment"># 根据字符串和参数创建预签名</span></span><br><span class="line">        query_string = <span class="string">''</span></span><br><span class="line">        <span class="keyword">if</span> method == <span class="string">'GET'</span> <span class="keyword">and</span> params:</span><br><span class="line">            query_string = <span class="string">'?'</span> + urllib.parse.urlencode(params).replace(<span class="string">"%2520"</span>, <span class="string">"%20"</span>)</span><br><span class="line">        <span class="keyword">if</span> method == <span class="string">'POST'</span> <span class="keyword">and</span> params:</span><br><span class="line">            query_string = json.dumps(params)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">f"<span class="subst">&#123;timestamp&#125;</span><span class="subst">&#123;method&#125;</span><span class="subst">&#123;request_path&#125;</span><span class="subst">&#123;query_string&#125;</span>"</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_signature</span><span class="params">(self, method, request_path, params=None)</span>:</span></span><br><span class="line">        <span class="comment"># 获取 ISO 8601 格式时间戳</span></span><br><span class="line">        timestamp = datetime.now(timezone.utc).isoformat()[:<span class="number">-9</span>] + <span class="string">'Z'</span></span><br><span class="line">        <span class="comment"># 生成签名</span></span><br><span class="line">        message = self.pre_hash(timestamp, method, request_path, params)</span><br><span class="line">        signature = hmac.new(bytes(self.secret, encoding=<span class="string">'utf8'</span>), bytes(message, encoding=<span class="string">'utf-8'</span>), digestmod=<span class="string">'sha256'</span>)</span><br><span class="line">        signature = base64.b64encode(signature.digest())</span><br><span class="line">        <span class="keyword">return</span> signature, timestamp</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_market_list</span><span class="params">(self, token_info: Dict)</span> -&gt; <span class="keyword">None</span>:</span></span><br><span class="line"></span><br><span class="line">        url = <span class="string">f"https://www.okx.com/api/v5/mktplace/nft/markets/listings?chain=<span class="subst">&#123;token_info.get(<span class="string">'chain'</span>)&#125;</span>&amp;collectionAddress=<span class="subst">&#123;token_info.get(<span class="string">'collectionAddress'</span>)&#125;</span>&amp;limit=<span class="subst">&#123;<span class="number">100</span>&#125;</span>&amp;sort=price_asc"</span></span><br><span class="line"></span><br><span class="line">        params = &#123;</span><br><span class="line">            <span class="string">"chain"</span>: token_info.get(<span class="string">'chain'</span>),</span><br><span class="line">            <span class="string">"collectionAddress"</span>: token_info.get(<span class="string">'collectionAddress'</span>),</span><br><span class="line">            <span class="string">"limit"</span>: <span class="number">100</span>,</span><br><span class="line">            <span class="string">"sort"</span>: <span class="string">"price_asc"</span></span><br><span class="line">        &#125;</span><br><span class="line">        signature, timestamp = self.create_signature(<span class="string">"GET"</span>, <span class="string">"/api/v5/mktplace/nft/markets/listings"</span>, params)</span><br><span class="line">        headers = &#123;</span><br><span class="line">            <span class="string">"Content-Type"</span>: <span class="string">'application/json'</span>,</span><br><span class="line">            <span class="string">'OK-ACCESS-KEY'</span>: self.key,</span><br><span class="line">            <span class="string">'OK-ACCESS-SIGN'</span>: signature,</span><br><span class="line">            <span class="string">'OK-ACCESS-TIMESTAMP'</span>: timestamp,</span><br><span class="line">            <span class="string">'OK-ACCESS-PASSPHRASE'</span>: <span class="string">''</span>,</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        response = requests.request(<span class="string">"GET"</span>, url, headers=headers)</span><br><span class="line">        print(len(response.json().get(<span class="string">"data"</span>).get(<span class="string">"data"</span>)))</span><br><span class="line">        <span class="keyword">for</span> d <span class="keyword">in</span> response.json().get(<span class="string">"data"</span>).get(<span class="string">"data"</span>):</span><br><span class="line">            print(<span class="string">f"<span class="subst">&#123;d.get(<span class="string">'tokenId'</span>)&#125;</span>"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    params = &#123;</span><br><span class="line">        <span class="string">"chain"</span>: <span class="string">"Lumi%20Layer3"</span>,</span><br><span class="line">        <span class="string">"collectionAddress"</span>: <span class="string">"0x3fa10a9d43113687f2fd143fca7445d8ef8e334a"</span></span><br><span class="line">    &#125;</span><br><span class="line">    OkApiService().get_market_list(params)</span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    params = &#123;</span><br><span class="line">        <span class="string">"chain"</span>: <span class="string">"eth"</span>,</span><br><span class="line">        <span class="string">"collectionAddress"</span>: <span class="string">"0xbc4ca0eda7647a8ab7c2061c2e118a18a936f13d"</span></span><br><span class="line">    &#125;</span><br><span class="line">    OkApiService().get_market_list(params)</span><br></pre></td></tr></table></figure><p>这里面有几个点要注意</p><ul><li><code>lumi</code> 的网络本来是<ul><li><code>Lumi Layer3</code>，中间有个空格，但是，空格可以用<code>%20</code>代替</li><li>但是 <code>%20</code> 会被 <code>urllib.parse.urlencode</code> 变成 <code>%2520</code>，所以，加了一个 <code>replace(&quot;%2520&quot;, &quot;%20&quot;)</code></li><li>这个地方可以再优化</li></ul></li><li>尽管 <code>OK</code> 平台的公开信息并不支持 <code>Lumi Layer3</code>，但是尝试后发现可以</li></ul><p><img src="/images/ok/1_1.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;ok api&lt;/code&gt; 其实分为两种&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;oklink&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/2024/03/21/ok0/&quot;&gt;oklink&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;okapi&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;这篇文章主要说这个&lt;/li&gt;
&lt;li&gt;这里的 api 指的是平台 api，但是，平台 api 又分为两种&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.okx.com/docs-v5/zh/#public-data&quot;&gt;cex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.okx.com/zh-hans/web3/build/docs/home/welcome&quot;&gt;链上&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="项目经历" scheme="http://benpaodewoniu.github.io/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/"/>
    
      <category term="大型" scheme="http://benpaodewoniu.github.io/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/%E5%A4%A7%E5%9E%8B/"/>
    
      <category term="quantify" scheme="http://benpaodewoniu.github.io/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/%E5%A4%A7%E5%9E%8B/quantify/"/>
    
      <category term="gateway" scheme="http://benpaodewoniu.github.io/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/%E5%A4%A7%E5%9E%8B/quantify/gateway/"/>
    
      <category term="ok" scheme="http://benpaodewoniu.github.io/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/%E5%A4%A7%E5%9E%8B/quantify/gateway/ok/"/>
    
      <category term="okapi" scheme="http://benpaodewoniu.github.io/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/%E5%A4%A7%E5%9E%8B/quantify/gateway/ok/okapi/"/>
    
    
      <category term="okapi" scheme="http://benpaodewoniu.github.io/tags/okapi/"/>
    
  </entry>
  
  <entry>
    <title>python | 多进程间的通信，复杂场景</title>
    <link href="http://benpaodewoniu.github.io/2024/06/18/python206/"/>
    <id>http://benpaodewoniu.github.io/2024/06/18/python206/</id>
    <published>2024-06-17T16:00:41.000Z</published>
    <updated>2024-06-17T16:58:10.470Z</updated>
    
    <content type="html"><![CDATA[<p>我们经常会有以下的场景需要处理</p><ul><li>一个进程接数据，另外一个进程怎么收数据</li><li>怎么让多个进程共用一个日志模块</li></ul><a id="more"></a><p>一个例子。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">import multiprocessing</span><br><span class="line">import multiprocessing as mp</span><br><span class="line">import time</span><br><span class="line"><span class="keyword">from</span> multiprocessing import Manager</span><br><span class="line"><span class="keyword">from</span> multiprocessing.managers import BaseManager</span><br><span class="line"><span class="keyword">from</span> multiprocessing.queues import Queue</span><br><span class="line"><span class="keyword">from</span> typing import Dict</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class Logger:</span><br><span class="line"></span><br><span class="line">    def __init__(self):</span><br><span class="line">        <span class="builtin-name">print</span>(<span class="string">"logger 初始化"</span>)</span><br><span class="line"></span><br><span class="line">    def <span class="builtin-name">info</span>(self, process, data):</span><br><span class="line">        <span class="builtin-name">print</span>(f<span class="string">"&#123;process&#125; 日志输出: &#123;data&#125;"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class Engine:</span><br><span class="line"></span><br><span class="line">    def start(self):</span><br><span class="line">       <span class="built_in"> queue </span>= mp.Queue()</span><br><span class="line">        dict_memory = Manager().dict()</span><br><span class="line">        bm = BaseManager()</span><br><span class="line">        bm.register(<span class="string">"Logger"</span>, Logger)</span><br><span class="line">        bm.start()</span><br><span class="line">        logger = bm.Logger()</span><br><span class="line"></span><br><span class="line">        asserts = &#123;</span><br><span class="line">            <span class="string">"logger"</span>: logger,</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        logger.<span class="builtin-name">info</span>(multiprocessing.current_process().name, <span class="string">"test"</span>)</span><br><span class="line"></span><br><span class="line">        p1 = mp.Process(<span class="attribute">target</span>=self.input, args=(queue, dict_memory, asserts), <span class="attribute">name</span>=<span class="string">"监控"</span>)</span><br><span class="line">        p2 = mp.Process(<span class="attribute">target</span>=self.output, args=(queue, dict_memory, asserts), <span class="attribute">name</span>=<span class="string">"web"</span>)</span><br><span class="line">        p3 = mp.Process(<span class="attribute">target</span>=self.active_start, args=(dict_memory, asserts), <span class="attribute">name</span>=<span class="string">"保活"</span>)</span><br><span class="line"></span><br><span class="line">        p1.start()</span><br><span class="line">        p2.start()</span><br><span class="line">        p3.start()</span><br><span class="line"></span><br><span class="line">        p1.join()</span><br><span class="line">        p2.join()</span><br><span class="line">        p3.join()</span><br><span class="line"></span><br><span class="line">    def input(self, queue: Queue, dict_memory: Dict, asserts: Dict):</span><br><span class="line">        logger = asserts.<span class="builtin-name">get</span>(<span class="string">"logger"</span>)</span><br><span class="line">        i = 0</span><br><span class="line">        <span class="keyword">while</span> 1:</span><br><span class="line">            queue.put(f<span class="string">"数据 &#123;i&#125;"</span>)</span><br><span class="line">            logger.<span class="builtin-name">info</span>(multiprocessing.current_process().name, f<span class="string">"队列入 &#123;i&#125;"</span>)</span><br><span class="line"></span><br><span class="line">            dict_memory[i] = i</span><br><span class="line">            logger.<span class="builtin-name">info</span>(multiprocessing.current_process().name, f<span class="string">"共用字典入 &#123;i&#125;"</span>)</span><br><span class="line"></span><br><span class="line">            time.sleep(3)</span><br><span class="line"></span><br><span class="line">            i += 1</span><br><span class="line"></span><br><span class="line">    def output(self, queue: Queue, dict_memory: Dict, asserts: Dict):</span><br><span class="line">        logger = asserts.<span class="builtin-name">get</span>(<span class="string">"logger"</span>)</span><br><span class="line">        <span class="keyword">while</span> 1:</span><br><span class="line">            data = queue.<span class="builtin-name">get</span>()</span><br><span class="line">            logger.<span class="builtin-name">info</span>(multiprocessing.current_process().name, f<span class="string">"队列出 &#123;data&#125;"</span>)</span><br><span class="line">            time.sleep(1)</span><br><span class="line"></span><br><span class="line">    def active_start(self, dict_memory: Dict, asserts: Dict):</span><br><span class="line">        logger = asserts.<span class="builtin-name">get</span>(<span class="string">"logger"</span>)</span><br><span class="line">        <span class="keyword">while</span> 1:</span><br><span class="line">            logger.<span class="builtin-name">info</span>(multiprocessing.current_process().name, f<span class="string">"字典长度为 &#123;len(dict_memory)&#125;"</span>)</span><br><span class="line">            time.sleep(4)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    Engine().start()</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">logger 初始化</span><br><span class="line">MainProcess 日志输出: test</span><br><span class="line">监控 日志输出: 队列入 <span class="number">0</span></span><br><span class="line">web 日志输出: 队列出 数据 <span class="number">0</span></span><br><span class="line">监控 日志输出: 共用字典入 <span class="number">0</span></span><br><span class="line">保活 日志输出: 字典长度为 <span class="number">0</span></span><br><span class="line">监控 日志输出: 队列入 <span class="number">1</span></span><br><span class="line">web 日志输出: 队列出 数据 <span class="number">1</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我们经常会有以下的场景需要处理&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一个进程接数据，另外一个进程怎么收数据&lt;/li&gt;
&lt;li&gt;怎么让多个进程共用一个日志模块&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="python" scheme="http://benpaodewoniu.github.io/categories/python/"/>
    
      <category term="进阶" scheme="http://benpaodewoniu.github.io/categories/python/%E8%BF%9B%E9%98%B6/"/>
    
      <category term="多进程 &amp; 多线程" scheme="http://benpaodewoniu.github.io/categories/python/%E8%BF%9B%E9%98%B6/%E5%A4%9A%E8%BF%9B%E7%A8%8B-%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    
      <category term="多进程" scheme="http://benpaodewoniu.github.io/categories/python/%E8%BF%9B%E9%98%B6/%E5%A4%9A%E8%BF%9B%E7%A8%8B-%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E5%A4%9A%E8%BF%9B%E7%A8%8B/"/>
    
      <category term="通信" scheme="http://benpaodewoniu.github.io/categories/python/%E8%BF%9B%E9%98%B6/%E5%A4%9A%E8%BF%9B%E7%A8%8B-%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E5%A4%9A%E8%BF%9B%E7%A8%8B/%E9%80%9A%E4%BF%A1/"/>
    
    
      <category term="multiprocess" scheme="http://benpaodewoniu.github.io/tags/multiprocess/"/>
    
      <category term="多进程" scheme="http://benpaodewoniu.github.io/tags/%E5%A4%9A%E8%BF%9B%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>python | 进城池和多进程应该如何选择</title>
    <link href="http://benpaodewoniu.github.io/2024/06/18/python205/"/>
    <id>http://benpaodewoniu.github.io/2024/06/18/python205/</id>
    <published>2024-06-17T16:00:38.000Z</published>
    <updated>2024-06-17T17:00:30.366Z</updated>
    
    <content type="html"><![CDATA[<p>这里主要讨论进程。</p><a id="more"></a><p>其实很简单，进程池中的进程是使用过之后，将空闲进程放回池子中，等待下一次使用，减少了创建的开销。</p><p>多进程应该运行长时间的程序采用。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这里主要讨论进程。&lt;/p&gt;
    
    </summary>
    
      <category term="python" scheme="http://benpaodewoniu.github.io/categories/python/"/>
    
      <category term="进阶" scheme="http://benpaodewoniu.github.io/categories/python/%E8%BF%9B%E9%98%B6/"/>
    
      <category term="多进程 &amp; 多线程" scheme="http://benpaodewoniu.github.io/categories/python/%E8%BF%9B%E9%98%B6/%E5%A4%9A%E8%BF%9B%E7%A8%8B-%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    
      <category term="多进程" scheme="http://benpaodewoniu.github.io/categories/python/%E8%BF%9B%E9%98%B6/%E5%A4%9A%E8%BF%9B%E7%A8%8B-%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E5%A4%9A%E8%BF%9B%E7%A8%8B/"/>
    
      <category term="进程池" scheme="http://benpaodewoniu.github.io/categories/python/%E8%BF%9B%E9%98%B6/%E5%A4%9A%E8%BF%9B%E7%A8%8B-%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E8%BF%9B%E7%A8%8B%E6%B1%A0/"/>
    
      <category term="进阶" scheme="http://benpaodewoniu.github.io/categories/python/%E8%BF%9B%E9%98%B6/%E5%A4%9A%E8%BF%9B%E7%A8%8B-%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E8%BF%9B%E7%A8%8B%E6%B1%A0/%E8%BF%9B%E9%98%B6/"/>
    
      <category term="进阶" scheme="http://benpaodewoniu.github.io/categories/python/%E8%BF%9B%E9%98%B6/%E5%A4%9A%E8%BF%9B%E7%A8%8B-%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E5%A4%9A%E8%BF%9B%E7%A8%8B/%E8%BF%9B%E9%98%B6/"/>
    
    
      <category term="multiprocess" scheme="http://benpaodewoniu.github.io/tags/multiprocess/"/>
    
      <category term="多进程" scheme="http://benpaodewoniu.github.io/tags/%E5%A4%9A%E8%BF%9B%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>nanon | nanon</title>
    <link href="http://benpaodewoniu.github.io/2024/06/13/nanon0/"/>
    <id>http://benpaodewoniu.github.io/2024/06/13/nanon0/</id>
    <published>2024-06-13T14:52:07.000Z</published>
    <updated>2024-06-17T17:03:03.458Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">密码等级 0 ！！！</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="fa24ac124b6b3b40b5beb9f11c0c1035687199f252426b406deba9ae1aa7e8b3">41b44efef159e4bb68479506e1793802e828c2a1dfa34ed2f774bba7436fa63919fbc5bd99088ad42ce18d6aee1e94a9e9006f860bee9e84d344f1d3ff89ffd40a528d13b2d32a43b72cb41b52dea46d952a50b6eefd1495e7774429b5e2a8026fb6b94256113431b47a7c3ade9684035057a8df65865748f1a6a51845e28b862c07dbf977e8d6854b1af122da153ce3335bf43c64e1d2e025b2515b4810d2eba4eb38b6ee4cdb738a74908d845092772bc733d1c7b8353e123318877bffff6097bc3a84ae41d224c520c914061cae1d103bc2ca4da1af29570cbba0d6305870cb0f01a3865d197524bf320f1f2be6850879be936dd453f6e1c6d4a1af9540e872196f60124e6fbd5525a55f206b303774fd7960b989529056f16134683d9f8370ea2a8724de95439d650b67d015756c0c31a3ff5428f4ee8b318a5884ee145e65c5ac6c79e0331c57ea17bed0a493d6185d71eb1fabc41d4301a61feb3357abffe9254b5285ae2b4f805880832fd7220b776d4f74d6f3653f2ab9513cbb24c21a45d78710af203b5d007029efb06f2e7c8c0f3b8d562e0974c6c8c754922bb157d468c8b6819c7f1c3aa898d6c113d4</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      密码等级 0
    
    </summary>
    
      <category term="区块链" scheme="http://benpaodewoniu.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
      <category term="dapp" scheme="http://benpaodewoniu.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/dapp/"/>
    
      <category term="2b" scheme="http://benpaodewoniu.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/dapp/2b/"/>
    
    
      <category term="2b" scheme="http://benpaodewoniu.github.io/tags/2b/"/>
    
  </entry>
  
  <entry>
    <title>thlm | 采集监控</title>
    <link href="http://benpaodewoniu.github.io/2024/06/10/thlm3/"/>
    <id>http://benpaodewoniu.github.io/2024/06/10/thlm3/</id>
    <published>2024-06-10T03:33:48.000Z</published>
    <updated>2024-06-10T07:32:09.258Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">密码等级 0 ！！！</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="b4bd258a0e8a4dcbeb7af8a81edd97aebec4bb27f8f1b650dde385d305f87f15"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      密码等级 0
    
    </summary>
    
      <category term="项目经历" scheme="http://benpaodewoniu.github.io/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/"/>
    
      <category term="中型" scheme="http://benpaodewoniu.github.io/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/%E4%B8%AD%E5%9E%8B/"/>
    
      <category term="thlm" scheme="http://benpaodewoniu.github.io/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/%E4%B8%AD%E5%9E%8B/thlm/"/>
    
    
      <category term="thlm" scheme="http://benpaodewoniu.github.io/tags/thlm/"/>
    
  </entry>
  
  <entry>
    <title>thegraph | thegraph 平台</title>
    <link href="http://benpaodewoniu.github.io/2024/06/10/thegraph0/"/>
    <id>http://benpaodewoniu.github.io/2024/06/10/thegraph0/</id>
    <published>2024-06-09T17:36:50.000Z</published>
    <updated>2024-06-10T06:55:03.213Z</updated>
    
    <content type="html"><![CDATA[<p>使用 <code>thegraph</code> 进行监控。</p><a id="more"></a><h2 id="swap"><a href="#swap" class="headerlink" title="swap"></a>swap</h2><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">swaps(<span class="name">orderBy:</span> timestamp, orderDirection: desc, where:</span><br><span class="line"> &#123; pair: <span class="string">"0x045a15bd4999cf396220f587fc77b4d159e8e67b"</span> &#125;</span><br><span class="line">) &#123;</span><br><span class="line">     pair &#123;</span><br><span class="line">       token0 &#123;</span><br><span class="line">         symbol</span><br><span class="line">       &#125;</span><br><span class="line">       token1 &#123;</span><br><span class="line">         symbol</span><br><span class="line">       &#125;</span><br><span class="line">     &#125;</span><br><span class="line">     amount0In</span><br><span class="line">     amount0Out</span><br><span class="line">     amount1In</span><br><span class="line">     amount1Out</span><br><span class="line">     amountUSD</span><br><span class="line">     from</span><br><span class="line">     to</span><br><span class="line">     sender</span><br><span class="line">     timestamp</span><br><span class="line">     logIndex</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="liquidity"><a href="#liquidity" class="headerlink" title="liquidity"></a>liquidity</h2><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="title">  liquidityPositionSnapshots(orderBy:timestamp,orderDirection:desc,where:</span>&#123;</span><br><span class="line"><span class="title">    pair:</span><span class="string">"0x045a15bd4999cf396220f587fc77b4d159e8e67b"</span></span><br><span class="line">  &#125;)&#123;</span><br><span class="line"><span class="built_in">    id,</span></span><br><span class="line"><span class="built_in">    block,</span></span><br><span class="line"><span class="built_in">    reserve0,</span></span><br><span class="line"><span class="built_in">    reserve1,</span></span><br><span class="line"><span class="built_in">    liquidityTokenTotalSupply,</span></span><br><span class="line"><span class="built_in">    liquidityTokenBalance,</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用 &lt;code&gt;thegraph&lt;/code&gt; 进行监控。&lt;/p&gt;
    
    </summary>
    
      <category term="区块链" scheme="http://benpaodewoniu.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
      <category term="dapp" scheme="http://benpaodewoniu.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/dapp/"/>
    
      <category term="thegraph" scheme="http://benpaodewoniu.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/dapp/thegraph/"/>
    
    
      <category term="thegraph" scheme="http://benpaodewoniu.github.io/tags/thegraph/"/>
    
  </entry>
  
  <entry>
    <title>chainbot | chainbot</title>
    <link href="http://benpaodewoniu.github.io/2024/06/10/chainbot0/"/>
    <id>http://benpaodewoniu.github.io/2024/06/10/chainbot0/</id>
    <published>2024-06-09T16:27:09.000Z</published>
    <updated>2024-06-10T06:54:03.844Z</updated>
    
    <content type="html"><![CDATA[<p>这个是我觉得非常好的监控平台。</p><a id="more"></a><h2 id="SWAP"><a href="#SWAP" class="headerlink" title="SWAP"></a>SWAP</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Channel:SWAP</span><br><span class="line">Pair:&#123;<span class="variable">$dex</span><span class="selector-class">.tokenBase</span>.symbol&#125;_&#123;<span class="variable">$dex</span><span class="selector-class">.tokenQuote</span>.symbol&#125;</span><br><span class="line">Price:&#123;<span class="variable">$dex</span>.priceUSD&#125;</span><br><span class="line">Token1Amount:&#123;<span class="variable">$dex</span><span class="selector-class">.tokenIn</span>.amount&#125;</span><br><span class="line">Token2Amount:&#123;<span class="variable">$dex</span><span class="selector-class">.tokenOut</span>.amount&#125;</span><br></pre></td></tr></table></figure><ul><li>条件<ul><li>WhaleBuySale</li><li>0</li><li>%</li></ul></li></ul><h2 id="LIQUIDITY"><a href="#LIQUIDITY" class="headerlink" title="LIQUIDITY"></a>LIQUIDITY</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Channel:LIQUIDITY</span><br><span class="line">Pair:&#123;<span class="variable">$dex</span><span class="selector-class">.tokenBase</span>.symbol&#125;_&#123;<span class="variable">$dex</span><span class="selector-class">.tokenQuote</span>.symbol&#125;</span><br><span class="line">Token1Amount:&#123;<span class="variable">$dex</span><span class="selector-class">.tokenBase</span>.amount&#125;</span><br><span class="line">Token2Amount:&#123;<span class="variable">$dex</span><span class="selector-class">.tokenQuote</span>.amount&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这个是我觉得非常好的监控平台。&lt;/p&gt;
    
    </summary>
    
      <category term="区块链" scheme="http://benpaodewoniu.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
      <category term="dapp" scheme="http://benpaodewoniu.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/dapp/"/>
    
      <category term="chainbot" scheme="http://benpaodewoniu.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/dapp/chainbot/"/>
    
    
      <category term="chainbot" scheme="http://benpaodewoniu.github.io/tags/chainbot/"/>
    
  </entry>
  
  <entry>
    <title>webhook | 使用以及技巧</title>
    <link href="http://benpaodewoniu.github.io/2024/06/10/webhook0/"/>
    <id>http://benpaodewoniu.github.io/2024/06/10/webhook0/</id>
    <published>2024-06-09T16:26:51.000Z</published>
    <updated>2024-06-10T06:57:04.421Z</updated>
    
    <content type="html"><![CDATA[<p>webhook 并不是一个新的技术，而是一种思想。</p><a id="more"></a><p>现在主流的客户端获取数据主流有两个方法</p><ul><li>restful</li><li>websocket</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;webhook 并不是一个新的技术，而是一种思想。&lt;/p&gt;
    
    </summary>
    
      <category term="区块链" scheme="http://benpaodewoniu.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
      <category term="webhook" scheme="http://benpaodewoniu.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/webhook/"/>
    
    
      <category term="webhook" scheme="http://benpaodewoniu.github.io/tags/webhook/"/>
    
  </entry>
  
  <entry>
    <title>blockchain | 监控链上数据平台</title>
    <link href="http://benpaodewoniu.github.io/2024/06/03/blockchain17/"/>
    <id>http://benpaodewoniu.github.io/2024/06/03/blockchain17/</id>
    <published>2024-06-03T15:25:41.000Z</published>
    <updated>2024-06-10T06:53:00.634Z</updated>
    
    <content type="html"><![CDATA[<p>监控链上数据平台。</p><a id="more"></a><h2 id="dbotx"><a href="#dbotx" class="headerlink" title="dbotx"></a>dbotx</h2><ul><li><a href="https://dbotx.com/zh/webhooks/nft">dbotx</a></li></ul><h2 id="chainbot"><a href="#chainbot" class="headerlink" title="chainbot"></a>chainbot</h2><ul><li><a href="https://chainbot.io/">chainbot</a></li></ul><h2 id="tokenview"><a href="#tokenview" class="headerlink" title="tokenview"></a>tokenview</h2><ul><li><a href="https://services.tokenview.io/cn">tokenview</a></li></ul><h2 id="nftscan"><a href="#nftscan" class="headerlink" title="nftscan"></a>nftscan</h2><ul><li><a href="https://www.nftscan.com/">nftscan</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;监控链上数据平台。&lt;/p&gt;
    
    </summary>
    
      <category term="区块链" scheme="http://benpaodewoniu.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
      <category term="基础" scheme="http://benpaodewoniu.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/%E5%9F%BA%E7%A1%80/"/>
    
      <category term="webhook" scheme="http://benpaodewoniu.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/webhook/"/>
    
    
      <category term="webhook" scheme="http://benpaodewoniu.github.io/tags/webhook/"/>
    
  </entry>
  
  <entry>
    <title>wordpress | 独立站点迁移至多站点</title>
    <link href="http://benpaodewoniu.github.io/2024/05/30/wordpress21/"/>
    <id>http://benpaodewoniu.github.io/2024/05/30/wordpress21/</id>
    <published>2024-05-30T09:26:21.000Z</published>
    <updated>2024-05-30T15:54:27.918Z</updated>
    
    <content type="html"><![CDATA[<p>这里的场景是，假设 <code>a.com</code> 是一个服务器，<code>b.com</code> 是另外一个服务器。</p><p>其中，<code>a.com</code> 是 <code>wordpress</code> 多站点模式。而，<code>gamefi.b.com</code> 是 <code>wordpress</code> 的一个独立站点。</p><p>现在想把 <code>gamefi.b.com</code> 迁移到 <code>a.com</code>，并给予域名 <code>gamefi.a.com</code>。</p><a id="more"></a><p>首先使用 <code>all in one</code> 将 <code>gamefi.b.com</code> 进行备份，然后将 <code>wpress</code> 文件下载到本地。</p><ul><li><a href="/2024/03/08/wordpress12/">wordpress | 多站点的备份和还原</a></li></ul><p>然后进入 <code>a.com</code> 的后台，使用 <code>all in one</code>，点击导入，线上传输 <code>wpress</code> 文件。</p><p>当传输完成后，执行，会跳出一个对话框，让你自己填写该站点的子域名 <code>url</code>。</p><p>填写完成后，就好了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这里的场景是，假设 &lt;code&gt;a.com&lt;/code&gt; 是一个服务器，&lt;code&gt;b.com&lt;/code&gt; 是另外一个服务器。&lt;/p&gt;
&lt;p&gt;其中，&lt;code&gt;a.com&lt;/code&gt; 是 &lt;code&gt;wordpress&lt;/code&gt; 多站点模式。而，&lt;code&gt;gamefi.b.com&lt;/code&gt; 是 &lt;code&gt;wordpress&lt;/code&gt; 的一个独立站点。&lt;/p&gt;
&lt;p&gt;现在想把 &lt;code&gt;gamefi.b.com&lt;/code&gt; 迁移到 &lt;code&gt;a.com&lt;/code&gt;，并给予域名 &lt;code&gt;gamefi.a.com&lt;/code&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="网站设计" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="WordPress" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/WordPress/"/>
    
      <category term="基础" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/WordPress/%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="WordPress" scheme="http://benpaodewoniu.github.io/tags/WordPress/"/>
    
  </entry>
  
  <entry>
    <title>wordpress | 多站点迁移恢复</title>
    <link href="http://benpaodewoniu.github.io/2024/05/30/wordpress20/"/>
    <id>http://benpaodewoniu.github.io/2024/05/30/wordpress20/</id>
    <published>2024-05-30T09:26:19.000Z</published>
    <updated>2024-05-30T15:55:38.423Z</updated>
    
    <content type="html"><![CDATA[<p>将多站点的 <code>wordpress</code> 从一个服务器上，迁移到另一个服务器上。</p><a id="more"></a><p>新服务器上，安装 <code>wordpress</code> 并开启多站点模式。</p><ul><li><a href="/2024/02/28/wordpress3/">wordpress | wordpress 搭建(包含多站点)</a></li></ul><p>ps: 多站点模式要选用子域名模式。</p><p>然后在新服务器上安装 <code>all in one</code> 插件。</p><ul><li><a href="/2024/03/08/wordpress12/">wordpress | 多站点的备份和还原</a></li></ul><p>旧服务器使用上述插件进行备份，然后新服务器上在插件备份目录使用 <code>wget</code> 的方法下载 <code>wpress</code> 文件。</p><p>新服务器下载好之后，就可以进行备份还原。</p><p>还原后，需要注意的是</p><ul><li><code>nginx</code> 备份还原</li><li>数据还原<ul><li><code>all in one</code> 只是备份了 <code>wp-content</code>、数据库等 <code>wordpress</code> 原生目录，自己的目录是没有备份的</li><li>所以，要把自己添加的那些目录迁移过来</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;将多站点的 &lt;code&gt;wordpress&lt;/code&gt; 从一个服务器上，迁移到另一个服务器上。&lt;/p&gt;
    
    </summary>
    
      <category term="网站设计" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="WordPress" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/WordPress/"/>
    
      <category term="基础" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/WordPress/%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="WordPress" scheme="http://benpaodewoniu.github.io/tags/WordPress/"/>
    
  </entry>
  
  <entry>
    <title>aion | 永恒合约测试</title>
    <link href="http://benpaodewoniu.github.io/2024/05/29/aion1/"/>
    <id>http://benpaodewoniu.github.io/2024/05/29/aion1/</id>
    <published>2024-05-29T01:27:53.000Z</published>
    <updated>2024-05-29T08:32:13.313Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">密码等级 0 ！！！</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="6a1c0d35f3ebff3484c4fbedad1cb8290a927197ae65f74e98b005cb835fdae8"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      密码等级 0
    
    </summary>
    
      <category term="区块链" scheme="http://benpaodewoniu.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
      <category term="dapp" scheme="http://benpaodewoniu.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/dapp/"/>
    
      <category term="aion" scheme="http://benpaodewoniu.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/dapp/aion/"/>
    
    
      <category term="aiarena" scheme="http://benpaodewoniu.github.io/tags/aiarena/"/>
    
  </entry>
  
  <entry>
    <title>服务端 | 服务商的安全组「出入站规则」</title>
    <link href="http://benpaodewoniu.github.io/2024/05/19/nginx11/"/>
    <id>http://benpaodewoniu.github.io/2024/05/19/nginx11/</id>
    <published>2024-05-18T16:32:32.000Z</published>
    <updated>2024-05-18T16:41:00.670Z</updated>
    
    <content type="html"><![CDATA[<p>这里说一下场景。</p><ul><li>页面 <code>vip.cc.com</code></li><li>有一个请求，<code>mm.aa.com/test</code></li><li>在 <code>mm.aa.com</code> 域名指向的服务器，要把相关请求代理到 <code>xxx.xxx.xxx.xxx:15120</code> 上</li></ul><a id="more"></a><p>所以，这里涉及到跨域和反向代理。</p><p>这里把 mm.aa.com 指向的服务器称之为 A。</p><h2 id="安全组"><a href="#安全组" class="headerlink" title="安全组"></a>安全组</h2><p><code>A</code> 服务器，由于要请求 <code>15120</code> 端口，所以，他的出规则需要打开 <code>15120</code>，入规则不用。</p><h2 id="nginx-配置"><a href="#nginx-配置" class="headerlink" title="nginx 配置"></a>nginx 配置</h2><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">        <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">        <span class="comment">## Your website name goes here.</span></span><br><span class="line">        <span class="attribute">server_name</span> mm.aa.bond;</span><br><span class="line">        <span class="attribute">listen</span> <span class="number">443</span> ssl;</span><br><span class="line">        <span class="comment">#listen [::]:443 ssl default_server;</span></span><br><span class="line">        <span class="attribute">ssl_certificate</span> /home/ubuntu/https/fullchain.crt;</span><br><span class="line">        <span class="attribute">ssl_certificate_key</span> /home/ubuntu/https/private.pem;</span><br><span class="line">        <span class="attribute">location</span> / &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 允许所有来源的跨域请求</span></span><br><span class="line">            <span class="attribute">if</span> (<span class="variable">$http_origin</span> <span class="regexp">~* (https?://(.+\.)?(cc.com|vip.cc.com)$))</span> &#123;</span><br><span class="line">                  <span class="attribute">add_header</span> <span class="string">'Access-Control-Allow-Origin'</span> <span class="variable">$http_origin</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="attribute">add_header</span> <span class="string">'Access-Control-Allow-Methods'</span> <span class="string">'GET, POST, OPTIONS'</span>;</span><br><span class="line">            <span class="attribute">add_header</span> <span class="string">'Access-Control-Allow-Headers'</span> <span class="string">'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range'</span>;</span><br><span class="line">            <span class="attribute">add_header</span> <span class="string">'Access-Control-Expose-Headers'</span> <span class="string">'Content-Length,Content-Range'</span>;                              </span><br><span class="line"><span class="comment">#           # 如果你的应用需要发送身份验证信息（如 cookie 或 HTTP 认证），你需要将 Access-Control-Allow-Credentials 设置为 true</span></span><br><span class="line">             <span class="attribute">add_header</span> <span class="string">'Access-Control-Allow-Credentials'</span> <span class="string">'true'</span>;</span><br><span class="line">             <span class="attribute">proxy_pass</span> http://xxx.xxx.xxx.xxx:15120/;</span><br><span class="line">       &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这里说一下场景。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;页面 &lt;code&gt;vip.cc.com&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;有一个请求，&lt;code&gt;mm.aa.com/test&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;在 &lt;code&gt;mm.aa.com&lt;/code&gt; 域名指向的服务器，要把相关请求代理到 &lt;code&gt;xxx.xxx.xxx.xxx:15120&lt;/code&gt; 上&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="网站设计" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="服务端" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/%E6%9C%8D%E5%8A%A1%E7%AB%AF/"/>
    
      <category term="基础" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/%E6%9C%8D%E5%8A%A1%E7%AB%AF/%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="服务端" scheme="http://benpaodewoniu.github.io/tags/%E6%9C%8D%E5%8A%A1%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>ink | ink</title>
    <link href="http://benpaodewoniu.github.io/2024/05/09/ink0/"/>
    <id>http://benpaodewoniu.github.io/2024/05/09/ink0/</id>
    <published>2024-05-08T16:59:43.000Z</published>
    <updated>2024-05-28T03:34:43.082Z</updated>
    
    <content type="html"><![CDATA[<ul><li><a href="https://beta.app.inkfinance.xyz/">ink</a></li></ul><a id="more"></a><ul><li><a href="https://testnet.snowtrace.io/token/0x38fEBf8bE6b47d82029178A5f4017c145541F703?chainId=43113">0x38fEBf8bE6b47d82029178A5f4017c145541F703</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://beta.app.inkfinance.xyz/&quot;&gt;ink&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="区块链" scheme="http://benpaodewoniu.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
      <category term="dapp" scheme="http://benpaodewoniu.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/dapp/"/>
    
      <category term="ink" scheme="http://benpaodewoniu.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/dapp/ink/"/>
    
    
      <category term="ink" scheme="http://benpaodewoniu.github.io/tags/ink/"/>
    
  </entry>
  
  <entry>
    <title>harborgate | harborgate</title>
    <link href="http://benpaodewoniu.github.io/2024/05/08/harborgate0/"/>
    <id>http://benpaodewoniu.github.io/2024/05/08/harborgate0/</id>
    <published>2024-05-07T16:22:24.000Z</published>
    <updated>2024-05-07T16:26:40.441Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">密码等级 0 ！！！</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="ebeaf770c320db8e5a5229c9e4bbc99034cf6d29762dbd04c2bcb12033637537"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      密码等级 0
    
    </summary>
    
      <category term="区块链" scheme="http://benpaodewoniu.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
      <category term="dapp" scheme="http://benpaodewoniu.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/dapp/"/>
    
      <category term="harborgate" scheme="http://benpaodewoniu.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/dapp/harborgate/"/>
    
    
      <category term="harborgate" scheme="http://benpaodewoniu.github.io/tags/harborgate/"/>
    
  </entry>
  
  <entry>
    <title>中国日报 | 数藏 chinese fu</title>
    <link href="http://benpaodewoniu.github.io/2024/05/05/fu0/"/>
    <id>http://benpaodewoniu.github.io/2024/05/05/fu0/</id>
    <published>2024-05-05T13:09:57.000Z</published>
    <updated>2024-05-07T10:02:10.684Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">密码等级 0 ！！！</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="aba5dcc1cf7c9889b4ab477440156d229d971f7759095bb1328ccfce4334e3b3">916b73f8ff8fb09a905bb4f5b4483f66c256cae8300d956dbfbbf8164c46ff59585187d1db56383d694cb4edea286c1e633943281842d60c3e633930352b8f5d0a3acd8d0ff29e542af26619171af31ef52d4d4e1934b103ac295e32dfe8baeacc48f568fbc28bf25d0b44f56b07632f090cca17b7050ea4d96983c43c14429bda5d5ce981eca5b1c53ff9798e272ca628a30240049cba1a960b1083d4cbd685b3842e13d056864318ee9bb67d711f8ff3eaecb3f8ef1f93639045d1251e553da445967000e515f092cd31169a825abe15ea4f19520e60487307c6fa18fa1c4a510885b85cd1424143e901083558aee0dee584ae7586ae1465494045840b843e6c42df7723a5c59aa524b4b222b7fb053833c04e9effb67db913340759d0e1008dd9ab4916ebb7313e5cb54c7e913707548e4502bb5319cd7a731beb30d2bccb20e3ddec7f2ddbd3500a46026491fa1ce040b2b9a211bddcc44ca005ac9ab08b805af1f2c2079744af1b9168ffe3b4637df7ec19dca9ed236511d703dbf639993c243270b7a7c47d1f161666b2ebc1ff2d4da675a4336479a9faafecac4c4a38e36ea919076ca2df08635a7b906e05a8068f315cb832d6fca43e39c0a23de3233e5e048592cf7f9bcfd55aef8bccf80413ac0157424b1311ca41504d68a0c63ce81b715091fe149f2009634b22fade646de44799855bb2d2d2604df2bc2500ebefca404fd1a8b500480bd75561c72e8399ae31c442135d008c3e40226c93da1f4840c6a07364e50ac8b758877eca1a39dc29912a8a27a3116cc31366f588a2ef8f834bd23f29ce3ddb3d4a111db9ccaf8275f5cb8d24266d2201f0a595f2371142b0c9f833ae9308c7af45263ac3abadff33bede35c91fd3835740cc8bb4dcc1f80d8feaa3ba01cb6dacda23055cdedbcaaaef692ca91d608e9feec15671d3f7f30feae68c25286a0f655932628ad359e2e061dad61234bda02674227bf8ad8431291210417c8b74c11a041cacc918cba7bb27307fdbec5bdc0130faa90c4f43cc6b6803e32bcff7b6c257796fda6804b8ffcd30133c83d59ab881629e2107d0e06d409415bfedfd1fc4aa5d401df5f6a3ddeef68a9bef9a67d12c1614419cffdcee4ef24b41c5ae8dbed516cabbc3148dcb5498126c448ffc420818024a17b5c9417c79aaf8d82a29f0a0041160e13a17ba007549c727ca219d0bd3fd65be5fbb290d670fe453600c4c1bffbf02a4a6d01327f6fb1fad434b118a67b956fa83</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      密码等级 0
    
    </summary>
    
      <category term="区块链" scheme="http://benpaodewoniu.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
      <category term="dapp" scheme="http://benpaodewoniu.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/dapp/"/>
    
      <category term="中国日报" scheme="http://benpaodewoniu.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/dapp/%E4%B8%AD%E5%9B%BD%E6%97%A5%E6%8A%A5/"/>
    
    
      <category term="中国日报" scheme="http://benpaodewoniu.github.io/tags/%E4%B8%AD%E5%9B%BD%E6%97%A5%E6%8A%A5/"/>
    
  </entry>
  
  <entry>
    <title>evm | 一个合约的测试案例</title>
    <link href="http://benpaodewoniu.github.io/2024/05/04/evm7/"/>
    <id>http://benpaodewoniu.github.io/2024/05/04/evm7/</id>
    <published>2024-05-04T06:44:58.000Z</published>
    <updated>2024-05-04T07:06:35.755Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">密码等级 0 ！！！</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="f8074dabecba67cd526bcbaba8e37bed49404f82ed02de764526ca36fdd05db4">ad07c3ba88032ed19ba9359c6555ab3c27cfd9ba47fb38d615ade23bde82012acc77c4639c3ac43ecc12ed822da080da5e261142961254336f0a663448ebfbc147f404f85e2d0efecdc829c127ca2e0d60a80a0e64dc75d9073ca462f84c3297e68c1159ffbb72783a52b50bf59a2529</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      密码等级 0
    
    </summary>
    
      <category term="区块链" scheme="http://benpaodewoniu.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
      <category term="平台 &amp;&amp; 公链 &amp;&amp; 项目 &amp;&amp; 方向" scheme="http://benpaodewoniu.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/%E5%B9%B3%E5%8F%B0-%E5%85%AC%E9%93%BE-%E9%A1%B9%E7%9B%AE-%E6%96%B9%E5%90%91/"/>
    
      <category term="evm" scheme="http://benpaodewoniu.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/%E5%B9%B3%E5%8F%B0-%E5%85%AC%E9%93%BE-%E9%A1%B9%E7%9B%AE-%E6%96%B9%E5%90%91/evm/"/>
    
      <category term="进阶" scheme="http://benpaodewoniu.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/%E5%B9%B3%E5%8F%B0-%E5%85%AC%E9%93%BE-%E9%A1%B9%E7%9B%AE-%E6%96%B9%E5%90%91/evm/%E8%BF%9B%E9%98%B6/"/>
    
    
      <category term="eth" scheme="http://benpaodewoniu.github.io/tags/eth/"/>
    
  </entry>
  
</feed>
