<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>犀牛的博客</title>
  
  <subtitle>姑苏城外一茅屋，万树梅花月满天</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://benpaodewoniu.github.io/"/>
  <updated>2024-09-26T16:25:50.138Z</updated>
  <id>http://benpaodewoniu.github.io/</id>
  
  <author>
    <name>犀牛</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>python | 安装自己的包</title>
    <link href="http://benpaodewoniu.github.io/2024/09/27/python209/"/>
    <id>http://benpaodewoniu.github.io/2024/09/27/python209/</id>
    <published>2024-09-26T16:20:15.000Z</published>
    <updated>2024-09-26T16:25:50.138Z</updated>
    
    <content type="html"><![CDATA[<p>这里说一下安装自己的包，以及要注意什么。</p><a id="more"></a><p>自己弄包，有 <code>setup.py</code>，举一个 <code>setup.py</code> 的例子</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> setuptools import setup</span><br><span class="line"></span><br><span class="line">setup(</span><br><span class="line">    <span class="attribute">name</span>=<span class="string">"NovelAssert"</span>,</span><br><span class="line">    <span class="attribute">version</span>=<span class="string">"0.0.1"</span>,</span><br><span class="line">    <span class="attribute">description</span>=<span class="string">"The Novel Asserts"</span>,</span><br><span class="line">    <span class="attribute">url</span>=<span class="string">""</span>,</span><br><span class="line">    <span class="attribute">author</span>=<span class="string">"XiNiu"</span>,</span><br><span class="line">    <span class="attribute">author_email</span>=<span class="string">"xiniublog@163.com"</span>,</span><br><span class="line">    <span class="attribute">license</span>=<span class="string">"GPL"</span>,</span><br><span class="line">    packages=[</span><br><span class="line">        <span class="string">"NovelAssert"</span>,</span><br><span class="line">        <span class="string">"NovelAssert.asserts"</span>,</span><br><span class="line">        <span class="string">"NovelAssert.enums"</span>,</span><br><span class="line">    ]</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>如果你使用 python setup.py install 进行安装，可能会导致卸载的时候，出现下面的错误。</p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ERROR: </span>Cannot uninstall 'NovelAssert'. It is a distutils installed project and thus we cannot accurately determine which files belong to it which would lead to only a partial uninstall.</span><br></pre></td></tr></table></figure><p>这是因为使用 <code>distutils</code> 安装的项目。 <code>pip</code> 无法准确确定哪些文件属于这个包，因此卸载操作只能部分完成，也就是无法完全卸载干净。</p><p>应该是用 <code>python setup.py bdist_wheel</code> 生成 whl 文件，然后安装这个文件。</p><p>如果，你不幸用 <code>python setup.py install</code> 安装了，卸载不掉，那么，你只能手动删除。</p><p>以 <code>anaconda3</code> 为例，如果你是 base 环境，那么，安装的目录在 <code>/Users/licong/anaconda3/lib/python3.7/site-packages</code></p><p>当然，你也可以用 <code>pip show &lt;package_name&gt;</code> 来获取安装路径。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这里说一下安装自己的包，以及要注意什么。&lt;/p&gt;
    
    </summary>
    
      <category term="python" scheme="http://benpaodewoniu.github.io/categories/python/"/>
    
      <category term="进阶" scheme="http://benpaodewoniu.github.io/categories/python/%E8%BF%9B%E9%98%B6/"/>
    
    
      <category term="python" scheme="http://benpaodewoniu.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>thlm | THLMNFT</title>
    <link href="http://benpaodewoniu.github.io/2024/09/24/thlm13/"/>
    <id>http://benpaodewoniu.github.io/2024/09/24/thlm13/</id>
    <published>2024-09-23T16:47:45.000Z</published>
    <updated>2024-09-24T12:40:35.137Z</updated>
    
    <content type="html"><![CDATA[<p>相关合约</p><ul><li><code>GAMENFT</code></li><li>质押合约</li></ul><a id="more"></a><h2 id="GAMENFT"><a href="#GAMENFT" class="headerlink" title="GAMENFT"></a>GAMENFT</h2><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// SPDX-License-Identifier: MIT</span></span><br><span class="line">pragma solidity ^<span class="number">0.8</span>.<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">import <span class="string">"@openzeppelin/contracts/token/ERC1155/ERC1155.sol"</span>;</span><br><span class="line">import <span class="string">"@openzeppelin/contracts/token/ERC20/IERC20.sol"</span>;</span><br><span class="line">import <span class="string">"@openzeppelin/contracts/access/Ownable.sol"</span>;</span><br><span class="line">import &#123;Pausable&#125; from <span class="string">"@openzeppelin/contracts/security/Pausable.sol"</span>;</span><br><span class="line">import &#123;ReentrancyGuard&#125; from <span class="string">"@openzeppelin/contracts/security/ReentrancyGuard.sol"</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">interface GameNFTStake &#123;</span><br><span class="line">    <span class="keyword">function</span> stake<span class="constructor">FromMint(<span class="params">address</span> <span class="params">user</span>, <span class="params">uint256</span> <span class="params">tokenId</span>)</span> external; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">contract GameNFT is ERC1155, Ownable, Pausable, ReentrancyGuard &#123;</span><br><span class="line">    IERC20 public gameToken; <span class="comment">// Game币的合约接口</span></span><br><span class="line">    GameNFTStake public stakeContract; <span class="comment">// 质押合约</span></span><br><span class="line">    address public daoAddress = <span class="number">0xbA97a5F7b8B662Dc5B34a283faD741dDc615E690</span>; <span class="comment">// 国库地址</span></span><br><span class="line">    address public burnAddress = <span class="number">0x000000000000000000000000000000000000dEaD</span>;<span class="comment">//销毁地址</span></span><br><span class="line">    address public preMintOwner;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    uint256 public burnPercentage = <span class="number">5</span>; <span class="comment">// 销毁比例</span></span><br><span class="line">    uint256 public daoPercentage = <span class="number">90</span>; <span class="comment">// 国库比例</span></span><br><span class="line">    uint256 public premiumPercentage = <span class="number">10</span>; <span class="comment">// 10%的溢价</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">struct</span> NFTType &#123;</span><br><span class="line">        uint256 price;</span><br><span class="line">        <span class="built_in">bool</span> pause;</span><br><span class="line">        <span class="built_in">bool</span> exist;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    mapping(uint256 =&gt; NFTType) public nftTypes; <span class="comment">// 存储每种NFT的信息</span></span><br><span class="line">    uint256 public nftTypeCount; <span class="comment">// NFT种类的计数器</span></span><br><span class="line"></span><br><span class="line">    event <span class="constructor">NFTMinted(<span class="params">address</span> <span class="params">minter</span>, <span class="params">address</span> <span class="params">refer</span>,<span class="params">uint256</span> <span class="params">tokenId</span>, <span class="params">uint256</span> <span class="params">amount</span>,<span class="params">uint256</span> <span class="params">price</span>)</span>;</span><br><span class="line">    event <span class="constructor">NewNFTTypeAdded(<span class="params">uint256</span> <span class="params">tokenId</span>, <span class="params">uint256</span> <span class="params">price</span>)</span>;</span><br><span class="line"></span><br><span class="line">    modifier only<span class="constructor">PreMintOwner()</span> &#123;</span><br><span class="line">        require(msg.sender<span class="operator"> == </span>preMintOwner, <span class="string">"only PreMintOwner"</span>);</span><br><span class="line">        _;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    constructor(address ownerAddress,address _gameToken) <span class="constructor">ERC1155(<span class="string">""</span>)</span>  <span class="constructor">Ownable(<span class="params">ownerAddress</span>)</span> &#123;</span><br><span class="line">        gameToken = <span class="constructor">IERC20(<span class="params">_gameToken</span>)</span>;</span><br><span class="line">        preMintOwner = ownerAddress;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> renounce<span class="constructor">PreMintOwner()</span> public onlyPreMintOwner &#123;</span><br><span class="line">        preMintOwner = address(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> change<span class="constructor">NFTPause(<span class="params">uint256</span> <span class="params">_tokenId</span>,<span class="params">bool</span> <span class="params">_pause</span>)</span> external onlyOwner&#123;</span><br><span class="line">        NFTType storage nftType = nftTypes<span class="literal">[<span class="identifier">_tokenId</span>]</span>;</span><br><span class="line">        nftType.pause = _pause;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> update<span class="constructor">DaoAddress(<span class="params">address</span> <span class="params">_daoAddress</span>)</span> external onlyOwner&#123;</span><br><span class="line">        daoAddress = _daoAddress;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> update<span class="constructor">BurnPercentage(<span class="params">uint</span> <span class="params">_burnPercentage</span>)</span> external onlyOwner&#123;</span><br><span class="line">        burnPercentage = _burnPercentage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> update<span class="constructor">DaoPercentage(<span class="params">uint</span> <span class="params">_daoPercentage</span>)</span> external onlyOwner&#123;</span><br><span class="line">        daoPercentage = _daoPercentage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> update<span class="constructor">PremiumPercentage(<span class="params">uint</span> <span class="params">_premiumPercentage</span>)</span> external onlyOwner&#123;</span><br><span class="line">        premiumPercentage = _premiumPercentage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> add<span class="constructor">NFTType(<span class="params">uint256</span> <span class="params">_price</span>)</span> external onlyOwner &#123;</span><br><span class="line">        nftTypeCount++;</span><br><span class="line">        nftTypes<span class="literal">[<span class="identifier">nftTypeCount</span>]</span> = <span class="constructor">NFTType(<span class="params">_price</span>, <span class="params">false</span>,<span class="params">true</span>)</span>;</span><br><span class="line">        emit <span class="constructor">NewNFTTypeAdded(<span class="params">nftTypeCount</span>, <span class="params">_price</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> set<span class="constructor">StakingContract(<span class="params">address</span> <span class="params">_stakingContract</span>)</span> external onlyOwner &#123;</span><br><span class="line">        stakeContract = <span class="constructor">GameNFTStake(<span class="params">_stakingContract</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> mint<span class="constructor">PreNFT(<span class="params">uint256</span> <span class="params">_tokenId</span>)</span> external nonReentrant onlyPreMintOwner&#123;</span><br><span class="line">        require(!nftTypes<span class="literal">[<span class="identifier">_tokenId</span>]</span>.pause, <span class="string">"NFT is paused"</span>);</span><br><span class="line">        require(nftTypes<span class="literal">[<span class="identifier">_tokenId</span>]</span>.exist, <span class="string">"NFT is not exist"</span>);</span><br><span class="line">        uint256 totalPrice = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="constructor">_mintNFT(<span class="params">totalPrice</span>, <span class="params">burnAddress</span>)</span>;</span><br><span class="line">        <span class="constructor">_mint(<span class="params">msg</span>.<span class="params">sender</span>, <span class="params">_tokenId</span>, 1, <span class="string">""</span>)</span>; <span class="comment">// 直接 mint</span></span><br><span class="line"></span><br><span class="line">        emit <span class="constructor">NFTMinted(<span class="params">msg</span>.<span class="params">sender</span>,<span class="params">burnAddress</span>, <span class="params">_tokenId</span>, 1,<span class="params">totalPrice</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> mint<span class="constructor">OriginNFT(<span class="params">uint256</span> <span class="params">_tokenId</span>,<span class="params">address</span> <span class="params">_referrer</span>)</span> external nonReentrant whenNotPaused&#123;</span><br><span class="line">        require(!nftTypes<span class="literal">[<span class="identifier">_tokenId</span>]</span>.pause, <span class="string">"NFT is paused"</span>);</span><br><span class="line">        require(nftTypes<span class="literal">[<span class="identifier">_tokenId</span>]</span>.exist, <span class="string">"NFT is not exist"</span>);</span><br><span class="line">        uint256 totalPrice = nftTypes<span class="literal">[<span class="identifier">_tokenId</span>]</span>.price;</span><br><span class="line"></span><br><span class="line">        <span class="constructor">_mintNFT(<span class="params">totalPrice</span>, <span class="params">_referrer</span>)</span>;</span><br><span class="line"></span><br><span class="line">        <span class="constructor">_mint(<span class="params">msg</span>.<span class="params">sender</span>, <span class="params">_tokenId</span>, 1, <span class="string">""</span>)</span>; <span class="comment">// 质押</span></span><br><span class="line"></span><br><span class="line">        emit <span class="constructor">NFTMinted(<span class="params">msg</span>.<span class="params">sender</span>,<span class="params">_referrer</span>, <span class="params">_tokenId</span>, 1,<span class="params">totalPrice</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> mint<span class="constructor">PremiumNFT(<span class="params">uint256</span> <span class="params">_tokenId</span>,<span class="params">address</span> <span class="params">_referrer</span>)</span> external nonReentrant whenNotPaused&#123;</span><br><span class="line">        require(!nftTypes<span class="literal">[<span class="identifier">_tokenId</span>]</span>.pause, <span class="string">"NFT is paused"</span>);</span><br><span class="line">        require(nftTypes<span class="literal">[<span class="identifier">_tokenId</span>]</span>.exist, <span class="string">"NFT is not exist"</span>);</span><br><span class="line">        uint256 totalPrice = nftTypes<span class="literal">[<span class="identifier">_tokenId</span>]</span>.price<span class="operator"> * </span>(<span class="number">100</span> + premiumPercentage)<span class="operator"> / </span><span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">        <span class="constructor">_mintNFT(<span class="params">totalPrice</span>, <span class="params">_referrer</span>)</span>;</span><br><span class="line">        <span class="constructor">_mint(<span class="params">address</span>(<span class="params">stakeContract</span>)</span>, _tokenId, <span class="number">1</span>, <span class="string">""</span>); <span class="comment">// mint 到质押合约中</span></span><br><span class="line">        stakeContract.stake<span class="constructor">FromMint(<span class="params">msg</span>.<span class="params">sender</span>,<span class="params">_tokenId</span>)</span>;</span><br><span class="line"></span><br><span class="line">        emit <span class="constructor">NFTMinted(<span class="params">msg</span>.<span class="params">sender</span>,<span class="params">_referrer</span>, <span class="params">_tokenId</span>, 1,<span class="params">totalPrice</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> <span class="constructor">_mintNFT(<span class="params">uint</span> <span class="params">totalPrice</span>,<span class="params">address</span> <span class="params">_referrer</span>)</span> internal &#123;</span><br><span class="line">        require(gameToken.balance<span class="constructor">Of(<span class="params">msg</span>.<span class="params">sender</span>)</span> &gt;= totalPrice, <span class="string">"Game is not enough"</span>);</span><br><span class="line">        require(gameToken.allowance(msg.sender, address(this)) &gt;= totalPrice, <span class="string">"Game approve is not enough"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 转移 GAME 代币到合约</span></span><br><span class="line">        require(gameToken.transfer<span class="constructor">From(<span class="params">msg</span>.<span class="params">sender</span>, <span class="params">address</span>(<span class="params">this</span>)</span>, totalPrice), <span class="string">"transfer fail"</span>);</span><br><span class="line">        <span class="comment">// 计算各部分金额</span></span><br><span class="line">        uint256 burnAmount = (totalPrice<span class="operator"> * </span>burnPercentage)<span class="operator"> / </span><span class="number">100</span>; <span class="comment">// 销毁</span></span><br><span class="line">        uint256 daoAmount = (totalPrice<span class="operator"> * </span>daoPercentage)<span class="operator"> / </span><span class="number">100</span>; <span class="comment">// 进国库</span></span><br><span class="line">        uint256 referralAmount = totalPrice - burnAmount - daoAmount; <span class="comment">// 返佣</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 销毁部分GAME代币</span></span><br><span class="line">        gameToken.transfer(burnAddress, burnAmount);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 转移到国库</span></span><br><span class="line">        gameToken.transfer(daoAddress, daoAmount);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 处理返佣（如果有推荐人）</span></span><br><span class="line">        <span class="keyword">if</span> (_referrer != address(<span class="number">0</span>)<span class="operator"> &amp;&amp; </span>_referrer != msg.sender) &#123;</span><br><span class="line">            gameToken.transfer(_referrer, referralAmount);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 如果没有有效的推荐人，将返佣部分也转入国库</span></span><br><span class="line">            gameToken.transfer(daoAddress, referralAmount);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> set<span class="constructor">URI(<span class="params">string</span> <span class="params">memory</span> <span class="params">newuri</span>)</span> external onlyOwner &#123;</span><br><span class="line">        <span class="constructor">_setURI(<span class="params">newuri</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="质押合约"><a href="#质押合约" class="headerlink" title="质押合约"></a>质押合约</h2><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// SPDX-License-Identifier: MIT</span></span><br><span class="line">pragma solidity ^<span class="number">0.8</span>.<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">import <span class="string">"@openzeppelin/contracts/token/ERC1155/IERC1155.sol"</span>;</span><br><span class="line">import <span class="string">"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol"</span>;</span><br><span class="line">import <span class="string">"@openzeppelin/contracts/access/Ownable.sol"</span>;</span><br><span class="line"></span><br><span class="line">contract GameNFTStake is ERC1155Holder, Ownable &#123;</span><br><span class="line"></span><br><span class="line">    IERC1155 public nftContract;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">struct</span> StakedNFT &#123;</span><br><span class="line">        uint256 tokenId;</span><br><span class="line">        uint256 amount;</span><br><span class="line">        uint256 stakedAt;</span><br><span class="line">        uint256 unlockTime;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    mapping(address =&gt; StakedNFT<span class="literal">[]</span>) public stakedNFTs;</span><br><span class="line"></span><br><span class="line">    event <span class="constructor">NFTStaked(<span class="params">address</span> <span class="params">user</span>, <span class="params">uint256</span> <span class="params">tokenId</span>, <span class="params">uint256</span> <span class="params">amount</span>, <span class="params">uint256</span> <span class="params">unlockTime</span>)</span>;</span><br><span class="line">    event <span class="constructor">NFTUnstaked(<span class="params">address</span> <span class="params">user</span>, <span class="params">uint256</span> <span class="params">tokenId</span>, <span class="params">uint256</span> <span class="params">amount</span>)</span>;</span><br><span class="line"></span><br><span class="line">    constructor<span class="literal">()</span> <span class="constructor">Ownable(<span class="params">msg</span>.<span class="params">sender</span>)</span>  &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> set<span class="constructor">NftContract(<span class="params">address</span> <span class="params">_nftContract</span>)</span> external onlyOwner &#123;</span><br><span class="line">        nftContract = <span class="constructor">IERC1155(<span class="params">_nftContract</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> stake<span class="constructor">FromMint(<span class="params">address</span> <span class="params">user</span>, <span class="params">uint256</span> <span class="params">tokenId</span>)</span> external &#123;</span><br><span class="line">        require(msg.sender<span class="operator"> == </span>address(nftContract), <span class="string">"Only NFT contract can call this function"</span>);</span><br><span class="line">        <span class="constructor">_stake(<span class="params">user</span>,<span class="params">tokenId</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> stake(uint256 tokenId) external &#123;</span><br><span class="line">        require(nftContract.balance<span class="constructor">Of(<span class="params">msg</span>.<span class="params">sender</span>, <span class="params">tokenId</span>)</span> &gt;= <span class="number">1</span>, <span class="string">"Insufficient balance"</span>);</span><br><span class="line">        nftContract.safe<span class="constructor">TransferFrom(<span class="params">msg</span>.<span class="params">sender</span>, <span class="params">address</span>(<span class="params">this</span>)</span>, tokenId, <span class="number">1</span>, <span class="string">""</span>);</span><br><span class="line">        <span class="constructor">_stake(<span class="params">msg</span>.<span class="params">sender</span>,<span class="params">tokenId</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> <span class="constructor">_stake(<span class="params">address</span> <span class="params">user</span>,<span class="params">uint256</span> <span class="params">tokenId</span>)</span> internal &#123;</span><br><span class="line">        uint256 unlockTime = block.timestamp + <span class="number">30</span> seconds;</span><br><span class="line">        stakedNFTs<span class="literal">[<span class="identifier">user</span>]</span>.push(<span class="constructor">StakedNFT(<span class="params">tokenId</span>, 1, <span class="params">block</span>.<span class="params">timestamp</span>, <span class="params">unlockTime</span>)</span>);</span><br><span class="line">        emit <span class="constructor">NFTStaked(<span class="params">user</span>, <span class="params">tokenId</span>, 1, <span class="params">unlockTime</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> unstake(uint256 index) external &#123;</span><br><span class="line">        require(index &lt; stakedNFTs<span class="literal">[<span class="identifier">msg</span>.<span class="identifier">sender</span>]</span>.length, <span class="string">"Invalid index"</span>);</span><br><span class="line">        StakedNFT storage stakedNFT = stakedNFTs<span class="literal">[<span class="identifier">msg</span>.<span class="identifier">sender</span>]</span><span class="literal">[<span class="identifier">index</span>]</span>;</span><br><span class="line">        require(block.timestamp &gt;= stakedNFT.unlockTime, <span class="string">"Staking period not finished"</span>);</span><br><span class="line"></span><br><span class="line">        uint256 tokenId = stakedNFT.tokenId;</span><br><span class="line">        uint256 amount = stakedNFT.amount;</span><br><span class="line"></span><br><span class="line">        nftContract.safe<span class="constructor">TransferFrom(<span class="params">address</span>(<span class="params">this</span>)</span>, msg.sender, tokenId, amount, <span class="string">""</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Remove the unstaked NFT from the array</span></span><br><span class="line">        stakedNFTs<span class="literal">[<span class="identifier">msg</span>.<span class="identifier">sender</span>]</span><span class="literal">[<span class="identifier">index</span>]</span> = stakedNFTs<span class="literal">[<span class="identifier">msg</span>.<span class="identifier">sender</span>]</span><span class="literal">[<span class="identifier">stakedNFTs</span>[<span class="identifier">msg</span>.<span class="identifier">sender</span>]</span>.length - <span class="number">1</span>];</span><br><span class="line">        stakedNFTs<span class="literal">[<span class="identifier">msg</span>.<span class="identifier">sender</span>]</span>.pop<span class="literal">()</span>;</span><br><span class="line"></span><br><span class="line">        emit <span class="constructor">NFTUnstaked(<span class="params">msg</span>.<span class="params">sender</span>, <span class="params">tokenId</span>, <span class="params">amount</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> get<span class="constructor">StakedNFTs(<span class="params">address</span> <span class="params">user</span>)</span> external view returns (StakedNFT<span class="literal">[]</span> memory) &#123;</span><br><span class="line">        return stakedNFTs<span class="literal">[<span class="identifier">user</span>]</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;相关合约&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;GAMENFT&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;质押合约&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="项目经历" scheme="http://benpaodewoniu.github.io/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/"/>
    
      <category term="中型" scheme="http://benpaodewoniu.github.io/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/%E4%B8%AD%E5%9E%8B/"/>
    
      <category term="thlm" scheme="http://benpaodewoniu.github.io/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/%E4%B8%AD%E5%9E%8B/thlm/"/>
    
      <category term="NFT" scheme="http://benpaodewoniu.github.io/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/%E4%B8%AD%E5%9E%8B/thlm/NFT/"/>
    
    
      <category term="thlm" scheme="http://benpaodewoniu.github.io/tags/thlm/"/>
    
  </entry>
  
  <entry>
    <title>lark | lark 机器人</title>
    <link href="http://benpaodewoniu.github.io/2024/09/22/lark0/"/>
    <id>http://benpaodewoniu.github.io/2024/09/22/lark0/</id>
    <published>2024-09-22T07:13:43.000Z</published>
    <updated>2024-09-22T07:52:56.862Z</updated>
    
    <content type="html"><![CDATA[<p>本次的 <code>lark</code> 并不使用官方提供的 <code>SDK</code>，而是用最基本的 <code>requests</code> 请求，进行调用。</p><a id="more"></a><h2 id="创建应用"><a href="#创建应用" class="headerlink" title="创建应用"></a>创建应用</h2><p><img src="/images/lark/0_0.png" alt=""></p><p>点击创建应用进入网页，然后选择</p><p><img src="/images/lark/0_1.png" alt=""></p><p>在下面填写应用信息</p><p><img src="/images/lark/0_2.png" alt=""></p><p>添加机器人功能</p><p><img src="/images/lark/0_4.png" alt=""></p><p>这样一个机器人应用就创建好了。</p><h2 id="机器人如何运行"><a href="#机器人如何运行" class="headerlink" title="机器人如何运行"></a>机器人如何运行</h2><p>首先 <code>lark</code> 的机器人是由权限构成，比如，你要有私聊人的能力、获取人聊天记录的能力、@别人的能力，你必须要开启相关的权限。</p><p><img src="/images/lark/0_5.png" alt=""></p><p><code>lark</code> 机器人有两种情况</p><ul><li>信息发送出去</li><li>信息发送过来</li></ul><p>发送出去很好理解，就是你给别人发信息，在群里发信息。</p><p>信息发送过来，指的是别人主动给机器人发信息，别人在群里主动 @ 机器人。信息发送过来叫做事件。你的机器人只有绑定事件才能得到相应的信息。怎么理解呢？</p><p><img src="/images/lark/0_6.png" alt=""></p><p>你需要弄一个 <code>webhook</code> 服务，然后绑定一些事件，比如 @事件、私聊事件等。</p><p>ps: <code>webhook</code> 添加完成后，<code>lark</code> 会推送信息进行验证，下面的代码有体现。</p><p>一旦有事件发生，lark 就会把相关的信息通过配置的 webhook 推送给你。</p><p>这就是整个机器人的数据流向。</p><p>机器人并不是开发完就能使用了，而是必须发版本，这个发版本的意思并不是让你把代码上传，而是对权限和事件进行发版本。</p><p>比如，你开启了 @别人的权限，那么，你必须让你机器人进行版本升级，这个版本通过公司创始人审核后，才能用，换句话说，所谓的发版本就是让人审核而已。</p><h2 id="编写机器人代码"><a href="#编写机器人代码" class="headerlink" title="编写机器人代码"></a>编写机器人代码</h2><ul><li><a href="https://open.larksuite.com/document/server-docs/getting-started/overview-of-app-scopes">doc</a></li></ul><p>获取 api 和 secret。</p><p><code>lark</code> 的认证 <code>auth</code> ，每隔 <code>2</code> 小时会更新一次。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><span class="line">import json</span><br><span class="line">import time</span><br><span class="line">import traceback</span><br><span class="line"><span class="keyword">from</span> asyncio import Queue</span><br><span class="line"></span><br><span class="line">import requests</span><br><span class="line"><span class="keyword">from</span> flask import jsonify</span><br><span class="line"><span class="keyword">from</span> lark_oapi.api.im.v1 import *</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> Common.ReturnInfo.ReturnInfo import ReturnInfo</span><br><span class="line"><span class="keyword">from</span> ThlmObject.ThlmObject import WebParam</span><br><span class="line"></span><br><span class="line">app_id = <span class="string">"****"</span></span><br><span class="line">app_secret = <span class="string">"*****"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class LarkService:</span><br><span class="line"></span><br><span class="line">    def __init__(self):</span><br><span class="line">        self.auth = <span class="string">""</span></span><br><span class="line">        self.auth_time = 0</span><br><span class="line"></span><br><span class="line">    def deal(self, web_param: WebParam, return_info: ReturnInfo):</span><br><span class="line"></span><br><span class="line">        <span class="builtin-name">info</span> = web_param.data</span><br><span class="line">        queue:<span class="built_in"> Queue </span>= web_param.queue</span><br><span class="line">        dict_memory: Dict = web_param.dict_memory</span><br><span class="line">        logger = web_param.asserts.<span class="builtin-name">get</span>(<span class="string">"logger"</span>)</span><br><span class="line">        ding = web_param.asserts.<span class="builtin-name">get</span>(<span class="string">"ding"</span>)</span><br><span class="line"></span><br><span class="line">        now = int(time.time())</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> now - self.auth_time &gt; 1.5 * 3600 <span class="keyword">or</span> len(self.auth) == 0:</span><br><span class="line">            try:</span><br><span class="line">                _auth = self.get_auth()</span><br><span class="line">                self.auth_time = int(time.time())</span><br><span class="line">                self.auth = _auth</span><br><span class="line">                logger.<span class="builtin-name">info</span>(f<span class="string">"auth 获得成功 &#123;self.auth&#125;"</span>)</span><br><span class="line">            except Exception as e:</span><br><span class="line">                logger.<span class="builtin-name">error</span>(f<span class="string">"lark 获取 auth 失败"</span>)</span><br><span class="line">                logger.<span class="builtin-name">error</span>(traceback.format_exc())</span><br><span class="line"></span><br><span class="line">        try:</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> isinstance(info, bytes):</span><br><span class="line">                <span class="builtin-name">info</span> = json.loads(info.decode(<span class="string">"utf-8"</span>))</span><br><span class="line"></span><br><span class="line">            challenge = info.<span class="builtin-name">get</span>(<span class="string">"challenge"</span>, None)</span><br><span class="line">            <span class="builtin-name">print</span>(info)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> challenge:</span><br><span class="line"></span><br><span class="line">            # webhook 最开始添加的时候会进行验证，这个 challenge 就是回复 webhook 验证的</span><br><span class="line"></span><br><span class="line">                # 提取challenge值</span><br><span class="line">                challenge = <span class="builtin-name">info</span>[<span class="string">'challenge'</span>]</span><br><span class="line">                # 构造响应</span><br><span class="line">                response = &#123;</span><br><span class="line">                    <span class="string">"challenge"</span>: challenge</span><br><span class="line">                &#125;</span><br><span class="line">                return jsonify(response)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                chat_type = info.<span class="builtin-name">get</span>(<span class="string">"event"</span>).<span class="builtin-name">get</span>(<span class="string">"message"</span>).<span class="builtin-name">get</span>(<span class="string">"chat_type"</span>)</span><br><span class="line">                open_id = <span class="string">""</span></span><br><span class="line">                open_type = <span class="string">""</span></span><br><span class="line">                <span class="keyword">if</span> chat_type == <span class="string">"p2p"</span>:</span><br><span class="line">                    # 私聊</span><br><span class="line">                    open_type = <span class="string">"open_id"</span></span><br><span class="line">                    open_id = info.<span class="builtin-name">get</span>(<span class="string">"event"</span>).<span class="builtin-name">get</span>(<span class="string">"sender"</span>).<span class="builtin-name">get</span>(<span class="string">"sender_id"</span>).<span class="builtin-name">get</span>(<span class="string">"open_id"</span>)</span><br><span class="line">                elif chat_type == <span class="string">"group"</span>:</span><br><span class="line">                    # 群组</span><br><span class="line">                    open_type = <span class="string">"chat_id"</span></span><br><span class="line">                    open_id = info.<span class="builtin-name">get</span>(<span class="string">"event"</span>).<span class="builtin-name">get</span>(<span class="string">"message"</span>).<span class="builtin-name">get</span>(<span class="string">"chat_id"</span>)</span><br><span class="line">                # message = json.loads(info.<span class="builtin-name">get</span>(<span class="string">"event"</span>).<span class="builtin-name">get</span>(<span class="string">"message"</span>).<span class="builtin-name">get</span>(<span class="string">"content"</span>))</span><br><span class="line">                message = json.loads(info.<span class="builtin-name">get</span>(<span class="string">"event"</span>).<span class="builtin-name">get</span>(<span class="string">"message"</span>).<span class="builtin-name">get</span>(<span class="string">"content"</span>)).<span class="builtin-name">get</span>(<span class="string">"text"</span>).replace(<span class="string">"@_user_1"</span>,</span><br><span class="line">                                                                                                          <span class="string">""</span>)</span><br><span class="line">                # 回复消息</span><br><span class="line">                parent_id = info.<span class="builtin-name">get</span>(<span class="string">"event"</span>).<span class="builtin-name">get</span>(<span class="string">"message"</span>).<span class="builtin-name">get</span>(<span class="string">"parent_id"</span>, None)</span><br><span class="line">                <span class="keyword">if</span> parent_id is <span class="keyword">not</span> None:</span><br><span class="line">                    message = message + <span class="string">"\n"</span> + self.get_message(parent_id)</span><br><span class="line">                self.send(open_type, open_id, message)</span><br><span class="line"></span><br><span class="line">                return jsonify(return_info.common_success().to_dict())</span><br><span class="line">        except Exception as e:</span><br><span class="line">            logger.<span class="builtin-name">error</span>(f<span class="string">"lark service 处理错误"</span>)</span><br><span class="line">            logger.<span class="builtin-name">error</span>(traceback.format_exc())</span><br><span class="line">            return jsonify(return_info.common_fail().to_dict())</span><br><span class="line"></span><br><span class="line">    def get_auth(self):</span><br><span class="line">        url = <span class="string">"https://open.feishu.cn/open-apis/auth/v3/tenant_access_token/internal"</span></span><br><span class="line">        headers = &#123;</span><br><span class="line">            <span class="string">"Content-Type"</span>: <span class="string">"application/json"</span></span><br><span class="line">        &#125;</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">"app_id"</span>: app_id,</span><br><span class="line">            <span class="string">"app_secret"</span>: app_secret</span><br><span class="line">        &#125;</span><br><span class="line">        response = requests.post(url, <span class="attribute">headers</span>=headers, <span class="attribute">data</span>=json.dumps(data))</span><br><span class="line">        return response.json().<span class="builtin-name">get</span>(<span class="string">"tenant_access_token"</span>)</span><br><span class="line"></span><br><span class="line">    def get_message(self, parent_id):</span><br><span class="line">        url = f<span class="string">"https://open.larksuite.com/open-apis/im/v1/messages/&#123;parent_id&#125;"</span></span><br><span class="line">        headers = &#123;</span><br><span class="line">            <span class="string">'Authorization'</span>: f<span class="string">"Bearer &#123;self.auth&#125;"</span>,  # your access token</span><br><span class="line">            <span class="string">'Content-Type'</span>: <span class="string">'application/json'</span></span><br><span class="line">        &#125;</span><br><span class="line">        response = requests.request(<span class="string">"GET"</span>, url, <span class="attribute">headers</span>=headers)</span><br><span class="line">        <span class="builtin-name">info</span> = response.json()</span><br><span class="line">        return json.loads(info.<span class="builtin-name">get</span>(<span class="string">"data"</span>).<span class="builtin-name">get</span>(<span class="string">"items"</span>)[0].<span class="builtin-name">get</span>(<span class="string">"body"</span>).<span class="builtin-name">get</span>(<span class="string">"content"</span>)).<span class="builtin-name">get</span>(<span class="string">"text"</span>)</span><br><span class="line"></span><br><span class="line">    def send(self, open_type, open_id, message):</span><br><span class="line">        url = <span class="string">"https://open.larksuite.com/open-apis/im/v1/messages"</span></span><br><span class="line">        params = &#123;<span class="string">"receive_id_type"</span>: open_type&#125;</span><br><span class="line">        <span class="builtin-name">info</span> = &#123;</span><br><span class="line">            <span class="string">"text"</span>: message</span><br><span class="line">        &#125;</span><br><span class="line">        req = &#123;</span><br><span class="line">            <span class="string">"receive_id"</span>: open_id,  # chat id</span><br><span class="line">            <span class="string">"msg_type"</span>: <span class="string">"text"</span>,</span><br><span class="line">            <span class="string">"content"</span>: json.dumps(info),</span><br><span class="line">        &#125;</span><br><span class="line">        payload = json.dumps(req)</span><br><span class="line">        headers = &#123;</span><br><span class="line">            <span class="string">'Authorization'</span>: f<span class="string">"Bearer &#123;self.auth&#125;"</span>,  # your access token</span><br><span class="line">            <span class="string">'Content-Type'</span>: <span class="string">'application/json'</span></span><br><span class="line">        &#125;</span><br><span class="line">        response = requests.request(<span class="string">"POST"</span>, url, <span class="attribute">params</span>=params, <span class="attribute">headers</span>=headers, <span class="attribute">data</span>=payload)</span><br><span class="line"></span><br><span class="line">        # <span class="builtin-name">print</span>(response.json())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    LarkService().send(<span class="string">"chat_id"</span>, <span class="string">"********"</span>, <span class="string">"123"</span>)</span><br></pre></td></tr></table></figure><p>上面的代码分别实现了</p><ul><li>私聊</li><li>回复消息</li><li>webhook 验证</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本次的 &lt;code&gt;lark&lt;/code&gt; 并不使用官方提供的 &lt;code&gt;SDK&lt;/code&gt;，而是用最基本的 &lt;code&gt;requests&lt;/code&gt; 请求，进行调用。&lt;/p&gt;
    
    </summary>
    
      <category term="平台" scheme="http://benpaodewoniu.github.io/categories/%E5%B9%B3%E5%8F%B0/"/>
    
      <category term="lark" scheme="http://benpaodewoniu.github.io/categories/%E5%B9%B3%E5%8F%B0/lark/"/>
    
    
      <category term="lark" scheme="http://benpaodewoniu.github.io/tags/lark/"/>
    
  </entry>
  
  <entry>
    <title>wordpress | Bibishup</title>
    <link href="http://benpaodewoniu.github.io/2024/09/21/wordpress35/"/>
    <id>http://benpaodewoniu.github.io/2024/09/21/wordpress35/</id>
    <published>2024-09-21T08:34:11.000Z</published>
    <updated>2024-09-21T08:41:01.561Z</updated>
    
    <content type="html"><![CDATA[<p>预览地址</p><ul><li><a href="https://themeforest.net/item/bibishup-baby-kids-ecommerce-elementor-pro-template-kit/51457727">Bibishup</a></li></ul><a id="more"></a><ul><li><a href="https://github.com/benpaodewoniu/software/tree/master/wordpress/wordpress_theme">下载</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;预览地址&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://themeforest.net/item/bibishup-baby-kids-ecommerce-elementor-pro-template-kit/51457727&quot;&gt;Bibishup&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="网站设计" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="WordPress" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/WordPress/"/>
    
      <category term="主题" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/WordPress/%E4%B8%BB%E9%A2%98/"/>
    
      <category term="elementor" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/WordPress/%E4%B8%BB%E9%A2%98/elementor/"/>
    
      <category term="Bibishup" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/WordPress/%E4%B8%BB%E9%A2%98/elementor/Bibishup/"/>
    
    
      <category term="WordPress" scheme="http://benpaodewoniu.github.io/tags/WordPress/"/>
    
  </entry>
  
  <entry>
    <title>wordpress | 转化为静态网站</title>
    <link href="http://benpaodewoniu.github.io/2024/09/21/wordpress34/"/>
    <id>http://benpaodewoniu.github.io/2024/09/21/wordpress34/</id>
    <published>2024-09-21T06:47:52.000Z</published>
    <updated>2024-09-21T07:15:16.669Z</updated>
    
    <content type="html"><![CDATA[<p>将自己的网站变成静态网站。</p><a id="more"></a><p><img src="/images/wordpress/34_0.png" alt=""></p><p>这个插件免费功能就能把网站变成静态的，很好用。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;将自己的网站变成静态网站。&lt;/p&gt;
    
    </summary>
    
      <category term="网站设计" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="WordPress" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/WordPress/"/>
    
      <category term="插件" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/WordPress/%E6%8F%92%E4%BB%B6/"/>
    
      <category term="Simply Static" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/WordPress/%E6%8F%92%E4%BB%B6/Simply-Static/"/>
    
    
      <category term="WordPress" scheme="http://benpaodewoniu.github.io/tags/WordPress/"/>
    
  </entry>
  
  <entry>
    <title>wordpress | WooCommerce 支付</title>
    <link href="http://benpaodewoniu.github.io/2024/09/19/wordpress33/"/>
    <id>http://benpaodewoniu.github.io/2024/09/19/wordpress33/</id>
    <published>2024-09-18T16:15:36.000Z</published>
    <updated>2024-09-21T08:20:52.181Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="网站设计" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="WordPress" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/WordPress/"/>
    
      <category term="插件" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/WordPress/%E6%8F%92%E4%BB%B6/"/>
    
      <category term="WooCommerce" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/WordPress/%E6%8F%92%E4%BB%B6/WooCommerce/"/>
    
      <category term="基础" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/WordPress/%E6%8F%92%E4%BB%B6/WooCommerce/%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="WordPress" scheme="http://benpaodewoniu.github.io/tags/WordPress/"/>
    
  </entry>
  
  <entry>
    <title>wordpress | Themify - WooCommerce Product Filter</title>
    <link href="http://benpaodewoniu.github.io/2024/09/19/wordpress32/"/>
    <id>http://benpaodewoniu.github.io/2024/09/19/wordpress32/</id>
    <published>2024-09-18T16:11:23.000Z</published>
    <updated>2024-09-18T16:15:23.306Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="网站设计" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="WordPress" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/WordPress/"/>
    
      <category term="插件" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/WordPress/%E6%8F%92%E4%BB%B6/"/>
    
      <category term="WooCommerce" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/WordPress/%E6%8F%92%E4%BB%B6/WooCommerce/"/>
    
      <category term="插件" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/WordPress/%E6%8F%92%E4%BB%B6/WooCommerce/%E6%8F%92%E4%BB%B6/"/>
    
      <category term="Themify - WooCommerce Product Filter" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/WordPress/%E6%8F%92%E4%BB%B6/WooCommerce/%E6%8F%92%E4%BB%B6/Themify-WooCommerce-Product-Filter/"/>
    
    
      <category term="WordPress" scheme="http://benpaodewoniu.github.io/tags/WordPress/"/>
    
  </entry>
  
  <entry>
    <title>wordpress | Custom Product tabs for WooCommerce</title>
    <link href="http://benpaodewoniu.github.io/2024/09/19/wordpress31/"/>
    <id>http://benpaodewoniu.github.io/2024/09/19/wordpress31/</id>
    <published>2024-09-18T16:11:21.000Z</published>
    <updated>2024-09-18T16:14:17.161Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="网站设计" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="WordPress" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/WordPress/"/>
    
      <category term="插件" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/WordPress/%E6%8F%92%E4%BB%B6/"/>
    
      <category term="WooCommerce" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/WordPress/%E6%8F%92%E4%BB%B6/WooCommerce/"/>
    
      <category term="插件" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/WordPress/%E6%8F%92%E4%BB%B6/WooCommerce/%E6%8F%92%E4%BB%B6/"/>
    
      <category term="Custom Product tabs for WooCommerce" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/WordPress/%E6%8F%92%E4%BB%B6/WooCommerce/%E6%8F%92%E4%BB%B6/Custom-Product-tabs-for-WooCommerce/"/>
    
    
      <category term="WordPress" scheme="http://benpaodewoniu.github.io/tags/WordPress/"/>
    
  </entry>
  
  <entry>
    <title>thlm | 如何降低出流量</title>
    <link href="http://benpaodewoniu.github.io/2024/09/17/thlm12/"/>
    <id>http://benpaodewoniu.github.io/2024/09/17/thlm12/</id>
    <published>2024-09-17T15:07:23.000Z</published>
    <updated>2024-09-17T15:32:45.604Z</updated>
    
    <content type="html"><![CDATA[<p>服务器的出流量在 <code>0.153U/G</code>，如果，你的访问量非常大的话，这部分流量花销还很大的。</p><a id="more"></a><p>这里用 <code>api</code> 服务器做一个例子，如何有效的降低出流量。</p><p>先说一下我的背景，我有一台 <code>api</code> 服务器，其中有一个接口是返回市场所有商品的信息的，一共接近<code>500</code>个信息，发出去的话，数据量非常大，尤其是在没有 <code>api</code> 验证的情况下，很多人会私自频繁调用。那台服务器一个月用了 <code>440G</code>。</p><p>我们目前的方案是这样的。那个 <code>api</code> 关于 <code>restful</code> 不对外公开了，而是单独写一个 <code>websocket</code> 服务器进行推送，当有数据变化的时候，才会给客户端推送数据。</p><p>客户端打开网页，连接 <code>websocket</code> 服务器，<code>websocket</code> 服务器本地请求 <code>api restful</code> 数据，当数据变化的时候，给客户端推送数据。</p><p>关于 nginx 这样配置</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">server_name</span> ***;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">443</span> ssl;</span><br><span class="line">    <span class="attribute">ssl_certificate</span> /root/https/fullchain.crt;</span><br><span class="line">    <span class="attribute">ssl_certificate_key</span> /root/https/private.pem;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">location</span> / &#123;</span><br><span class="line">        <span class="attribute">proxy_pass</span> http://127.0.0.1:8081/; <span class="comment"># 本地 flask 程序</span></span><br><span class="line">        <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>本地 <code>flask</code> 程序</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, current_app</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.before_request</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">log_request_info</span><span class="params">()</span>:</span></span><br><span class="line">    client_ip = request.headers.get(<span class="string">'X-Real-IP'</span>, request.remote_addr)</span><br><span class="line">    current_app.logger.info(<span class="string">f"real IP: <span class="subst">&#123;client_ip&#125;</span> IP: <span class="subst">&#123;request.remote_addr&#125;</span> 调用了 <span class="subst">&#123;request.path&#125;</span>"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">"Hello, World!"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(debug=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>因为咱们是用 <code>nginx</code> 做的转发</p><p>所以</p><ul><li><code>request.remote_addr</code> 为 <code>127.0.0.1</code></li><li><code>client_ip</code> 为真实 <code>IP</code></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;服务器的出流量在 &lt;code&gt;0.153U/G&lt;/code&gt;，如果，你的访问量非常大的话，这部分流量花销还很大的。&lt;/p&gt;
    
    </summary>
    
      <category term="项目经历" scheme="http://benpaodewoniu.github.io/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/"/>
    
      <category term="中型" scheme="http://benpaodewoniu.github.io/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/%E4%B8%AD%E5%9E%8B/"/>
    
      <category term="thlm" scheme="http://benpaodewoniu.github.io/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/%E4%B8%AD%E5%9E%8B/thlm/"/>
    
      <category term="基础" scheme="http://benpaodewoniu.github.io/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/%E4%B8%AD%E5%9E%8B/thlm/%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="thlm" scheme="http://benpaodewoniu.github.io/tags/thlm/"/>
    
  </entry>
  
  <entry>
    <title>ton | 使用 AI 创建游戏前端</title>
    <link href="http://benpaodewoniu.github.io/2024/09/12/ton1/"/>
    <id>http://benpaodewoniu.github.io/2024/09/12/ton1/</id>
    <published>2024-09-12T07:55:34.000Z</published>
    <updated>2024-09-17T15:05:16.171Z</updated>
    
    <content type="html"><![CDATA[<p>使用 <code>AI</code> 写游戏。</p><p>我使用的是 <code>claude3.5</code> 写的，下面记录了整个对话过程，希望对你有启发。</p><a id="more"></a><ul><li>我要做了一个H5的游戏，游戏名称叫做星际矿区。我的游戏设定如下，在星际大航海时代，人们驾驶着飞船寻找有价值的星球，目前找到的星球有THLM星球，永恒之塔星球，Lumi星球等。每一个星球都可以进行挖矿，挖出他们星球独有的。为了增加挖掘效率，他们可以在星际道具店购买一些增值性道具。道具可以凭借银币兑换。银币获得有几个途径，活动分发，签到和邀请。</li><li>看起来非常不错，不过，银币只能靠活动、邀请和签到获取，在星球上挖掘属于这个星球的特产。比如，THLM星球，挖的是THLM金属，在Lumi星球挖的是Lumi金属，在永恒之塔星球挖的是永恒金属</li><li>做的真不错，这是一款运行在手机上的游戏，麻烦做成手机游戏界面</li><li>真不错，我现在想设计一下游戏界面。首先游戏界面由几个部分组成，背景，上边栏，左边栏和右边栏。上边栏有着银币的图标，银币图标右边显示你拥有多少个银币。左边栏，从上到下分别是星球图标，道具商店图标，每日签到图标，邀请图标，右边栏从上到下分别是个人状态图标和仓库图标。</li><li>请给我完整的代码，虽然上面描述的是图标，但是，我们并没有UI，请用方框加方框中的文字代替。</li><li>功能确实按照我的想法实现了，麻烦再把界面设计的好看一些。另外，背景部分是全局的，请给我完整代码</li><li>我觉得提示用 alert 非常不友好，能使用游戏内的提示吗？要求，提示在出现两秒后，自动消失</li><li>请给我完整代码</li><li>能把左边栏和右边栏的图标排列的更紧凑一些吗</li><li>我想在左边栏的下面新增一个背景按钮，点击后，会介绍这个游戏的背景，背景内容如下：2049年，人类终于有了星际航海的能力。在无垠的宇宙中，人们发现了各种各样的星球，每种星球都蕴含独特的特产，矿产具备非常高的经济价值。你也可以对我的背景进行扩展。请给我完整的代码</li><li>非常不错，我现在要对两种道具设置功能，其中，效率提升器可以提升 1.5 倍的挖矿速度，持续 2 分钟。自动挖矿机可以自动挖掘选择的星球的矿产，持续 2 分钟，每 3 秒钟挖一次。</li><li>请给我完整的代码</li><li>做的非常不错，但是，我想把邀请再细化一些，点击邀请后，会出现一个弹窗，里面放着你的邀请链接，旁边有一个复制按钮，可以进行复制。另外，在右边栏增加一个邮箱图标，点击邮箱后，会出现一些信息，这些信息来自后端的推送，比如给该账户增加多少银币</li><li>我想对星球界面进行优化，点击星球后，界面应该只出现星球相关的按钮，不应该出现开始挖矿和道具相关的显示。当点击具体星球后，进入到具体星球内部，才会先开始挖矿和道具相关的显示</li><li>现在对道具商店进行界面优化，上面只展示道具，下面显示价格和买入数量和购买按钮</li><li>道具商店增加一个购买银币的选项，0.001个 TON 可以购买1000个银币</li><li>左边栏在道具商店下方增加一个冒险图标，点击图标后，进入新的界面，界面上面放着10个怪物，请随机给这是个怪物取名字，如果点击怪物后，会出现怪物的介绍，请帮我随机生成一些怪物介绍，每个怪物的特点不一样。另外，这个界面有一个开始冒险按钮。</li><li>给我完整的代码</li><li>继续生成</li><li>把冒险图标放在道具商店图标下面</li><li>每日签到图标、冒险图标，点了没反应</li><li>给我完整代码</li><li>继续生成</li><li>很不错，我现在相对冒险界面进行更改。一行排列3个怪物，并且，界面要有怪物图谱四个字，怪物图谱下面就是怪物。</li><li>个人状态去除现在的显示内容，增加状态值，比如力量、敏捷、体制。并且，道具商店按照分类的情况进行展示。道具目前有以下几个分类：挖矿道具、冒险道具、装备、银币。其中，挖矿道具包括：效率提升器和自动挖矿机，冒险道具包括回血丹、大力丸、急行符，装备包括衣服、鞋子、裤子、剑、头盔。银币就是现在的购买银币。并且，每一种道具点击后，都会有一个弹窗介绍该道具的作用，请自行填写之前没出现过的道具介绍，然后弹窗可以输入数量，还有购买按钮</li><li>在银币旁边增加一个金币的显示，显示样子仿照银币</li><li>优化一下整体显示、交互，给我完整代码</li><li>继续生成</li><li>能否把左边栏和右边栏的图标以相关的字符表情的形式替换</li><li>请给每一个怪物都随机分配力量、体制和速度属性</li><li>请给我完整代码吧</li><li>把怪物名称也换成字符图标吧</li><li>继续生成</li><li>很不错，不过，点开怪物后，怪物介绍界面应该出现该怪物的名字</li><li>继续生成</li><li>我刚才表述不清楚，不是在怪物图鉴界面显示名称，是点开怪物图标后，在怪物介绍页显示该怪物名称</li><li>左边栏最上面，增加一个任务图标，也用字符表情。点击任务图标后，会出现任务界面，任务界面的任务有几种人物分类，日常任务、必做任务、创世福利。每种任务的展现形式是，描述该任务的一段话，后面跟着 Go 按钮。请随机为该种任务分类创建几个任务</li><li>图标有点大，缩小一些</li><li>图标缩到30px</li><li>给我完整代码吧</li><li>继续生成</li><li>把星球和道具也变成字符图标吧。另外，星球界面点进去要显示该星球的名称，和这个星球的简单介绍，请随机为星球生成相应的介绍。</li><li>继续生成</li><li>怎么把道具分类给去掉了？加上道具分类，给我完整代码</li><li>继续生成</li><li>道具商店的银币怎么没有了？另外，在星球界面，把挖矿道具以字符图标的形式进行显示，并优化一下排列方式，在星球界面，点击某一个道具后，会出现一个弹窗，里面有道具的图标、名称、拥有的数量以及使用和关闭按钮，使用的按钮就是用这个道具，关闭的功能是关闭这个弹窗，给我完整代码</li><li>继续生成</li><li>继续</li><li>可探索的星球界面，里面的内容只显示星球图标，不显示星球名称</li><li>给我完整的css</li><li>把css中.planet的border-radius: 50%;去掉</li><li>很好，但是，我注意到任务中心中 Go 的按钮大小不一，这不好看，按钮的大小应该只比Go大一些，在所有任务行中，尺寸是固定的，根据这个来优化一下该界面的排列。</li><li>给我完整代码</li><li>继续</li><li>现在对冒险模式界面中的开始冒险按钮，做一些更新。点击开始冒险按钮后，会出现冒险界面。冒险界面从上到下由几个模块组成，冒险过程模块，状态模块，道具模块。其中，冒险过程记录着遭遇的怪物，每轮冒险共会遇到十次经历，每次经历会遇到十个怪物中的一种，或者好运，没遇到怪物。每个经历遭遇的事情完全随机。如果遇到怪物，那么双方会展开攻击，按照回合制的方式，敏捷高的一方先展开攻击。攻击的逻辑是，如果力量比对方的防御和体质加起来的数值还高，则攻击方获胜。如果力量和对方的防御和体质加起来的数值相等或者低，那么，则按照防御和体质都可以被力量减去，但是，如果对方防御值少了，那么，自身的力量也失去等量的值。体质减少则不会影响力量。每轮经历不允许中途再次使用冒险道具。只有经历完成，才允许使用冒险道具。当冒险道具使用完成后，可以主动点击下一个经历，然后进入下一个战斗场景。直到十次经历完成，或者自身体质为零，结束本次冒险。状态模块，主要显示你的力量、防御和体质，还有你所穿戴的装备。装备要用字符图标显示。道具界面，显示冒险道具，冒险道具以字符图标的形式进行显示，并优化一下排列方式，在冒险界面，点击某一个道具后，会出现一个弹窗，里面有道具的图标、名称、拥有的数量以及使用和关闭按钮，使用的按钮就是用这个道具，关闭的功能是关闭这个弹窗，在经历进行的过程中，冒险道具的图标应为不可用状态。给我完整代码。</li><li>给我全部的完整代码</li><li>继续生成</li><li>继续生成</li><li>我注意到在冒险界面，点了下一个经历后，就变灰了，不能再点了。一次冒险共有十次经历。</li><li><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">我注意到几个问题</span><br><span class="line"></span><br><span class="line"><span class="number">1.</span> 道具全程显示灰色，无法点击。正确的逻辑是，经历结束后，可以点击道具</span><br><span class="line"><span class="number">2.</span> 和怪物战斗的过程中，自身的状态值没有变化。</span><br><span class="line"></span><br><span class="line">另外，增加几项优化点</span><br><span class="line"></span><br><span class="line"><span class="number">1.</span> 冒险中吃的冒险道具不会影响本身的状态，只会影响冒险过程中的状态。</span><br><span class="line"><span class="number">2.</span> 本身的状态初始化的各个状态都是<span class="number">10</span>，可以穿戴装备进行提升，装备的数量可以叠加，比如，我购买了两把剑，那么，我的力量也会叠加两把剑的力量</span><br><span class="line"><span class="number">3.</span> 战斗过程中，根据敏捷值，敏捷值高的一方先发动攻击，后面每一次攻击都是对方攻击。比如A的敏捷值高于B，那么，攻击的回合应该是ABABAB，直到一方因为体质归零而结束战斗。</span><br><span class="line"><span class="number">4.</span> 冒险界面中，冒险模块的信息要出现怪物的数值，以及每次攻击后怪物的数值的变化。每一次经历中出现的怪物都是独立的。关于细化出现的信息，我举一个例子，第一次经历：遭遇某某怪物，怪物数值如下，***，第一回合：怪物发起攻击，冒险者防御下降多少，体质下降多少，怪物防御下降多少，体质下降多少，第二回合：***，根据我上面的描述，再优化一下表述。</span><br></pre></td></tr></table></figure></li><li>继续生成</li><li>继续生成</li><li><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">有很多可以优化的点</span><br><span class="line"></span><br><span class="line"><span class="number">1.</span> 个人状态界面的装备道具不全，并且，如果道具有多个，需要显示道具数量</span><br><span class="line"><span class="number">2.</span> 装备道具的实际效果如下：衣服加<span class="number">5</span>防御，鞋子加<span class="number">5</span>敏捷，裤子加<span class="number">5</span>防御，剑加<span class="number">5</span>力量，头盔加<span class="number">5</span>防御</span><br><span class="line"><span class="number">3.</span> 增加新装备道具，饰品，作用是加<span class="number">5</span>体质</span><br><span class="line"><span class="number">4.</span> 冒险界面中下一个经历，在没有按之前文本显示“开始冒险”，点击开始冒险后，按钮文本显示变成“继续”</span><br><span class="line"><span class="number">5.</span> 大力丸的作用是增加<span class="number">10</span>点力量，疾行符的作用是增加<span class="number">10</span>点敏捷。冒险道具的属性增加只是暂时性的，冒险结束后，冒险道具的增益就结束了</span><br></pre></td></tr></table></figure></li><li>继续生成</li><li>继续生成</li><li>个人状态界面的装备道具为啥是英文显示，直接用装备道具名显示。另外，道具后面的数量错了，买多少都显示 0 个</li><li>继续生成</li><li>继续生成</li><li>我装备了12个剑，最后力量显示只有25，如果最初力量是10，每把剑提供5点力量，那么，我装备了12把应该显示70点力量。查一下其它装备道具有没有这个问题，并改成正确的逻辑。</li><li>我发现在冒险过程中吃的冒险道具会影响个人状态。关于状态修改如下，当别人离开冒险界面后，个人状态的计算是初始各属性的10点加上装备属性的加持。另外，大力丸的作用是一次性增加10点力量，疾行符是一次性增加10点敏捷。</li><li>冒险过程的逻辑有一点不对，如果你有防御力，那么别人首先会攻击你的防御，并且，防御被剪后是不能恢复的。比如，你的体质是10，防御是5，怪物有10点力量。怪物攻击你后，你的体质变为5，防御变为0。</li><li>非常好，我现在要增加一些冒险过程中的体验。如果在冒险过程结束，会出现一个弹窗，如果打败了所有怪物，完成十轮经历，则说恭喜你，获得10枚金币，同时，金币的数量增加10枚，如果被怪物击败，则弹窗显示，在冒险过程中不幸被击败！</li></ul><p>相关的 html 文件如下。</p><p><a href="/htmls/ton/1.html">下载HTML</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用 &lt;code&gt;AI&lt;/code&gt; 写游戏。&lt;/p&gt;
&lt;p&gt;我使用的是 &lt;code&gt;claude3.5&lt;/code&gt; 写的，下面记录了整个对话过程，希望对你有启发。&lt;/p&gt;
    
    </summary>
    
      <category term="区块链" scheme="http://benpaodewoniu.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
      <category term="平台 &amp;&amp; 公链 &amp;&amp; 项目 &amp;&amp; 方向" scheme="http://benpaodewoniu.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/%E5%B9%B3%E5%8F%B0-%E5%85%AC%E9%93%BE-%E9%A1%B9%E7%9B%AE-%E6%96%B9%E5%90%91/"/>
    
      <category term="ton" scheme="http://benpaodewoniu.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/%E5%B9%B3%E5%8F%B0-%E5%85%AC%E9%93%BE-%E9%A1%B9%E7%9B%AE-%E6%96%B9%E5%90%91/ton/"/>
    
      <category term="应用" scheme="http://benpaodewoniu.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/%E5%B9%B3%E5%8F%B0-%E5%85%AC%E9%93%BE-%E9%A1%B9%E7%9B%AE-%E6%96%B9%E5%90%91/ton/%E5%BA%94%E7%94%A8/"/>
    
      <category term="星际挖矿" scheme="http://benpaodewoniu.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/%E5%B9%B3%E5%8F%B0-%E5%85%AC%E9%93%BE-%E9%A1%B9%E7%9B%AE-%E6%96%B9%E5%90%91/ton/%E5%BA%94%E7%94%A8/%E6%98%9F%E9%99%85%E6%8C%96%E7%9F%BF/"/>
    
    
      <category term="ton" scheme="http://benpaodewoniu.github.io/tags/ton/"/>
    
  </entry>
  
  <entry>
    <title>wordpress | Elementor Template Kits</title>
    <link href="http://benpaodewoniu.github.io/2024/09/11/wordpress30/"/>
    <id>http://benpaodewoniu.github.io/2024/09/11/wordpress30/</id>
    <published>2024-09-11T15:57:13.000Z</published>
    <updated>2024-09-11T16:31:40.077Z</updated>
    
    <content type="html"><![CDATA[<p><code>Elementor Template Kits</code> 是用 <code>elementor</code> 制作的主题，这里说一下整个过程。</p><p>这里主要是电商。</p><p>整个过程是对</p><ul><li><a href="https://help.market.envato.com/hc/en-us/articles/36033428836889-How-to-Upload-Install-Elementor-Template-Kits-from-Themeforest-to-WordPress">How-to-Upload-Install-Elementor-Template-Kits-from-Themeforest-to-WordPress</a></li></ul><p>的中文翻译和实操过程的理解。</p><a id="more"></a><p>在安装之前，默认你已经搞定 wordpress 了，可以参考</p><ul><li><a href="/2024/02/28/wordpress3/">wordpress | wordpress 搭建(包含多站点)</a></li></ul><h2 id="设置固定链接"><a href="#设置固定链接" class="headerlink" title="设置固定链接"></a>设置固定链接</h2><p><img src="/images/wordpress/30_0.png" alt=""></p><p>一定要是图中这么设置。</p><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><ul><li>elementor</li><li>elementor pro</li><li>Envato Elements -  Photos &amp; Elementor Templates</li><li>woocommerce</li></ul><p><img src="/images/wordpress/30_1.png" alt=""></p><p>并且激活。</p><h2 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h2><ul><li>安装 <code>hello elementor</code></li></ul><p><img src="/images/wordpress/30_2.png" alt=""></p><h2 id="elementor-设置"><a href="#elementor-设置" class="headerlink" title="elementor 设置"></a>elementor 设置</h2><p>点击 <code>elementor -&gt; setting</code> 选择 「特征」。</p><p><img src="/images/wordpress/30_3.png" alt=""></p><h2 id="Elements-设置"><a href="#Elements-设置" class="headerlink" title="Elements 设置"></a>Elements 设置</h2><p><img src="/images/wordpress/30_4.png" alt=""></p><p>图中要全部都是绿色。</p><h2 id="导入-kits"><a href="#导入-kits" class="headerlink" title="导入 kits"></a>导入 kits</h2><p><img src="/images/wordpress/30_5.png" alt=""></p><p>点击绿框，上传 <code>kits</code>。图中我已经安装了一个主题。</p><p>如果上面有橙色弹窗，说明这个主题有其他的依赖没完成，按照橙色提示进行安装即可。</p><p><img src="/images/wordpress/30_9.png" alt=""></p><h2 id="主题设置"><a href="#主题设置" class="headerlink" title="主题设置"></a>主题设置</h2><p><img src="/images/wordpress/30_6.png" alt=""></p><p><code>kits</code> 成功安装后，我们点进主题里面。</p><p>第一个叫做 <code>global kit style</code>,这是导入该 <code>kit</code> 的各种配置，这个要第一个导入。</p><p>图中是我导入之后的，正常来说每个元素下面都有一个 <code>import</code>按钮，导入完 <code>global kit style</code> 之后，其它的依次导入即可。</p><p>主题导入进去后，并没有生成页面，你点击所有页面里看，可能有页面，但是，那是 <code>hello elementor</code> 主题的页面。</p><h2 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h2><p>kits 导入的其实是模板。</p><p><img src="images/wordpress/30_7.png" alt=""></p><h2 id="页面"><a href="#页面" class="headerlink" title="页面"></a>页面</h2><p>模板怎么用呢？我们创建页面后，通过导入模板来进行使用。</p><p>新建页面，使用 <code>elementor</code> 编辑后，点击文件夹选项。</p><p><img src="images/wordpress/30_8.png" alt=""></p><p>选择要导入的模板即可。</p><h2 id="页面设置"><a href="#页面设置" class="headerlink" title="页面设置"></a>页面设置</h2><p>有的 <code>kits</code> 中含有 <code>elementor</code> 创建的 <code>header</code> 和 <code>footer</code> 等，我们要进行应用。</p><p>首先，对页面要进行设置。</p><p><img src="/images/wordpress/30_10.png" alt=""></p><p>点击小齿轮，进入页面设置，要设置「<code>elementor 全宽</code>」。</p><p>然后对 <code>footer</code> 等模板进行设置。</p><p><img src="/images/wordpress/30_11.png" alt=""></p><p>选择 Theme Builder，进行显示设置。</p><p><img src="/images/wordpress/30_12.png" alt=""></p><p>选择条件，并选择应用到全部页面。</p><h2 id="设置主页"><a href="#设置主页" class="headerlink" title="设置主页"></a>设置主页</h2><p>将制作的 <code>home</code> 页面发布，然后在自定义主页中，选择该页面。</p><h2 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h2><p>有的时候，页面中某些内容是自动生成的，比如 <code>woocommerce</code> 的内容。</p><p><img src="/images/wordpress/30_13.png" alt=""></p><p>这里出现的是打折后的产品，所以，需要你添加产品才会出现。</p><p><img src="/images/wordpress/30_14.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;Elementor Template Kits&lt;/code&gt; 是用 &lt;code&gt;elementor&lt;/code&gt; 制作的主题，这里说一下整个过程。&lt;/p&gt;
&lt;p&gt;这里主要是电商。&lt;/p&gt;
&lt;p&gt;整个过程是对&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://help.market.envato.com/hc/en-us/articles/36033428836889-How-to-Upload-Install-Elementor-Template-Kits-from-Themeforest-to-WordPress&quot;&gt;How-to-Upload-Install-Elementor-Template-Kits-from-Themeforest-to-WordPress&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;的中文翻译和实操过程的理解。&lt;/p&gt;
    
    </summary>
    
      <category term="网站设计" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="WordPress" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/WordPress/"/>
    
      <category term="插件" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/WordPress/%E6%8F%92%E4%BB%B6/"/>
    
      <category term="elementor" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/WordPress/%E6%8F%92%E4%BB%B6/elementor/"/>
    
    
      <category term="WordPress" scheme="http://benpaodewoniu.github.io/tags/WordPress/"/>
    
  </entry>
  
  <entry>
    <title>flask | 如何将字典中的数据按照顺序发送给前端</title>
    <link href="http://benpaodewoniu.github.io/2024/09/08/flask1/"/>
    <id>http://benpaodewoniu.github.io/2024/09/08/flask1/</id>
    <published>2024-09-08T05:25:57.000Z</published>
    <updated>2024-09-08T06:02:13.405Z</updated>
    
    <content type="html"><![CDATA[<p><code>python</code> 中的字典是有顺序的，但是，<code>map</code> 变为 <code>json</code> 发送给前端，那么 <code>json</code> 是无序的。</p><a id="more"></a><p>网上有很多方法，比如 <code>OrderedDict</code> 来构造 <code>json</code> 啥的，最后试了都不行，最终的方案是这样的。</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  '法国斗牛犬百科_<span class="number">2444</span>': &#123;</span><br><span class="line">    '序言_<span class="number">2445</span>': [ '关于我们_<span class="number">2446</span>' ],</span><br><span class="line">    '演变_<span class="number">2447</span>': [ '法斗历史_<span class="number">2448</span>' ],</span><br><span class="line">    '样貌_<span class="number">2449</span>': [ '品种_<span class="number">2454</span>', '四肢_<span class="number">2450</span>', '尾巴_<span class="number">2451</span>', '身型_<span class="number">2452</span>', '五官_<span class="number">2453</span>' ],</span><br><span class="line">    '健康_<span class="number">2460</span>': [],</span><br><span class="line">    '训练_<span class="number">2461</span>': []</span><br><span class="line">  &#125;,</span><br><span class="line">  '博美_<span class="number">2519</span>': &#123; '博美1_<span class="number">2520</span>': [ '博美文章1_<span class="number">2521</span>' ], '博美2_<span class="number">2522</span>': [] &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>变成</p><figure class="highlight scheme"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="symbol">'key</span><span class="symbol">':</span> <span class="symbol">'法国斗牛犬百科_2444</span>',</span><br><span class="line">    <span class="symbol">'value</span><span class="symbol">':</span> [</span><br><span class="line">      &#123;<span class="symbol">'key</span><span class="symbol">':</span> <span class="symbol">'序言_2445</span>', <span class="symbol">'value</span><span class="symbol">':</span> [<span class="symbol">'关于我们_2446</span>']&#125;, &#123;<span class="symbol">'key</span><span class="symbol">':</span> <span class="symbol">'演变_2447</span>', <span class="symbol">'value</span><span class="symbol">':</span> [<span class="symbol">'法斗历史_2448</span>']&#125;, &#123;</span><br><span class="line">        <span class="symbol">'key</span><span class="symbol">':</span> <span class="symbol">'样貌_2449</span>',</span><br><span class="line">        <span class="symbol">'value</span><span class="symbol">':</span> [<span class="symbol">'品种_2454</span>', <span class="symbol">'四肢_2450</span>', <span class="symbol">'尾巴_2451</span>', <span class="symbol">'身型_2452</span>', <span class="symbol">'五官_2453</span>']</span><br><span class="line">      &#125;, &#123;<span class="symbol">'key</span><span class="symbol">':</span> <span class="symbol">'健康_2460</span>', <span class="symbol">'value</span><span class="symbol">':</span> []&#125;, &#123;<span class="symbol">'key</span><span class="symbol">':</span> <span class="symbol">'训练_2461</span>', <span class="symbol">'value</span><span class="symbol">':</span> []&#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="symbol">'key</span><span class="symbol">':</span> <span class="symbol">'博美_2519</span>', <span class="symbol">'value</span><span class="symbol">':</span> [</span><br><span class="line">      &#123;<span class="symbol">'key</span><span class="symbol">':</span> <span class="symbol">'博美1_2520</span>', <span class="symbol">'value</span><span class="symbol">':</span> [<span class="symbol">'博美文章1_2521</span>']&#125;, &#123;<span class="symbol">'key</span><span class="symbol">':</span> <span class="symbol">'博美2_2522</span>', <span class="symbol">'value</span><span class="symbol">':</span> []&#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>python 的代码是</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">transform_dict</span><span class="params">(input_dict)</span>:</span></span><br><span class="line">    <span class="comment"># 检查输入是否为字典</span></span><br><span class="line">    <span class="keyword">if</span> isinstance(input_dict, dict):</span><br><span class="line">        <span class="comment"># 创建一个空列表来存储转换后的键值对</span></span><br><span class="line">        transformed = []</span><br><span class="line">        <span class="comment"># 遍历字典中的每个键值对</span></span><br><span class="line">        <span class="keyword">for</span> key, value <span class="keyword">in</span> input_dict.items():</span><br><span class="line">            <span class="comment"># 递归调用transform_dict来处理值，这样可以处理嵌套的字典</span></span><br><span class="line">            transformed_value = transform_dict(value)</span><br><span class="line">            <span class="comment"># 将当前的键和转换后的值添加到结果列表中</span></span><br><span class="line">            transformed.append(&#123;</span><br><span class="line">                <span class="string">"key"</span>: key,</span><br><span class="line">                <span class="string">"value"</span>: transformed_value</span><br><span class="line">            &#125;)</span><br><span class="line">        <span class="comment"># 如果结果列表只有一个元素，直接返回该元素，否则返回整个列表</span></span><br><span class="line">        <span class="keyword">return</span> transformed[<span class="number">0</span>] <span class="keyword">if</span> len(transformed) == <span class="number">1</span> <span class="keyword">else</span> transformed</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="comment"># 如果输入不是字典，直接返回原始输入</span></span><br><span class="line">        <span class="keyword">return</span> input_dict</span><br></pre></td></tr></table></figure><p>js 的解析代码是</p><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> transformArrayToObject(inputArray) &#123;</span><br><span class="line">  <span class="keyword">let</span> result = &#123;&#125;;</span><br><span class="line">  inputArray.forEach(<span class="type">item</span> =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (typeof <span class="type">item</span> === <span class="string">'object'</span> &amp;&amp; <span class="type">item</span> !== null &amp;&amp; <span class="string">'key'</span> <span class="keyword">in</span> <span class="type">item</span> &amp;&amp; <span class="string">'value'</span> <span class="keyword">in</span> <span class="type">item</span>) &#123;</span><br><span class="line">      // 检查<span class="keyword">value</span>是否为数组</span><br><span class="line">      <span class="keyword">if</span> (Array.isArray(<span class="type">item</span>.<span class="keyword">value</span>)) &#123;</span><br><span class="line">        // 如果数组中的第一个元素是对象，则递归处理</span><br><span class="line">        <span class="keyword">if</span> (<span class="type">item</span>.<span class="keyword">value</span>.length &gt; <span class="number">0</span> &amp;&amp; typeof <span class="type">item</span>.<span class="keyword">value</span>[<span class="number">0</span>] === <span class="string">'object'</span>) &#123;</span><br><span class="line">          result[<span class="type">item</span><span class="built_in">.key</span>] = transformArrayToObject(<span class="type">item</span>.<span class="keyword">value</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          // 否则直接将数组赋<span class="built_in">给key</span></span><br><span class="line">          result[<span class="type">item</span><span class="built_in">.key</span>] = <span class="type">item</span>.<span class="keyword">value</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        // 如果<span class="keyword">value</span>不是数组，直接赋值</span><br><span class="line">        result[<span class="type">item</span><span class="built_in">.key</span>] = <span class="type">item</span>.<span class="keyword">value</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面的代码都是用 <code>cloud</code> 写的，所以，如果你有其它结构，直接问就行，方案按照我这个方案即可。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;python&lt;/code&gt; 中的字典是有顺序的，但是，&lt;code&gt;map&lt;/code&gt; 变为 &lt;code&gt;json&lt;/code&gt; 发送给前端，那么 &lt;code&gt;json&lt;/code&gt; 是无序的。&lt;/p&gt;
    
    </summary>
    
      <category term="python" scheme="http://benpaodewoniu.github.io/categories/python/"/>
    
      <category term="框架" scheme="http://benpaodewoniu.github.io/categories/python/%E6%A1%86%E6%9E%B6/"/>
    
      <category term="flask" scheme="http://benpaodewoniu.github.io/categories/python/%E6%A1%86%E6%9E%B6/flask/"/>
    
    
      <category term="flask" scheme="http://benpaodewoniu.github.io/tags/flask/"/>
    
  </entry>
  
  <entry>
    <title>happydogs | 后端</title>
    <link href="http://benpaodewoniu.github.io/2024/09/08/happydogs3/"/>
    <id>http://benpaodewoniu.github.io/2024/09/08/happydogs3/</id>
    <published>2024-09-08T05:23:36.000Z</published>
    <updated>2024-09-08T05:25:16.537Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="项目经历" scheme="http://benpaodewoniu.github.io/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/"/>
    
      <category term="大型" scheme="http://benpaodewoniu.github.io/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/%E5%A4%A7%E5%9E%8B/"/>
    
      <category term="happydogs" scheme="http://benpaodewoniu.github.io/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/%E5%A4%A7%E5%9E%8B/happydogs/"/>
    
      <category term="后端" scheme="http://benpaodewoniu.github.io/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/%E5%A4%A7%E5%9E%8B/happydogs/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="tomoon" scheme="http://benpaodewoniu.github.io/tags/tomoon/"/>
    
  </entry>
  
  <entry>
    <title>happydogs | 页面</title>
    <link href="http://benpaodewoniu.github.io/2024/09/08/happydogs2/"/>
    <id>http://benpaodewoniu.github.io/2024/09/08/happydogs2/</id>
    <published>2024-09-08T05:23:34.000Z</published>
    <updated>2024-09-08T05:25:21.505Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="项目经历" scheme="http://benpaodewoniu.github.io/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/"/>
    
      <category term="大型" scheme="http://benpaodewoniu.github.io/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/%E5%A4%A7%E5%9E%8B/"/>
    
      <category term="happydogs" scheme="http://benpaodewoniu.github.io/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/%E5%A4%A7%E5%9E%8B/happydogs/"/>
    
      <category term="前端" scheme="http://benpaodewoniu.github.io/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/%E5%A4%A7%E5%9E%8B/happydogs/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="tomoon" scheme="http://benpaodewoniu.github.io/tags/tomoon/"/>
    
  </entry>
  
  <entry>
    <title>happydogs | wordpress</title>
    <link href="http://benpaodewoniu.github.io/2024/09/08/happydogs1/"/>
    <id>http://benpaodewoniu.github.io/2024/09/08/happydogs1/</id>
    <published>2024-09-08T05:23:31.000Z</published>
    <updated>2024-09-08T05:24:14.914Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="项目经历" scheme="http://benpaodewoniu.github.io/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/"/>
    
      <category term="大型" scheme="http://benpaodewoniu.github.io/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/%E5%A4%A7%E5%9E%8B/"/>
    
      <category term="happydogs" scheme="http://benpaodewoniu.github.io/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/%E5%A4%A7%E5%9E%8B/happydogs/"/>
    
      <category term="wordpress" scheme="http://benpaodewoniu.github.io/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/%E5%A4%A7%E5%9E%8B/happydogs/wordpress/"/>
    
    
      <category term="tomoon" scheme="http://benpaodewoniu.github.io/tags/tomoon/"/>
    
  </entry>
  
  <entry>
    <title>happydogs | 快乐小狗项目</title>
    <link href="http://benpaodewoniu.github.io/2024/09/08/happydogs0/"/>
    <id>http://benpaodewoniu.github.io/2024/09/08/happydogs0/</id>
    <published>2024-09-08T05:22:34.000Z</published>
    <updated>2024-09-08T05:42:40.184Z</updated>
    
    <content type="html"><![CDATA[<p>我个人认为宠物市场一定是</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;我个人认为宠物市场一定是&lt;/p&gt;

      
    
    </summary>
    
      <category term="项目经历" scheme="http://benpaodewoniu.github.io/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/"/>
    
      <category term="大型" scheme="http://benpaodewoniu.github.io/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/%E5%A4%A7%E5%9E%8B/"/>
    
      <category term="happydogs" scheme="http://benpaodewoniu.github.io/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/%E5%A4%A7%E5%9E%8B/happydogs/"/>
    
      <category term="基础" scheme="http://benpaodewoniu.github.io/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/%E5%A4%A7%E5%9E%8B/happydogs/%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="tomoon" scheme="http://benpaodewoniu.github.io/tags/tomoon/"/>
    
  </entry>
  
  <entry>
    <title>wordpress | 电脑和手机不同程度显示</title>
    <link href="http://benpaodewoniu.github.io/2024/09/08/wordpress29/"/>
    <id>http://benpaodewoniu.github.io/2024/09/08/wordpress29/</id>
    <published>2024-09-08T03:56:18.000Z</published>
    <updated>2024-09-08T05:20:27.886Z</updated>
    
    <content type="html"><![CDATA[<p>如果我们想要电脑和手机进行不一样的显示。</p><a id="more"></a><p>以图片排列为案例。</p><p><img src="/images/wordpress/29_0.png" alt=""></p><p>在桌面这是弹性盒子布局，然后一列 6 个。</p><p>上面绿色框中，我们可以选择平台。</p><p>选择，「手机」。</p><p><img src="/images/wordpress/29_1.png" alt=""></p><p>点击图片的容器，然后设置宽度，就能在手机端定义样子了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;如果我们想要电脑和手机进行不一样的显示。&lt;/p&gt;
    
    </summary>
    
      <category term="网站设计" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="WordPress" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/WordPress/"/>
    
      <category term="插件" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/WordPress/%E6%8F%92%E4%BB%B6/"/>
    
      <category term="elementor" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/WordPress/%E6%8F%92%E4%BB%B6/elementor/"/>
    
    
      <category term="WordPress" scheme="http://benpaodewoniu.github.io/tags/WordPress/"/>
    
  </entry>
  
  <entry>
    <title>wordpress | 找到控件</title>
    <link href="http://benpaodewoniu.github.io/2024/09/08/wordpress28/"/>
    <id>http://benpaodewoniu.github.io/2024/09/08/wordpress28/</id>
    <published>2024-09-08T03:56:14.000Z</published>
    <updated>2024-09-08T04:05:53.823Z</updated>
    
    <content type="html"><![CDATA[<p>这个属于一个比较简单的。</p><a id="more"></a><p>我们在添加完容器或者其他的时候，发现左边的控件图标变成了某一个控件的样式，如果，我们想添加额外的控件呢？</p><p><img src="/images/wordpress/28_0.png" alt=""></p><p>点击左上角的 「+」号。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这个属于一个比较简单的。&lt;/p&gt;
    
    </summary>
    
      <category term="网站设计" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="WordPress" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/WordPress/"/>
    
      <category term="插件" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/WordPress/%E6%8F%92%E4%BB%B6/"/>
    
      <category term="elementor" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/WordPress/%E6%8F%92%E4%BB%B6/elementor/"/>
    
    
      <category term="WordPress" scheme="http://benpaodewoniu.github.io/tags/WordPress/"/>
    
  </entry>
  
  <entry>
    <title>wordpress | 对布局的调整</title>
    <link href="http://benpaodewoniu.github.io/2024/09/08/wordpress27/"/>
    <id>http://benpaodewoniu.github.io/2024/09/08/wordpress27/</id>
    <published>2024-09-08T03:49:50.000Z</published>
    <updated>2024-09-08T04:01:10.121Z</updated>
    
    <content type="html"><![CDATA[<p>如果只是添加布局的话，你只能看到几个特定的样式「以弹性盒子为例子」。</p><a id="more"></a><p><img src="/images/wordpress/27_0.png" alt=""></p><p>我们选择那 4 列模式。</p><p>选择内部容器，进行右键然后选择「添加同层容器」，就能添加了，具体样子可以自己调整。</p><p><img src="/images/wordpress/27_1.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;如果只是添加布局的话，你只能看到几个特定的样式「以弹性盒子为例子」。&lt;/p&gt;
    
    </summary>
    
      <category term="网站设计" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="WordPress" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/WordPress/"/>
    
      <category term="插件" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/WordPress/%E6%8F%92%E4%BB%B6/"/>
    
      <category term="elementor" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/WordPress/%E6%8F%92%E4%BB%B6/elementor/"/>
    
    
      <category term="WordPress" scheme="http://benpaodewoniu.github.io/tags/WordPress/"/>
    
  </entry>
  
  <entry>
    <title>wordpress | 简介</title>
    <link href="http://benpaodewoniu.github.io/2024/09/08/wordpress26/"/>
    <id>http://benpaodewoniu.github.io/2024/09/08/wordpress26/</id>
    <published>2024-09-08T03:49:48.000Z</published>
    <updated>2024-09-08T03:55:01.279Z</updated>
    
    <content type="html"><![CDATA[<p><code>elementor</code> 专注于网站的页面设计，提供拖拉拽的效果。</p><a id="more"></a><p><img src="/images/wordpress/26_0.png" alt=""></p><p>可以理解为通过低代码平台绘制网页，整体体验下来还可以。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;elementor&lt;/code&gt; 专注于网站的页面设计，提供拖拉拽的效果。&lt;/p&gt;
    
    </summary>
    
      <category term="网站设计" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="WordPress" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/WordPress/"/>
    
      <category term="插件" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/WordPress/%E6%8F%92%E4%BB%B6/"/>
    
      <category term="elementor" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/WordPress/%E6%8F%92%E4%BB%B6/elementor/"/>
    
    
      <category term="WordPress" scheme="http://benpaodewoniu.github.io/tags/WordPress/"/>
    
  </entry>
  
</feed>
