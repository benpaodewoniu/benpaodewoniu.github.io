<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>犀牛的博客</title>
  
  <subtitle>姑苏城外一茅屋，万树梅花月满天</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://benpaodewoniu.github.io/"/>
  <updated>2024-03-31T09:39:37.391Z</updated>
  <id>http://benpaodewoniu.github.io/</id>
  
  <author>
    <name>犀牛</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ssh | 更换 22 端口</title>
    <link href="http://benpaodewoniu.github.io/2024/03/30/ssh4/"/>
    <id>http://benpaodewoniu.github.io/2024/03/30/ssh4/</id>
    <published>2024-03-29T17:16:47.000Z</published>
    <updated>2024-03-31T09:39:37.391Z</updated>
    
    <content type="html"><![CDATA[<p>修改 <code>ssh</code> 端口。</p><a id="more"></a><p><code>SSH</code> 配置文件通常位于 <code>/etc/ssh/sshd_config</code>。使用您喜欢的文本编辑器打开此文件。</p><p>找到 <code>Port</code> 选项，并将其更改为您想要的端口号。如果未找到此选项，请添加以下行：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Port <span class="tag">&lt;<span class="name">新端口号</span>&gt;</span></span><br></pre></td></tr></table></figure><p>请将&lt;新端口号&gt;替换为您想要使用的端口号。</p><p>保存文件并退出编辑器。</p><p>重新启动 <code>SSH</code> 服务器以使更改生效。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo<span class="built_in"> service </span>sshd restart</span><br></pre></td></tr></table></figure><p>如果你在退出前忘记打开该端口的防火墙了。请参考</p><ul><li><a href="/2024/03/29/aws4/">aws | 修改 SSH 端口忘记打开防火墙</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;修改 &lt;code&gt;ssh&lt;/code&gt; 端口。&lt;/p&gt;
    
    </summary>
    
      <category term="ssh" scheme="http://benpaodewoniu.github.io/categories/ssh/"/>
    
    
      <category term="ssh" scheme="http://benpaodewoniu.github.io/tags/ssh/"/>
    
  </entry>
  
  <entry>
    <title>wordpress | 如何在 wordpress 服务器上运行其他独立站点</title>
    <link href="http://benpaodewoniu.github.io/2024/03/30/wordpress18/"/>
    <id>http://benpaodewoniu.github.io/2024/03/30/wordpress18/</id>
    <published>2024-03-29T16:05:50.000Z</published>
    <updated>2024-03-31T09:13:56.480Z</updated>
    
    <content type="html"><![CDATA[<p>在 wordpress 中运行其他独立站点。</p><a id="more"></a><p>此时，我的 <code>wordpress</code> 采用的是多站点模式。</p><p>关于多站点，可以参考我的相关博客。</p><ul><li><a href="/categories/网站设计/WordPress/">wordpress</a></li></ul><p>独立站点有很多种</p><ul><li>前后端分离</li><li>集成站</li></ul><h2 id="前后端分离"><a href="#前后端分离" class="headerlink" title="前后端分离"></a>前后端分离</h2><p>如果是前后端分离的话，也就是只有 <code>html</code> 文件，那么，无论是子目录还是子域名都能很好的集成。</p><p>子目录的话，就是</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server</span> <span class="string">&#123;</span></span><br><span class="line">       <span class="attr">listen</span> <span class="string">80;</span></span><br><span class="line">       <span class="attr">server_name</span> <span class="string">thlm.com;</span></span><br><span class="line">       <span class="attr">listen</span> <span class="string">443 ssl default_server;</span></span><br><span class="line">       <span class="attr">listen</span> <span class="string">[::]:443 ssl default_server;#新增这两个</span></span><br><span class="line">       <span class="attr">ssl_certificate</span> <span class="string">/home/ubuntu/httpAll/fullchain.crt;</span></span><br><span class="line">       <span class="attr">ssl_certificate_key</span> <span class="string">/home/ubuntu/httpAll/private.pem;</span></span><br><span class="line">       </span><br><span class="line">       <span class="attr">root</span> <span class="string">/var/www/wordpress; # wordpress 的放置路径</span></span><br><span class="line">       <span class="attr">index</span> <span class="string">index.php;</span></span><br><span class="line">       </span><br><span class="line">       <span class="attr">...</span></span><br><span class="line"></span><br><span class="line">       <span class="attr">location</span> <span class="string">/lumi &#123;</span></span><br><span class="line">            <span class="attr">alias</span> <span class="string">/var/www/wordpress/Static/lumi;</span></span><br><span class="line">            <span class="attr">index</span> <span class="string">index.html;</span></span><br><span class="line">            <span class="attr">try_files</span> <span class="string">$uri $uri/ /Static/lumi/index.html;</span></span><br><span class="line">        <span class="attr">&#125;</span></span><br><span class="line"><span class="attr">&#125;</span></span><br></pre></td></tr></table></figure><p>把 <code>/lumi</code> 通过 <code>alias</code> 重定向就可以了。</p><p>子域名就不说了。</p><h2 id="集成站"><a href="#集成站" class="headerlink" title="集成站"></a>集成站</h2><p>比如 <code>index.php</code> 这一类。</p><p>这一类的话，用子目录就不行了，因为，作为一个网站，它需要绑定 <code>php</code> 服务器，也就是它需要自己绑定一个端口。「ps：我并没有在 <code>80</code> 端口下成功运行 <code>wordpress</code> 和 独立站，或许有解决方案，但是，我没试出来」</p><p>假设，<code>index.php</code> 绑定 <code>8088</code> 端口，即单独弄一个 <code>server</code>，那么，通过反向代理，比如</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">proxy_pass <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">8089</span>;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>也是满足不了的。</p><ul><li>这样反向代理，会导致如果跳转的话会带 <code>8088</code> 端口，如果不跳转（即 <code>url</code> 不显示 <code>8088</code> ），那么资源文件访问不了，毕竟这个网站端口都绑定在 <code>8088</code><ul><li><code>xxx.com:8088/assert/a.png</code> 返回 <code>200</code></li><li><code>xxx.com/assert/a.png</code> 返回 <code>404</code></li><li>或许反向代理有更优雅或者真的能行，但是，我还是没尝试出来</li></ul></li></ul><p>最后，如果采用重定向，直接返回 <code>xxx.com:8088</code> ，说实话太丑了。</p><p>但是，如果使用子域名就完美解决这件事。</p><p>因为，同一端口可以绑定不同的子域名，然后访问不同的服务，相关的参考资料如下</p><ul><li><a href="/2024/03/08/wordpress10/">wordpress | 将 wordpress 的 http 变成 https | 子域名要拿到泛域名的 ssl 证书</a></li><li><a href="/2024/03/29/web3/">web | 二级域名解析</a></li><li><a href="/2024/03/29/wordpress17/">wordpress | 多目录转向多域名</a></li></ul><p>这里写一个 <code>nginx</code> 的配置。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Upstream to abstract backend connection(s) for php</span></span><br><span class="line">upstream php &#123;</span><br><span class="line">       <span class="built_in"> server </span>unix:/run/php/php7.4-fpm.sock;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">       <span class="built_in">..</span>.</span><br><span class="line">       wordpress 的配置</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    # 独立 php 网站的配置</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name thlm.thlm.com;</span><br><span class="line">    listen 443 ssl;</span><br><span class="line">    listen [::]:443 ssl;#新增这两个</span><br><span class="line">    ssl_certificate /home/ubuntu/httpAll/fullchain.crt;</span><br><span class="line">    ssl_certificate_key /home/ubuntu/httpAll/private.pem;</span><br><span class="line">    root /var/www/wordpress/Static/thlm/;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        try_files <span class="variable">$uri</span> <span class="variable">$uri</span>/ /index.php?<span class="variable">$args</span>;</span><br><span class="line">        index index.php;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ~ \.php$ &#123;</span><br><span class="line">                include fastcgi_params;</span><br><span class="line">                fastcgi_intercept_errors on;</span><br><span class="line">                fastcgi_pass php;</span><br><span class="line">                fastcgi_param  SCRIPT_FILENAME <span class="variable">$document_root</span><span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在 wordpress 中运行其他独立站点。&lt;/p&gt;
    
    </summary>
    
      <category term="网站设计" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="WordPress" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/WordPress/"/>
    
      <category term="基础" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/WordPress/%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="WordPress" scheme="http://benpaodewoniu.github.io/tags/WordPress/"/>
    
  </entry>
  
  <entry>
    <title>aws | 修改 SSH 端口忘记打开防火墙</title>
    <link href="http://benpaodewoniu.github.io/2024/03/29/aws4/"/>
    <id>http://benpaodewoniu.github.io/2024/03/29/aws4/</id>
    <published>2024-03-29T15:54:11.000Z</published>
    <updated>2024-03-29T16:27:46.436Z</updated>
    
    <content type="html"><![CDATA[<p>最近干了一个傻逼事，修改了 ssh 端口，但是，新端口没有在防火墙上打开。</p><p>导致服务器连不上了。</p><a id="more"></a><p>这里有两个方案。</p><h2 id="方案一"><a href="#方案一" class="headerlink" title="方案一"></a>方案一</h2><p>点击相关实例，然后连接。</p><p><img src="/images/aws/4_0.png" alt=""></p><p>只有串行才不用 ssh，其他连接都需要 ssh。但是，串行需要服务器提前有账户和密码。</p><h2 id="方案二"><a href="#方案二" class="headerlink" title="方案二"></a>方案二</h2><ul><li><a href="https://blog.csdn.net/baidu_39191315/article/details/128936295">亚马逊云服务器EC2 ubuntu下打开防火墙后无法连接服务器的解决方法</a></li></ul><p>具体步骤：</p><p>在亚马逊云控制台将原有服务器实例（THLM）<code>停止</code>（注意不是终止啊），刷新直到状态显示 <code>已停止</code>。</p><p>新建一个服务器实例名字叫 TMP (啥配置都行，最好选择和你原来机器同一区域网络的机器)。</p><p>在左边的导航栏里找到 <code>Elastic Block Store</code>下面的 <code>卷</code></p><p>勾选挂接到原服务器 (THLM) 实例的卷（在卷的附加资源上能看到具体属于哪个实例，默认硬盘挂载到 <code>/dev/sda1</code>）。点击右上角 <code>操作</code> -&gt; <code>分离卷</code>，直到刷新后卷状态显示为 <code>可用</code>。</p><p>再次勾选这个卷，<code>操作</code> -&gt; <code>挂载卷</code>，实例选择新服务器（TMP）<code>挂载卷</code>（过载的时候，让你选择一个路径，这个随便选一个能用的就行）。</p><p>进入新服务器实例的远程终端，输入 <code>lsblk</code></p><p>出现</p><p><img src="/images/aws/4_1.png" alt=""></p><p>可用看到一个未挂接的磁盘（<code>nvme1n1</code>），可以通过磁盘大小来区分是不是原来服务器上的磁盘，<code>mountpoints</code> 为空的就是没有挂载。</p><p>挂接此卷下的文件系统</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>mkdir mydisk</span><br><span class="line"><span class="variable">$ </span>sudo mount -t ext4 /dev/nvme1n1p1 mydisk</span><br></pre></td></tr></table></figure><p>修改防火墙配置文件</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="keyword">vi</span> mydisk/etc/ufw/ufw.<span class="keyword">conf</span></span><br></pre></td></tr></table></figure><p>注意一定是上面的打开方式，而不是</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cd</span> mydisk/etc/ufw</span><br><span class="line">sudo <span class="keyword">vim</span> ufw.<span class="keyword">conf</span></span><br></pre></td></tr></table></figure><p>这种方式，打开的还是新机器上的配置，不知道为啥。</p><p>将 <code>ENABLED=yes</code> 改为 <code>ENABLED=no</code>,保存。</p><p>卸载卷</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo umount <span class="regexp">/dev/</span>nvme1n1p1</span><br></pre></td></tr></table></figure><p>将卷从新服务器实例分离后挂接回原服务器实例</p><p>回到亚马逊云控制台：</p><ul><li>在左边的导航栏里找到 <code>Elastic Block Store</code> 下面的 <code>卷</code></li><li>勾选挂接到原服务器实例的卷</li><li>右上角 <code>操作</code> -&gt; <code>分离卷</code><br>  刷新后卷状态显示为 <code>可用</code></li><li>再次勾选这个卷，<code>操作</code> -&gt; <code>挂载卷</code><ul><li>实例选择 <code>THLM</code></li><li>设备名称：<code>/dev/sda1</code></li></ul></li><li>挂载卷</li></ul><p>回到 <code>实例</code>，选择原服务器，实例状态-&gt;启动现有实例。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近干了一个傻逼事，修改了 ssh 端口，但是，新端口没有在防火墙上打开。&lt;/p&gt;
&lt;p&gt;导致服务器连不上了。&lt;/p&gt;
    
    </summary>
    
      <category term="网站设计" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="服务商" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/%E6%9C%8D%E5%8A%A1%E5%95%86/"/>
    
      <category term="AWS" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/%E6%9C%8D%E5%8A%A1%E5%95%86/AWS/"/>
    
    
      <category term="aws" scheme="http://benpaodewoniu.github.io/tags/aws/"/>
    
  </entry>
  
  <entry>
    <title>web | 二级域名解析</title>
    <link href="http://benpaodewoniu.github.io/2024/03/29/web3/"/>
    <id>http://benpaodewoniu.github.io/2024/03/29/web3/</id>
    <published>2024-03-29T14:36:57.000Z</published>
    <updated>2024-03-29T14:38:38.052Z</updated>
    
    <content type="html"><![CDATA[<p>二级域名解析也需要特殊设置。</p><a id="more"></a><p><img src="/images/web/3_0.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;二级域名解析也需要特殊设置。&lt;/p&gt;
    
    </summary>
    
      <category term="网站设计" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="域名" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/%E5%9F%9F%E5%90%8D/"/>
    
    
      <category term="网站" scheme="http://benpaodewoniu.github.io/tags/%E7%BD%91%E7%AB%99/"/>
    
  </entry>
  
  <entry>
    <title>wordpress | 端口绑定 https</title>
    <link href="http://benpaodewoniu.github.io/2024/03/29/nginx10/"/>
    <id>http://benpaodewoniu.github.io/2024/03/29/nginx10/</id>
    <published>2024-03-29T13:11:11.000Z</published>
    <updated>2024-03-29T14:42:01.370Z</updated>
    
    <content type="html"><![CDATA[<p>在非 <code>443</code> 端口绑定 <code>https</code>。</p><a id="more"></a><p>直接放例子。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">8088</span> ssl;</span><br><span class="line">    <span class="attribute">ssl_certificate</span> /home/ubuntu/https/fullchain.crt;</span><br><span class="line">    <span class="attribute">ssl_certificate_key</span> /home/ubuntu/https/private.pem;</span><br><span class="line">    <span class="attribute">server_name</span> thlm.thlm.com;</span><br><span class="line">    <span class="attribute">root</span> /var/www/wordpress/Static/thlm/;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">location</span> / &#123;</span><br><span class="line">        <span class="comment">#alias /var/www/wordpress/Static/thlm/;</span></span><br><span class="line">        <span class="attribute">try_files</span> <span class="variable">$uri</span> <span class="variable">$uri</span>/ /index.php?<span class="variable">$args</span>;</span><br><span class="line">        <span class="comment">#alias /var/www/wordpress/Static/thlm/;</span></span><br><span class="line">        <span class="attribute">index</span> index.php;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">location</span> /thlm&#123;</span><br><span class="line">       <span class="attribute">alias</span> /var/www/wordpress/Static/thlm/;</span><br><span class="line">       <span class="attribute">index</span> index.php;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="attribute">location</span> <span class="regexp">~ \.php$</span> &#123;</span><br><span class="line">                <span class="attribute">include</span> fastcgi_params;</span><br><span class="line">                <span class="attribute">fastcgi_intercept_errors</span> <span class="literal">on</span>;</span><br><span class="line">                <span class="attribute">fastcgi_pass</span> php;</span><br><span class="line">                <span class="attribute">fastcgi_param</span>  SCRIPT_FILENAME <span class="variable">$document_root</span><span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在非 &lt;code&gt;443&lt;/code&gt; 端口绑定 &lt;code&gt;https&lt;/code&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="网站设计" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="服务端" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/%E6%9C%8D%E5%8A%A1%E7%AB%AF/"/>
    
      <category term="nginx" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/%E6%9C%8D%E5%8A%A1%E7%AB%AF/nginx/"/>
    
      <category term="https" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/https/"/>
    
      <category term="letsencrypt" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/https/letsencrypt/"/>
    
    
      <category term="https" scheme="http://benpaodewoniu.github.io/tags/https/"/>
    
  </entry>
  
  <entry>
    <title>wordpress | 多目录转向多域名</title>
    <link href="http://benpaodewoniu.github.io/2024/03/29/wordpress17/"/>
    <id>http://benpaodewoniu.github.io/2024/03/29/wordpress17/</id>
    <published>2024-03-29T12:35:13.000Z</published>
    <updated>2024-03-31T09:22:41.551Z</updated>
    
    <content type="html"><![CDATA[<p>如何将 <code>wordpress</code> 多站点下子目录模式变为子域名模式。</p><a id="more"></a><p>编辑 <code>wp-config.php</code> 修改配置</p><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">define</span></span>( <span class="string">'SUBDOMAIN_INSTALL'</span>, <span class="literal">false</span> );</span><br></pre></td></tr></table></figure><p>变成</p><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">define</span></span>( <span class="string">'SUBDOMAIN_INSTALL'</span>, <span class="literal">true</span> );</span><br></pre></td></tr></table></figure><p>然后，找到之前的站点的设置。</p><p><img src="/images/wordpress/17_0.png" alt=""></p><p>然后修改相关的 <code>url</code> 就好了。</p><p><img src="/images/wordpress/17_1.png" alt=""></p><p>之前是 <code>thlm.com/lumi</code> 现在改成了 <code>lumi.thlm.com</code>。</p><p>一般来说，信息里面改完后，设置里面会自动修改，但是，还是建议你检查一下。</p><p>一共修改 <code>3</code> 处地方，信息一处，设置两处。</p><p>一般来说，这样改完就没问题了，当然有的时候会出现缓存问题。</p><ul><li>登录账号后，有的主题不能显示后端</li><li>…</li></ul><p>这里建议，先用其他浏览器用户或者清除完全部缓存后，尝试。</p><p>这里说一下，需要对 <code>nginx</code> 进行二级域名配置吗？</p><p>我尝试的情况是，不需要专门配置，保留原来的就行。</p><p>从子目录转向子域名的话，会出现之前的链接不能用，比如 <code>thlm.com/lumi</code> 变成了 <code>lumi.thlm.com</code> ，就会出现 <code>404</code> 或者其他页面（我在使用 <code>onenav</code> 主题作为主站的时候，出现访问之前的页面被主题劫持的现象）。</p><p>所以，这里用到了一个方案。</p><ul><li>在 <code>wordpress</code> 中存放一个跳转页面</li><li>修改 <code>nginx</code></li></ul><h2 id="跳转页面"><a href="#跳转页面" class="headerlink" title="跳转页面"></a>跳转页面</h2><p>我是在 /var/www/wordpress/Static/tmp 放了一个叫做 lumi.html 的页面，内容是</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>lumi 主题站<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>你好，lumi 主题站已经迁移到 https://lumi.thlm.com<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>页面自动跳转，请等待...<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 获取当前 URL</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> currentUrl = <span class="built_in">window</span>.location.href;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 使用正则表达式提取非域名部分</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> path = currentUrl.replace(<span class="regexp">/^.*\/\/[^\/]+/</span>, <span class="string">''</span>).replace(<span class="regexp">/^\/lumi/</span>, <span class="string">''</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 新域名</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> newDomain = <span class="string">'lumi.thlm.com'</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 拼接新的 URL</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> newUrl = <span class="string">'https://'</span> + newDomain + path;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 进行跳转</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">window</span>.location.href = newUrl;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="nginx-配置"><a href="#nginx-配置" class="headerlink" title="nginx 配置"></a>nginx 配置</h2><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">       <span class="string">...</span></span><br><span class="line">      location <span class="string">/lumi</span> &#123;</span><br><span class="line">        <span class="keyword">alias</span> <span class="string">/var/www/wordpress/Static/tmp</span>;</span><br><span class="line">        index lumi.html;</span><br><span class="line">        <span class="keyword">try</span>_files $uri $uri/ <span class="string">/lumi/lumi.html</span>;</span><br><span class="line">      &#125;       </span><br><span class="line"></span><br><span class="line">      <span class="string">...</span></span><br><span class="line">      rewrite ^/<span class="params">(?!lumi)</span><span class="params">(.*)</span>$ <span class="string">/index.php</span>?$1 last;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>关于为什么修改成这个样子，请参考</p><ul><li><a href="/2024/03/11/wordpress14/">wordpress | 多站点模式下访问某一文件夹文件返回 404</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;如何将 &lt;code&gt;wordpress&lt;/code&gt; 多站点下子目录模式变为子域名模式。&lt;/p&gt;
    
    </summary>
    
      <category term="网站设计" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="WordPress" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/WordPress/"/>
    
      <category term="基础" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/WordPress/%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="WordPress" scheme="http://benpaodewoniu.github.io/tags/WordPress/"/>
    
  </entry>
  
  <entry>
    <title>shellfinance | shellfinance</title>
    <link href="http://benpaodewoniu.github.io/2024/03/26/shellfinance0/"/>
    <id>http://benpaodewoniu.github.io/2024/03/26/shellfinance0/</id>
    <published>2024-03-26T09:25:31.000Z</published>
    <updated>2024-03-29T16:42:59.879Z</updated>
    
    <content type="html"><![CDATA[<p><code>shellfinance</code>。</p><a id="more"></a><ul><li><a href="https://www.shellfinance.xyz/">shellfinance</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;shellfinance&lt;/code&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="区块链" scheme="http://benpaodewoniu.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
      <category term="dapp" scheme="http://benpaodewoniu.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/dapp/"/>
    
      <category term="shellfinance" scheme="http://benpaodewoniu.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/dapp/shellfinance/"/>
    
    
      <category term="shellfinance" scheme="http://benpaodewoniu.github.io/tags/shellfinance/"/>
    
  </entry>
  
  <entry>
    <title>nginx | https 绑定端口提供 restful api 服务</title>
    <link href="http://benpaodewoniu.github.io/2024/03/25/nginx8/"/>
    <id>http://benpaodewoniu.github.io/2024/03/25/nginx8/</id>
    <published>2024-03-25T15:11:24.000Z</published>
    <updated>2024-03-25T15:21:48.593Z</updated>
    
    <content type="html"><![CDATA[<p>首先把域名解析到机器上，这里假设是 <code>xxx.com</code>。</p><p>然后开启，<code>restful api</code> 服务，这里绑定的端口是 <code>8081</code>。</p><a id="more"></a><p><code>nginx</code> 可以这样配置。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">        <span class="comment">#listen 443;</span></span><br><span class="line">        <span class="attribute">server_name</span> 域名;</span><br><span class="line">        <span class="attribute">listen</span> <span class="number">443</span> ssl;</span><br><span class="line">        <span class="comment">#listen [::]:443 ssl default_server;</span></span><br><span class="line">        <span class="attribute">ssl_certificate</span> /home/ubuntu/https/fullchain.crt; </span><br><span class="line">        <span class="attribute">ssl_certificate_key</span> /home/ubuntu/https/private.pem;</span><br><span class="line">        <span class="attribute">location</span> / &#123;</span><br><span class="line">             <span class="attribute">proxy_pass</span> http://127.0.0.1:8081/;</span><br><span class="line">       &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;首先把域名解析到机器上，这里假设是 &lt;code&gt;xxx.com&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;然后开启，&lt;code&gt;restful api&lt;/code&gt; 服务，这里绑定的端口是 &lt;code&gt;8081&lt;/code&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="网站设计" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="服务端" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/%E6%9C%8D%E5%8A%A1%E7%AB%AF/"/>
    
      <category term="nginx" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/%E6%9C%8D%E5%8A%A1%E7%AB%AF/nginx/"/>
    
    
      <category term="nginx" scheme="http://benpaodewoniu.github.io/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>wordpress | WPS Hide Login</title>
    <link href="http://benpaodewoniu.github.io/2024/03/24/wordpress16/"/>
    <id>http://benpaodewoniu.github.io/2024/03/24/wordpress16/</id>
    <published>2024-03-24T15:50:35.000Z</published>
    <updated>2024-03-24T15:57:06.875Z</updated>
    
    <content type="html"><![CDATA[<p>隐藏登录页面。</p><a id="more"></a><ul><li><a href="https://cn.wordpress.org/plugins/wps-hide-login/">WPS Hide Login</a></li></ul><p>一般 <code>wordpress</code> 的登录页面默认是</p><ul><li><code>xxx.com/wp-login.php</code></li></ul><p>由于是默认的，所以，经常被人攻击。</p><p>借助该插件我们可以修改登录页的 <code>url</code>。</p><p>我的是多站点模式，安装后</p><p><img src="/images/wordpress/16_0.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;隐藏登录页面。&lt;/p&gt;
    
    </summary>
    
      <category term="网站设计" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="WordPress" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/WordPress/"/>
    
      <category term="插件" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/WordPress/%E6%8F%92%E4%BB%B6/"/>
    
      <category term="WPS Hide Login" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/WordPress/%E6%8F%92%E4%BB%B6/WPS-Hide-Login/"/>
    
    
      <category term="WordPress" scheme="http://benpaodewoniu.github.io/tags/WordPress/"/>
    
  </entry>
  
  <entry>
    <title>wordpress | Captcha by BestWebSoft</title>
    <link href="http://benpaodewoniu.github.io/2024/03/24/wordpress15/"/>
    <id>http://benpaodewoniu.github.io/2024/03/24/wordpress15/</id>
    <published>2024-03-24T15:50:33.000Z</published>
    <updated>2024-03-24T16:03:27.325Z</updated>
    
    <content type="html"><![CDATA[<p>插件名为 <code>Captcha by BestWebSoft – Spam Protection, Security Plugin for WordPress Forms</code>。</p><p>给 <code>wordpress</code> 添加验证码。</p><a id="more"></a><ul><li><a href="https://cn.wordpress.org/plugins/captcha-bws/">Captcha by BestWebSoft</a></li></ul><p>我是多站点模式，并且在安装该插件之前，我安装了</p><ul><li><a href="/2024/03/24/wordpress16/">wordpress | WPS Hide Login</a></li></ul><p>多站点模式下，装了之后，没有在站点管理页面看到，而是在主站点的模式下看到配置。</p><p>进行了下面的设置。</p><p><img src="/images/wordpress/15_0.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;插件名为 &lt;code&gt;Captcha by BestWebSoft – Spam Protection, Security Plugin for WordPress Forms&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;给 &lt;code&gt;wordpress&lt;/code&gt; 添加验证码。&lt;/p&gt;
    
    </summary>
    
      <category term="网站设计" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="WordPress" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/WordPress/"/>
    
      <category term="插件" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/WordPress/%E6%8F%92%E4%BB%B6/"/>
    
      <category term="Captcha by BestWebSoft" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/WordPress/%E6%8F%92%E4%BB%B6/Captcha-by-BestWebSoft/"/>
    
    
      <category term="WordPress" scheme="http://benpaodewoniu.github.io/tags/WordPress/"/>
    
  </entry>
  
  <entry>
    <title>postman | 将chrome的url直接复制到postman</title>
    <link href="http://benpaodewoniu.github.io/2024/03/24/postman0/"/>
    <id>http://benpaodewoniu.github.io/2024/03/24/postman0/</id>
    <published>2024-03-24T06:20:54.000Z</published>
    <updated>2024-03-24T06:36:22.112Z</updated>
    
    <content type="html"><![CDATA[<p><code>chrome</code> 中直接复制，<code>copy</code> -&gt; <code>copy as cURL</code></p><a id="more"></a><p>然后在 <code>postman</code> 中 <code>import</code> 就好了。</p><p><img src="/images/postman/0_0.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;chrome&lt;/code&gt; 中直接复制，&lt;code&gt;copy&lt;/code&gt; -&amp;gt; &lt;code&gt;copy as cURL&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="应用" scheme="http://benpaodewoniu.github.io/categories/%E5%BA%94%E7%94%A8/"/>
    
      <category term="电脑软件" scheme="http://benpaodewoniu.github.io/categories/%E5%BA%94%E7%94%A8/%E7%94%B5%E8%84%91%E8%BD%AF%E4%BB%B6/"/>
    
      <category term="postman" scheme="http://benpaodewoniu.github.io/categories/%E5%BA%94%E7%94%A8/%E7%94%B5%E8%84%91%E8%BD%AF%E4%BB%B6/postman/"/>
    
    
      <category term="postman" scheme="http://benpaodewoniu.github.io/tags/postman/"/>
    
      <category term="software" scheme="http://benpaodewoniu.github.io/tags/software/"/>
    
  </entry>
  
  <entry>
    <title>python | 解决 cors</title>
    <link href="http://benpaodewoniu.github.io/2024/03/24/python204/"/>
    <id>http://benpaodewoniu.github.io/2024/03/24/python204/</id>
    <published>2024-03-24T03:57:32.000Z</published>
    <updated>2024-03-24T04:22:15.257Z</updated>
    
    <content type="html"><![CDATA[<p>只需要添加几行代码就好了。</p><p>但是，我这是全局 <code>cors</code>，<code>flask</code> 可以精确到某一个 <code>api</code> 的 <code>cors</code>，感兴趣的可以自己搜一下。</p><a id="more"></a><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">app = <span class="constructor">Flask(<span class="params">__name__</span>)</span></span><br><span class="line"><span class="constructor">CORS(<span class="params">app</span>, <span class="params">supports_credentials</span>=True)</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;只需要添加几行代码就好了。&lt;/p&gt;
&lt;p&gt;但是，我这是全局 &lt;code&gt;cors&lt;/code&gt;，&lt;code&gt;flask&lt;/code&gt; 可以精确到某一个 &lt;code&gt;api&lt;/code&gt; 的 &lt;code&gt;cors&lt;/code&gt;，感兴趣的可以自己搜一下。&lt;/p&gt;
    
    </summary>
    
      <category term="python" scheme="http://benpaodewoniu.github.io/categories/python/"/>
    
      <category term="框架" scheme="http://benpaodewoniu.github.io/categories/python/%E6%A1%86%E6%9E%B6/"/>
    
      <category term="flask" scheme="http://benpaodewoniu.github.io/categories/python/%E6%A1%86%E6%9E%B6/flask/"/>
    
    
      <category term="flask" scheme="http://benpaodewoniu.github.io/tags/flask/"/>
    
  </entry>
  
  <entry>
    <title>python | 使用 gunicorn 运行 flask</title>
    <link href="http://benpaodewoniu.github.io/2024/03/24/python203/"/>
    <id>http://benpaodewoniu.github.io/2024/03/24/python203/</id>
    <published>2024-03-24T03:41:02.000Z</published>
    <updated>2024-03-24T09:20:42.969Z</updated>
    
    <content type="html"><![CDATA[<p>这里的环境是</p><ul><li><a href="/2021/08/17/python144/">python ｜ 在 linux 上安装 python</a></li></ul><a id="more"></a><p>安装</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pip <span class="keyword">install</span> gunicorn</span><br></pre></td></tr></table></figure><p>把上面的 python 安装完之后，除了建立 python3.7 的软链接外，还要建立 python 和 python3 的，即加上</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo ln -s <span class="meta-keyword">/usr/</span>local<span class="meta-keyword">/src/</span>python37<span class="meta-keyword">/bin/</span>python3<span class="number">.7</span> <span class="meta-keyword">/usr/</span>bin/python3</span><br><span class="line">sudo ln -s <span class="meta-keyword">/usr/</span>local<span class="meta-keyword">/src/</span>python37<span class="meta-keyword">/bin/</span>python3<span class="number">.7</span> <span class="meta-keyword">/usr/</span>bin/python</span><br></pre></td></tr></table></figure><p>然后运行 python 看是否正常。</p><p>然后执行(我的入口文件叫做 <code>api.py</code>)</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gunicorn -w <span class="number">4</span> -b <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">8081</span> api:app &amp;</span><br></pre></td></tr></table></figure><p>这个时候会报错</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">File <span class="string">"/usr/lib/command-not-found"</span>, line <span class="number">27</span>, <span class="keyword">in</span> &lt;<span class="keyword">module</span>&gt;</span><br><span class="line">    <span class="keyword">from</span> CommandNotFound.util <span class="keyword">import</span> crash_guard</span><br><span class="line">ModuleNotFoundError: No <span class="keyword">module</span> named <span class="string">'CommandNotFound'</span></span><br></pre></td></tr></table></figure><p>这是环境变量有关</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/profile</span><br><span class="line">在文件后面添加</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">PATH</span>=<span class="variable">$PATH</span>:/usr/local/src/python37/bin</span><br><span class="line">然后让配置生效</span><br><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><p>此时再次执行</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gunicorn -w <span class="number">4</span> -b <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">8081</span> api:app &amp;</span><br></pre></td></tr></table></figure><p>就可以了。</p><p>但是，我觉得即便是什么都不配置，直接执行也可以，比如</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/usr/</span>local<span class="regexp">/src/</span>python37<span class="regexp">/bin/</span>python3<span class="number">.7</span> <span class="regexp">/usr/</span>local<span class="regexp">/src/</span>python37<span class="regexp">/bin/</span>gunicorn -w <span class="number">4</span> -b <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">8081</span> <span class="string">api:</span>app &amp;</span><br></pre></td></tr></table></figure><p>不过，我没直接用过，有想用的可以尝试一下。</p><p>如果想要 <code>kill</code> 掉 <code>gunicorn</code>，可以用</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">pkill gunicorn</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这里的环境是&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/2021/08/17/python144/&quot;&gt;python ｜ 在 linux 上安装 python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="python" scheme="http://benpaodewoniu.github.io/categories/python/"/>
    
      <category term="框架" scheme="http://benpaodewoniu.github.io/categories/python/%E6%A1%86%E6%9E%B6/"/>
    
      <category term="模块" scheme="http://benpaodewoniu.github.io/categories/python/%E6%A8%A1%E5%9D%97/"/>
    
      <category term="flask" scheme="http://benpaodewoniu.github.io/categories/python/%E6%A1%86%E6%9E%B6/flask/"/>
    
      <category term="gunicorn" scheme="http://benpaodewoniu.github.io/categories/python/%E6%A8%A1%E5%9D%97/gunicorn/"/>
    
    
      <category term="flask" scheme="http://benpaodewoniu.github.io/tags/flask/"/>
    
  </entry>
  
  <entry>
    <title>thlm | 主站的搭建</title>
    <link href="http://benpaodewoniu.github.io/2024/03/24/thlm1/"/>
    <id>http://benpaodewoniu.github.io/2024/03/24/thlm1/</id>
    <published>2024-03-24T03:40:24.000Z</published>
    <updated>2024-03-31T08:19:56.129Z</updated>
    
    <content type="html"><![CDATA[<p>主站需要的主要是</p><ul><li><code>nginx</code></li><li><code>wordpress</code></li><li><code>php7.4</code></li><li><code>mysql8</code></li></ul><a id="more"></a><h2 id="wordpress"><a href="#wordpress" class="headerlink" title="wordpress"></a>wordpress</h2><p>主要参考</p><ul><li><a href="/categories/网站设计/WordPress/">wordpress</a></li></ul><p>我将 <code>https</code> 的相关证书放在了 <code>~/https</code></p><ul><li><a href="/2024/03/08/wordpress10/">wordpress | 将 wordpress 的 http 变成 https</a></li></ul><h2 id="mysql"><a href="#mysql" class="headerlink" title="mysql"></a>mysql</h2><ul><li><a href="/2024/02/28/wordpress3/">nginx</a></li></ul><h2 id="php7-4"><a href="#php7-4" class="headerlink" title="php7.4"></a>php7.4</h2><ul><li><a href="/2024/02/28/wordpress3/">nginx</a></li></ul><h2 id="nginx"><a href="#nginx" class="headerlink" title="nginx"></a>nginx</h2><ul><li><a href="/2024/02/28/wordpress3/">nginx</a></li></ul><p>我在 <code>site-available</code> 创建了 <code>wordpress.conf</code>，另外将 <code>default</code> 给删除了，关于配置请参考</p><ul><li><a href="/2024/03/22/nginx6/">nginx | 安装等基础解答</a></li></ul><p><code>wordpress.conf</code> 的内容是</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Upstream to abstract backend connection(s) for php</span></span><br><span class="line"><span class="attribute">upstream</span> php &#123;</span><br><span class="line">        <span class="attribute">server</span> unix:/run/php/php7.4-fpm.sock;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">        <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">       <span class="attribute">server_name</span> thlm.com;</span><br><span class="line">       <span class="attribute">listen</span> <span class="number">443</span> ssl default_server;</span><br><span class="line">       <span class="attribute">listen</span> [::]:<span class="number">443</span> ssl default_server;<span class="comment">#新增这两个</span></span><br><span class="line">       <span class="attribute">ssl_certificate</span> /home/ubuntu/httpAll/fullchain.crt;</span><br><span class="line">       <span class="attribute">ssl_certificate_key</span> /home/ubuntu/httpAll/private.pem;</span><br><span class="line">       </span><br><span class="line">        <span class="attribute">root</span> /var/www/wordpress; <span class="comment"># wordpress 的放置路径</span></span><br><span class="line">        <span class="attribute">index</span> index.php;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">location</span> = /favicon.ico &#123;</span><br><span class="line">                <span class="attribute">log_not_found</span> <span class="literal">off</span>;</span><br><span class="line">                <span class="attribute">access_log</span> <span class="literal">off</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">       <span class="attribute">location</span> /Static/lumi &#123;</span><br><span class="line">                <span class="attribute">alias</span> /var/www/wordpress/Static/lumi;</span><br><span class="line">                <span class="attribute">index</span> index.html;</span><br><span class="line">                <span class="attribute">try_files</span> <span class="variable">$uri</span> <span class="variable">$uri</span>/ /Static/lumi/index.html;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">location</span> = /robots.txt &#123;</span><br><span class="line">                <span class="attribute">allow</span> all;</span><br><span class="line">                <span class="attribute">log_not_found</span> <span class="literal">off</span>;</span><br><span class="line">                <span class="attribute">access_log</span> <span class="literal">off</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#location /Extend &#123;</span></span><br><span class="line">        <span class="comment">#   alias /var/www/wordpress/Extend/;</span></span><br><span class="line">        <span class="comment">#&#125;</span></span><br><span class="line">       <span class="attribute">location</span> /lumi &#123;</span><br><span class="line">        <span class="attribute">alias</span> /var/www/wordpress/Static/tmp;</span><br><span class="line">        <span class="attribute">index</span> lumi.html;</span><br><span class="line">        <span class="attribute">try_files</span> <span class="variable">$uri</span> <span class="variable">$uri</span>/ /lumi/lumi.html;</span><br><span class="line">      &#125;       </span><br><span class="line"></span><br><span class="line">        <span class="attribute">location</span> / &#123;</span><br><span class="line">               <span class="attribute">try_files</span> <span class="variable">$uri</span> <span class="variable">$uri</span>/ /index.php?<span class="variable">$args</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#location /lumi&#123;</span></span><br><span class="line">        <span class="comment">#   return 301 https://lumi.thlm.com;</span></span><br><span class="line">        <span class="comment">#&#125;</span></span><br><span class="line">        </span><br><span class="line">        <span class="attribute">location</span> <span class="regexp">~ \.php$</span> &#123;</span><br><span class="line">                <span class="comment">#<span class="doctag">NOTE:</span> You should have "cgi.fix_pathinfo = 0;" in php.ini</span></span><br><span class="line">                <span class="attribute">include</span> fastcgi_params;</span><br><span class="line">                <span class="attribute">fastcgi_intercept_errors</span> <span class="literal">on</span>;</span><br><span class="line">                <span class="attribute">fastcgi_pass</span> php;</span><br><span class="line">                <span class="comment">#The following parameter can be also included in fastcgi_params file</span></span><br><span class="line">                <span class="attribute">fastcgi_param</span>  SCRIPT_FILENAME <span class="variable">$document_root</span><span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">location</span> <span class="regexp">~* \.(js|css|png|jpg|jpeg|gif|ico)$</span> &#123;</span><br><span class="line">                <span class="attribute">expires</span> max;</span><br><span class="line">                <span class="attribute">log_not_found</span> <span class="literal">on</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">#ignored: “-” thing used or unknown variable in regex/rew</span></span><br><span class="line">        <span class="attribute">rewrite</span><span class="regexp"> ^/([_0-9a-zA-Z-]+/)?wp-admin$</span> /<span class="variable">$1</span>wp-admin/ <span class="literal">permanent</span>;</span><br><span class="line"> </span><br><span class="line">        <span class="attribute">if</span> (-f <span class="variable">$request_filename</span>)&#123;</span><br><span class="line">            <span class="attribute">set</span> <span class="variable">$rule_2</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="attribute">if</span> (-d <span class="variable">$request_filename</span>)&#123;</span><br><span class="line">            <span class="attribute">set</span> <span class="variable">$rule_2</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="attribute">if</span> (<span class="variable">$rule_2</span> = <span class="string">"1"</span>)&#123;</span><br><span class="line">        <span class="comment">#ignored: “-” thing used or unknown variable in regex/rew</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="attribute">rewrite</span><span class="regexp"> ^/([_0-9a-zA-Z-]+/)?(wp-(content|admin|includes).*)</span> /<span class="variable">$2</span> <span class="literal">last</span>;</span><br><span class="line">        <span class="attribute">rewrite</span><span class="regexp"> ^/([_0-9a-zA-Z-]+/)?(.*.php)$</span> /<span class="variable">$2</span> <span class="literal">last</span>;</span><br><span class="line">        <span class="comment">#rewrite /. /index.php last;</span></span><br><span class="line">        <span class="attribute">rewrite</span><span class="regexp"> ^/(?!Extend|Static|lumi)(.*)$</span> /index.php?<span class="variable">$1</span> <span class="literal">last</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">server_name</span> dao.thlm.com;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">443</span> ssl;</span><br><span class="line">    <span class="attribute">listen</span> [::]:<span class="number">443</span> ssl;<span class="comment">#新增这两个</span></span><br><span class="line">    <span class="attribute">ssl_certificate</span> /home/ubuntu/httpAll/fullchain.crt;</span><br><span class="line">    <span class="attribute">ssl_certificate_key</span> /home/ubuntu/httpAll/private.pem;</span><br><span class="line">    <span class="attribute">root</span> /var/www/wordpress/Static/thlm/;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">location</span> / &#123;</span><br><span class="line">        <span class="attribute">try_files</span> <span class="variable">$uri</span> <span class="variable">$uri</span>/ /index.php?<span class="variable">$args</span>;</span><br><span class="line">        <span class="attribute">index</span> index.php;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">location</span> <span class="regexp">~ \.php$</span> &#123;</span><br><span class="line">                <span class="attribute">include</span> fastcgi_params;</span><br><span class="line">                <span class="attribute">fastcgi_intercept_errors</span> <span class="literal">on</span>;</span><br><span class="line">                <span class="attribute">fastcgi_pass</span> php;</span><br><span class="line">                <span class="attribute">fastcgi_param</span>  SCRIPT_FILENAME <span class="variable">$document_root</span><span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;主站需要的主要是&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;nginx&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;wordpress&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;php7.4&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mysql8&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="项目经历" scheme="http://benpaodewoniu.github.io/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/"/>
    
      <category term="中型" scheme="http://benpaodewoniu.github.io/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/%E4%B8%AD%E5%9E%8B/"/>
    
      <category term="thlm" scheme="http://benpaodewoniu.github.io/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/%E4%B8%AD%E5%9E%8B/thlm/"/>
    
    
      <category term="thlm" scheme="http://benpaodewoniu.github.io/tags/thlm/"/>
    
  </entry>
  
  <entry>
    <title>thlm | 采集的搭建</title>
    <link href="http://benpaodewoniu.github.io/2024/03/24/thlm0/"/>
    <id>http://benpaodewoniu.github.io/2024/03/24/thlm0/</id>
    <published>2024-03-23T16:35:34.000Z</published>
    <updated>2024-03-24T09:24:18.943Z</updated>
    
    <content type="html"><![CDATA[<p>采集要准备的环境。</p><ul><li><code>python3.7</code></li><li><code>redis</code></li><li><code>chrome</code></li></ul><a id="more"></a><h2 id="python-相关"><a href="#python-相关" class="headerlink" title="python 相关"></a>python 相关</h2><ul><li><a href="/2021/08/17/python144/">python ｜ 在 linux 上安装 python</a></li></ul><h3 id="需要的环境"><a href="#需要的环境" class="headerlink" title="需要的环境"></a>需要的环境</h3><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">selenium==<span class="number">3.141</span><span class="number">.0</span></span><br><span class="line">urllib3==<span class="number">1.24</span><span class="number">.2</span></span><br><span class="line">pyyaml</span><br><span class="line">RhinoLogger</span><br><span class="line">dingtalkchatbot</span><br><span class="line">redis</span><br><span class="line">flask</span><br><span class="line">flask_cors</span><br><span class="line">gunicorn</span><br></pre></td></tr></table></figure><h3 id="运行采集"><a href="#运行采集" class="headerlink" title="运行采集"></a>运行采集</h3><p>采集目前没有什么要说的。</p><h3 id="运行-API"><a href="#运行-API" class="headerlink" title="运行 API"></a>运行 API</h3><p>由于 <code>API</code> 是通过 <code>flask</code> 写的，所以，我们用 <code>gunicorn</code> 来运行。</p><ul><li><a href="/2024/03/24/python203/">python | 使用 gunicorn 运行 flask</a></li></ul><h3 id="chrome"><a href="#chrome" class="headerlink" title="chrome"></a>chrome</h3><p>使用无头浏览器。</p><ul><li><a href="/2024/03/20/python201/">python | chrome-headless-shell</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;采集要准备的环境。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;python3.7&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;redis&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chrome&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="项目经历" scheme="http://benpaodewoniu.github.io/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/"/>
    
      <category term="中型" scheme="http://benpaodewoniu.github.io/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/%E4%B8%AD%E5%9E%8B/"/>
    
      <category term="thlm" scheme="http://benpaodewoniu.github.io/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/%E4%B8%AD%E5%9E%8B/thlm/"/>
    
    
      <category term="thlm" scheme="http://benpaodewoniu.github.io/tags/thlm/"/>
    
  </entry>
  
  <entry>
    <title>nginx | 多站点配置</title>
    <link href="http://benpaodewoniu.github.io/2024/03/22/nginx7/"/>
    <id>http://benpaodewoniu.github.io/2024/03/22/nginx7/</id>
    <published>2024-03-22T08:36:20.000Z</published>
    <updated>2024-03-22T09:31:46.362Z</updated>
    
    <content type="html"><![CDATA[<p>目的是</p><p>我有一个域名，比如 <code>xxx.com</code>，我要求</p><ul><li><code>xxx.com/</code> 访问主站项目</li><li><code>xxx.com/Static/aaa</code> 访问某一个目录下的其他项目</li></ul><a id="more"></a><p>这次用的是 <code>nginx</code> 的 <code>default</code> 配置，关于这个配置请查看</p><ul><li><a href="/2024/03/22/nginx6/">nginx | 安装等基础解答</a></li></ul><p>这里直接贴配置</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">        <span class="attribute">listen</span> <span class="number">80</span> default_server;</span><br><span class="line">        <span class="attribute">listen</span> [::]:<span class="number">80</span> default_server;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">root</span> /var/www/html;</span><br><span class="line">        <span class="comment">#index index.html index.htm index.nginx-debian.html;</span></span><br><span class="line"></span><br><span class="line">        <span class="attribute">server_name</span> _;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">absolute_redirect</span> <span class="literal">off</span>;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">location</span> /Static/lumi &#123;</span><br><span class="line">                <span class="attribute">alias</span> /home/thlm/Static/lumi;</span><br><span class="line">                <span class="attribute">index</span> index.html;</span><br><span class="line">                <span class="attribute">try_files</span> <span class="variable">$uri</span> <span class="variable">$uri</span>/ /Static/lumi;</span><br><span class="line">                <span class="comment">#error_page 404  /Static/lumi;</span></span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里说一下相关的配置，我电脑 <code>nginx</code> 是 <code>1.18.0</code></p><h2 id="absolute-redirect"><a href="#absolute-redirect" class="headerlink" title="absolute_redirect"></a>absolute_redirect</h2><p>这个是表明，重定向是要带端口号。</p><p>如果，没有这句话，那么 404 重定向的时候会把端口去掉。</p><ul><li><a href="https://blog.csdn.net/qq_34208660/article/details/129047152">nginx设置重定向跳转后ip:[端口]/abc变成ip/abc而报错404</a></li></ul><p>根据资料中说</p><p>新版本nginx（≥1.11.8）</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">absolute_redirect</span> <span class="literal">off</span>;</span><br></pre></td></tr></table></figure><p>旧版本nginx（＜1.11.8）【未测试】</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">port_in_redirect</span> <span class="literal">off</span>;</span><br></pre></td></tr></table></figure><h2 id="Static-lumi"><a href="#Static-lumi" class="headerlink" title="/Static/lumi"></a>/Static/lumi</h2><p>上面是说，当访问 /Static/lumi 的时候这个 uri 的时候，走的是下面的配置。</p><p>其中，alias 将资源重定向到 /home/thlm/Static/lumi 文件夹下。</p><p>默认资源是在 <code>/var/www/html</code>。</p><p>index 表明告诉你，主页是什么？比如，这个配置，相当于主页是 /Static/lumi/index.html</p><p>剩下的</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">try_files $uri $uri/ /<span class="keyword">Static</span>/lumi<span class="comment">;</span></span><br><span class="line"><span class="meta">#error_page 404  /Static/lumi<span class="comment">;</span></span></span><br><span class="line"><span class="meta">#error_page 404 = 301  /Static/lumi<span class="comment">;</span></span></span><br></pre></td></tr></table></figure><p>都差不多，当有一个 <code>uri</code> 寻找不到资源的时候，就返回主页。</p><p>需要注意的是，下面的写法都是错误的</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">try_files <span class="variable">$uri</span> <span class="variable">$uri</span><span class="regexp">/ /</span>Static<span class="regexp">/lumi/i</span>ndex.html;</span><br><span class="line">try_files <span class="variable">$uri</span> <span class="variable">$uri</span><span class="regexp">/ index.html;</span></span><br></pre></td></tr></table></figure><p>第一种，<code>index.html</code> 并不存在，返回的页面是空，第二种其实是将资源指向了 <code>/var/www/html/index.html</code></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;目的是&lt;/p&gt;
&lt;p&gt;我有一个域名，比如 &lt;code&gt;xxx.com&lt;/code&gt;，我要求&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;xxx.com/&lt;/code&gt; 访问主站项目&lt;/li&gt;
&lt;li&gt;&lt;code&gt;xxx.com/Static/aaa&lt;/code&gt; 访问某一个目录下的其他项目&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="网站设计" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="服务端" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/%E6%9C%8D%E5%8A%A1%E7%AB%AF/"/>
    
      <category term="nginx" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/%E6%9C%8D%E5%8A%A1%E7%AB%AF/nginx/"/>
    
    
      <category term="nginx" scheme="http://benpaodewoniu.github.io/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>nginx | 安装等基础解答</title>
    <link href="http://benpaodewoniu.github.io/2024/03/22/nginx6/"/>
    <id>http://benpaodewoniu.github.io/2024/03/22/nginx6/</id>
    <published>2024-03-22T08:36:17.000Z</published>
    <updated>2024-03-22T09:06:32.117Z</updated>
    
    <content type="html"><![CDATA[<p>我的环境是</p><ul><li><code>ubuntu20.04</code></li></ul><a id="more"></a><h2 id="更新操作系统"><a href="#更新操作系统" class="headerlink" title="更新操作系统"></a>更新操作系统</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="builtin-name">get</span> update</span><br><span class="line">sudo apt-<span class="builtin-name">get</span><span class="built_in"> upgrade </span>-y</span><br></pre></td></tr></table></figure><h2 id="安装-nginx"><a href="#安装-nginx" class="headerlink" title="安装 nginx"></a>安装 nginx</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get <span class="keyword">install</span> nginx -y <span class="comment"># 安装</span></span><br><span class="line">sudo systemctl <span class="keyword">status</span> nginx <span class="comment"># nginx 运行状态</span></span><br><span class="line">sudo systemctl <span class="keyword">start</span> nginx <span class="comment"># 启动</span></span><br><span class="line">sudo systemctl <span class="keyword">enable</span> nginx <span class="comment"># 开机自启动</span></span><br></pre></td></tr></table></figure><p>这安装的是 ubuntu20.04 默认的 nginx，我的版本是 1.18.0</p><h2 id="配置介绍"><a href="#配置介绍" class="headerlink" title="配置介绍"></a>配置介绍</h2><p>主配置在</p><ul><li><code>/etc/nginx/nginx.conf</code></li></ul><p>主配置里面有两句话</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span> <span class="regexp">/etc/</span>nginx<span class="regexp">/conf.d/</span>*.conf;</span><br><span class="line"><span class="keyword">include</span> <span class="regexp">/etc/</span>nginx<span class="regexp">/sites-enabled/</span>*;</span><br></pre></td></tr></table></figure><p>说明配置也包含上述的路径。</p><p>其中，<code>/etc/nginx/sites-enabled/*;</code> 存储的其实是软链接。</p><p>里面包含一个 default 文件，它其实是 <code>/etc/nginx/sites-available/*;</code> 里面的软链接。</p><p>默认的 <code>nginx</code> 配置为</p><ul><li><code>/etc/nginx/nginx.conf</code></li><li><code>/etc/nginx/sites-available/default</code></li></ul><p>如果你想创立一个站点，比如，site，我是这样建议的</p><ul><li>删除 <code>/etc/nginx/sites-available/default</code></li><li>删除 <code>/etc/nginx/sites-enabled/default</code></li><li>在 <code>/etc/nginx/sites-available/</code> 添加 <code>site.conf</code></li><li>创造软链接<ul><li><code>sudo ln -s /etc/nginx/sites-available/site.conf /etc/nginx/sites-enabled/site.conf</code></li></ul></li><li>修改 <code>/etc/nginx/sites-available/site.conf</code></li></ul><p>一个经典案例来自于</p><ul><li><a href="/2024/02/28/wordpress3/">wordpress | wordpress 搭建(包含多站点)</a></li></ul><p><code>nginx</code> 的日志在</p><ul><li><code>/var/log/nginx</code></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我的环境是&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ubuntu20.04&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="网站设计" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="服务端" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/%E6%9C%8D%E5%8A%A1%E7%AB%AF/"/>
    
      <category term="nginx" scheme="http://benpaodewoniu.github.io/categories/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/%E6%9C%8D%E5%8A%A1%E7%AB%AF/nginx/"/>
    
    
      <category term="nginx" scheme="http://benpaodewoniu.github.io/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>ok | oklink 链上数据以及基本用法</title>
    <link href="http://benpaodewoniu.github.io/2024/03/21/ok0/"/>
    <id>http://benpaodewoniu.github.io/2024/03/21/ok0/</id>
    <published>2024-03-21T07:25:47.000Z</published>
    <updated>2024-03-24T04:45:57.129Z</updated>
    
    <content type="html"><![CDATA[<p><code>OK</code> 将链上数据进行了整理，非常牛逼。</p><a id="more"></a><ul><li><a href="https://www.oklink.com/docs/zh/#explorer-api-nft">oklink</a></li></ul><p>免费 <code>api</code> 有 <code>100万</code>额度，非常良心。</p><p>这里主要介绍 <code>3</code> 种 <code>api</code> 用法</p><ul><li>持币 <code>holders</code></li><li><code>nft</code> 地板价</li><li><code>nft</code> 具体细节获取</li></ul><h2 id="基础代码运行"><a href="#基础代码运行" class="headerlink" title="基础代码运行"></a>基础代码运行</h2><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="attr">url</span> = <span class="string">"https://www.oklink.com/api/v5/explorer/nft/nft-listing-list?chainShortName=ARBITRUM&amp;tokenContractAddress=0xcf8b334f02ad9c80dc6a2db8191983acbeebac83&amp;tokenId=1&amp;marketplace=OpenSea&amp;limit=100"</span></span><br><span class="line"></span><br><span class="line"><span class="attr">payload</span> = <span class="string">""</span></span><br><span class="line"><span class="attr">headers</span> = &#123;</span><br><span class="line">    <span class="comment"># apiKey</span></span><br><span class="line">    'Ok-Access-Key': '*****'</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="attr">response</span> = requests.request(<span class="string">"GET"</span>, url, <span class="attr">headers=headers,</span> <span class="attr">data=payload)</span></span><br><span class="line"></span><br><span class="line">print(response.text)</span><br></pre></td></tr></table></figure><h2 id="持币-holders"><a href="#持币-holders" class="headerlink" title="持币 holders"></a>持币 holders</h2><p><code>ok</code> 的持币 <code>page</code> 是从 <code>1</code> 开始的，不是从 <code>0</code> 开始的。</p><p>即</p><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https://www.oklink.com/api/v5/explorer/token/position-<span class="meta">list</span>?chainShortName=eth<span class="variable">&amp;tokenContractAddress</span>=0xa8218CBDb4Accce36EE92874Fe34a999abC30A7a<span class="variable">&amp;limit</span>=100<span class="variable">&amp;page</span>=1</span><br><span class="line"></span><br><span class="line">https://www.oklink.com/api/v5/explorer/token/position-<span class="meta">list</span>?chainShortName=eth<span class="variable">&amp;tokenContractAddress</span>=0xa8218CBDb4Accce36EE92874Fe34a999abC30A7a<span class="variable">&amp;limit</span>=100<span class="variable">&amp;page</span>=0</span><br></pre></td></tr></table></figure><p>这两个是没区别的。</p><h2 id="nft-地板价"><a href="#nft-地板价" class="headerlink" title="nft 地板价"></a>nft 地板价</h2><p>以 lumi box nft 为例。</p><p><img src="/images/ok/0_0.png" alt=""></p><p>这里面有 <code>4</code> 种 <code>nft</code>，点进去就发现，<code>4</code> 个 <code>url</code> 分别是</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="regexp">//</span>opensea.io<span class="regexp">/assets/</span>arbitrum<span class="regexp">/0xcf8b334f02ad9c80dc6a2db8191983acbeebac83/</span><span class="number">1</span></span><br><span class="line">https:<span class="regexp">//</span>opensea.io<span class="regexp">/assets/</span>arbitrum<span class="regexp">/0xcf8b334f02ad9c80dc6a2db8191983acbeebac83/</span><span class="number">2</span></span><br><span class="line">https:<span class="regexp">//</span>opensea.io<span class="regexp">/assets/</span>arbitrum<span class="regexp">/0xcf8b334f02ad9c80dc6a2db8191983acbeebac83/</span><span class="number">3</span></span><br><span class="line">https:<span class="regexp">//</span>opensea.io<span class="regexp">/assets/</span>arbitrum<span class="regexp">/0xcf8b334f02ad9c80dc6a2db8191983acbeebac83/</span><span class="number">4</span></span><br></pre></td></tr></table></figure><p>如果，你使用 <code>/api/v5/explorer/nft/collection-floor-price</code>，只能得到 <code>1</code> 的地板价，<code>2，3，4</code>是得不到的。</p><p>如何得到 <code>1，2，3，4</code> 的出售单呢？</p><h2 id="nft-具体细节获取"><a href="#nft-具体细节获取" class="headerlink" title="nft 具体细节获取"></a>nft 具体细节获取</h2><p>要想获取 1，2，3，4分别的最低价，就需要借助</p><p><code>/api/v5/explorer/nft/nft-listing-list</code> 参数 <code>tokenId</code> 分别传入 <code>1，2，3，4</code> 即可。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;OK&lt;/code&gt; 将链上数据进行了整理，非常牛逼。&lt;/p&gt;
    
    </summary>
    
      <category term="项目经历" scheme="http://benpaodewoniu.github.io/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/"/>
    
      <category term="大型" scheme="http://benpaodewoniu.github.io/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/%E5%A4%A7%E5%9E%8B/"/>
    
      <category term="quantify" scheme="http://benpaodewoniu.github.io/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/%E5%A4%A7%E5%9E%8B/quantify/"/>
    
      <category term="gateway" scheme="http://benpaodewoniu.github.io/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/%E5%A4%A7%E5%9E%8B/quantify/gateway/"/>
    
      <category term="ok" scheme="http://benpaodewoniu.github.io/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/%E5%A4%A7%E5%9E%8B/quantify/gateway/ok/"/>
    
      <category term="oklink" scheme="http://benpaodewoniu.github.io/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/%E5%A4%A7%E5%9E%8B/quantify/gateway/ok/oklink/"/>
    
    
      <category term="oklink" scheme="http://benpaodewoniu.github.io/tags/oklink/"/>
    
  </entry>
  
  <entry>
    <title>python | mac 和 ubuntu 上的最佳实践</title>
    <link href="http://benpaodewoniu.github.io/2024/03/20/python202/"/>
    <id>http://benpaodewoniu.github.io/2024/03/20/python202/</id>
    <published>2024-03-19T16:34:32.000Z</published>
    <updated>2024-03-19T16:55:09.563Z</updated>
    
    <content type="html"><![CDATA[<p>这里的最佳实践是 <code>python</code> + <code>chrome-headless-shell</code>。</p><a id="more"></a><p>在看之前一定要先看</p><ul><li><a href="/2024/03/20/python201/">python | chrome-headless-shell</a></li></ul><p>整个环境是</p><ul><li>python 3.7</li><li>chromedriver + chrome-headless-shell<ul><li>最新版本</li></ul></li><li>selenium<ul><li>3.141.0</li></ul></li><li>urllib3<ul><li>1.24.2</li></ul></li></ul><p>记住，上面那两个安装库的版本是实践过的，其他的版本可能会报错。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这里的最佳实践是 &lt;code&gt;python&lt;/code&gt; + &lt;code&gt;chrome-headless-shell&lt;/code&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="python" scheme="http://benpaodewoniu.github.io/categories/python/"/>
    
      <category term="模块" scheme="http://benpaodewoniu.github.io/categories/python/%E6%A8%A1%E5%9D%97/"/>
    
      <category term="selenium" scheme="http://benpaodewoniu.github.io/categories/python/%E6%A8%A1%E5%9D%97/selenium/"/>
    
    
      <category term="python" scheme="http://benpaodewoniu.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python | chrome-headless-shell</title>
    <link href="http://benpaodewoniu.github.io/2024/03/20/python201/"/>
    <id>http://benpaodewoniu.github.io/2024/03/20/python201/</id>
    <published>2024-03-19T16:34:30.000Z</published>
    <updated>2024-03-19T16:51:35.247Z</updated>
    
    <content type="html"><![CDATA[<p>最佳爬虫浏览器。</p><a id="more"></a><p>访问 <a href="https://googlechromelabs.github.io/chrome-for-testing/">chrome-for-testing</a> 会发现有以下三种类型</p><ul><li>chrome<ul><li>正常的浏览器</li></ul></li><li><code>chrome-driver</code><ul><li><code>driver</code> 可以通过代码操作 <code>chrome</code> 和 <code>chrome-headless-shell</code></li></ul></li><li><code>chrome-headless-shell</code><ul><li><code>Chrome Headless Shell</code> 是 <code>Chrome</code> 浏览器的无界面版本，它提供了与标准 <code>Chrome</code> 浏览器相同的功能，但没有用户界面。</li><li><code>chrome</code> 也有无头模式，但是这个更好</li></ul></li></ul><h2 id="mac"><a href="#mac" class="headerlink" title="mac"></a>mac</h2><p>下载相关的 <code>mac</code> 包之后，基本上可以直接用 <code>driver</code> 操作 <code>chrome</code>。</p><p>代码如下</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> typing import Dict</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> selenium import webdriver</span><br><span class="line"></span><br><span class="line">chrome_options = webdriver.ChromeOptions()</span><br><span class="line">chrome_options.binary_location = <span class="string">"chrome-headless-shell 路径"</span></span><br><span class="line">driver = webdriver.Chrome(<span class="attribute">chrome_options</span>=chrome_options, <span class="attribute">executable_path</span>=<span class="string">"driver 路径"</span>)</span><br><span class="line">driver.<span class="builtin-name">get</span>(<span class="string">"https://baidu.com"</span>)</span><br><span class="line"><span class="comment"># 获取网页源代码</span></span><br><span class="line">page_source = driver.page_source</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出网页源代码</span></span><br><span class="line"><span class="builtin-name">print</span>(page_source)</span><br><span class="line">driver.close()</span><br></pre></td></tr></table></figure><h2 id="ubuntu"><a href="#ubuntu" class="headerlink" title="ubuntu"></a>ubuntu</h2><p>我的是 <code>ubuntu20.04</code>，并且我的是纯环境，所以有很多依赖没有装。</p><p>下载之后，你可以 <code>cd</code> 到解压目录，然后运行</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">./chrome-headless-shell</span> <span class="params">--disable-gpu</span> <span class="params">--dump-dom</span> https:<span class="string">//baidu.com</span></span><br></pre></td></tr></table></figure><p>看是否能把相关的页面打印出来。</p><p>我是缺少非常多的东西，我运行如下</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">sudo apt <span class="keyword">install</span> -y gconf-service libasound2 libatk1<span class="number">.0</span><span class="number">-0</span> libcups2 libgconf<span class="number">-2</span><span class="number">-4</span> libgtk<span class="number">-3</span><span class="number">-0</span> libnspr4 libx11-xcb1 libxcomposite1 libxdamage1 libxrandr2 libxslt1<span class="number">.1</span> libnss3 libxss1 libappindicator3<span class="number">-1</span> libindicator7 fonts-liberation xdg-utils</span><br><span class="line">sudo apt-<span class="keyword">get</span> <span class="keyword">install</span> libatk1<span class="number">.0</span><span class="number">-0</span></span><br><span class="line">sudo apt-<span class="keyword">get</span> <span class="keyword">install</span> libatk-bridge2<span class="number">.0</span><span class="number">-0</span></span><br><span class="line">sudo apt-<span class="keyword">get</span> <span class="keyword">install</span> libxcomposite1</span><br><span class="line">sudo apt-<span class="keyword">get</span> <span class="keyword">install</span> libxdamage1</span><br><span class="line">sudo apt-<span class="keyword">get</span> <span class="keyword">install</span> libxfixes3</span><br><span class="line">sudo apt-<span class="keyword">get</span> <span class="keyword">install</span> libxrandr2</span><br><span class="line">sudo apt-<span class="keyword">get</span> <span class="keyword">install</span> libgbm1</span><br><span class="line">sudo apt-<span class="keyword">get</span> <span class="keyword">install</span> libxkbcommon0</span><br></pre></td></tr></table></figure><p>上面安装代码不需要全部都运行，可以安装一个就试试命令，直到成功，或者缺什么补什么（问 <code>chatgpt</code>）</p><p>但是，你运行 mac 中的代码，还是可能会报错</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">Traceback (most recent <span class="keyword">call</span> <span class="keyword">last</span>):</span><br><span class="line">  <span class="keyword">File</span> <span class="string">"a.py"</span>, line <span class="number">11</span>, <span class="keyword">in</span> &lt;<span class="keyword">module</span>&gt;</span><br><span class="line">    driver = webdriver.Chrome(options=chrome_options, executable_path=db.get(<span class="string">"chrome_driver_path"</span>))</span><br><span class="line">  <span class="keyword">File</span> <span class="string">"/usr/local/src/python37/lib/python3.7/site-packages/selenium/webdriver/chrome/webdriver.py"</span>, line <span class="number">81</span>, <span class="keyword">in</span> __init__</span><br><span class="line">    desired_capabilities=desired_capabilities)</span><br><span class="line">  <span class="keyword">File</span> <span class="string">"/usr/local/src/python37/lib/python3.7/site-packages/selenium/webdriver/remote/webdriver.py"</span>, line <span class="number">157</span>, <span class="keyword">in</span> __init__</span><br><span class="line">    self.start_session(capabilities, browser_profile)</span><br><span class="line">  <span class="keyword">File</span> <span class="string">"/usr/local/src/python37/lib/python3.7/site-packages/selenium/webdriver/remote/webdriver.py"</span>, line <span class="number">252</span>, <span class="keyword">in</span> start_session</span><br><span class="line">    response = self.execute(Command.NEW_SESSION, <span class="keyword">parameters</span>)</span><br><span class="line">  <span class="keyword">File</span> <span class="string">"/usr/local/src/python37/lib/python3.7/site-packages/selenium/webdriver/remote/webdriver.py"</span>, line <span class="number">319</span>, <span class="keyword">in</span> <span class="keyword">execute</span></span><br><span class="line">    response = self.command_executor.execute(driver_command, params)</span><br><span class="line">  <span class="keyword">File</span> <span class="string">"/usr/local/src/python37/lib/python3.7/site-packages/selenium/webdriver/remote/remote_connection.py"</span>, line <span class="number">374</span>, <span class="keyword">in</span> <span class="keyword">execute</span></span><br><span class="line">    <span class="keyword">return</span> self._request(command_info[<span class="number">0</span>], <span class="keyword">url</span>, <span class="keyword">body</span>=<span class="keyword">data</span>)</span><br><span class="line">  <span class="keyword">File</span> <span class="string">"/usr/local/src/python37/lib/python3.7/site-packages/selenium/webdriver/remote/remote_connection.py"</span>, line <span class="number">397</span>, <span class="keyword">in</span> _request</span><br><span class="line">    resp = self._conn.request(method, <span class="keyword">url</span>, <span class="keyword">body</span>=<span class="keyword">body</span>, headers=headers)</span><br><span class="line">  <span class="keyword">File</span> <span class="string">"/usr/local/src/python37/lib/python3.7/site-packages/urllib3/_request_methods.py"</span>, line <span class="number">119</span>, <span class="keyword">in</span> request</span><br><span class="line">    method, <span class="keyword">url</span>, <span class="keyword">fields</span>=<span class="keyword">fields</span>, headers=headers, **urlopen_kw</span><br><span class="line">  <span class="keyword">File</span> <span class="string">"/usr/local/src/python37/lib/python3.7/site-packages/urllib3/_request_methods.py"</span>, line <span class="number">217</span>, <span class="keyword">in</span> request_encode_body</span><br><span class="line">    <span class="keyword">return</span> self.urlopen(method, <span class="keyword">url</span>, **extra_kw)</span><br><span class="line">  <span class="keyword">File</span> <span class="string">"/usr/local/src/python37/lib/python3.7/site-packages/urllib3/poolmanager.py"</span>, line <span class="number">432</span>, <span class="keyword">in</span> urlopen</span><br><span class="line">    <span class="keyword">conn</span> = self.connection_from_host(u.host, port=u.port, scheme=u.scheme)</span><br><span class="line">  <span class="keyword">File</span> <span class="string">"/usr/local/src/python37/lib/python3.7/site-packages/urllib3/poolmanager.py"</span>, line <span class="number">303</span>, <span class="keyword">in</span> connection_from_host</span><br><span class="line">    <span class="keyword">return</span> self.connection_from_context(request_context)</span><br><span class="line">  <span class="keyword">File</span> <span class="string">"/usr/local/src/python37/lib/python3.7/site-packages/urllib3/poolmanager.py"</span>, line <span class="number">328</span>, <span class="keyword">in</span> connection_from_context</span><br><span class="line">    <span class="keyword">return</span> self.connection_from_pool_key(pool_key, request_context=request_context)</span><br><span class="line">  <span class="keyword">File</span> <span class="string">"/usr/local/src/python37/lib/python3.7/site-packages/urllib3/poolmanager.py"</span>, line <span class="number">351</span>, <span class="keyword">in</span> connection_from_pool_key</span><br><span class="line">    pool = self._new_pool(scheme, host, port, request_context=request_context)</span><br><span class="line">  <span class="keyword">File</span> <span class="string">"/usr/local/src/python37/lib/python3.7/site-packages/urllib3/poolmanager.py"</span>, line <span class="number">265</span>, <span class="keyword">in</span> _new_pool</span><br><span class="line">    <span class="keyword">return</span> pool_cls(host, port, **request_context)</span><br><span class="line">  <span class="keyword">File</span> <span class="string">"/usr/local/src/python37/lib/python3.7/site-packages/urllib3/connectionpool.py"</span>, line <span class="number">197</span>, <span class="keyword">in</span> __init__</span><br><span class="line">    <span class="keyword">timeout</span> = Timeout.from_float(<span class="keyword">timeout</span>)</span><br><span class="line">  <span class="keyword">File</span> <span class="string">"/usr/local/src/python37/lib/python3.7/site-packages/urllib3/util/timeout.py"</span>, line <span class="number">190</span>, <span class="keyword">in</span> from_float</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">Timeout</span>(<span class="keyword">read</span>=<span class="keyword">timeout</span>, <span class="keyword">connect</span>=<span class="keyword">timeout</span>)</span><br><span class="line">  <span class="keyword">File</span> <span class="string">"/usr/local/src/python37/lib/python3.7/site-packages/urllib3/util/timeout.py"</span>, line <span class="number">119</span>, <span class="keyword">in</span> __init__</span><br><span class="line">    self._connect = self._validate_timeout(<span class="keyword">connect</span>, <span class="string">"connect"</span>)</span><br><span class="line">  <span class="keyword">File</span> <span class="string">"/usr/local/src/python37/lib/python3.7/site-packages/urllib3/util/timeout.py"</span>, line <span class="number">159</span>, <span class="keyword">in</span> _validate_timeout</span><br><span class="line">    ) <span class="keyword">from</span> <span class="keyword">None</span></span><br><span class="line">ValueError: <span class="keyword">Timeout</span> <span class="keyword">value</span> <span class="keyword">connect</span> was &lt;<span class="keyword">object</span> <span class="keyword">object</span> <span class="keyword">at</span> <span class="number">0x7f5a37a17070</span>&gt;, but it must be an <span class="built_in">int</span>, <span class="built_in">float</span> <span class="keyword">or</span> None.</span><br></pre></td></tr></table></figure><p>这个报错请参考</p><ul><li><a href="/2024/03/20/python202/">python | mac 和 ubuntu 上的最佳实践</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最佳爬虫浏览器。&lt;/p&gt;
    
    </summary>
    
      <category term="应用" scheme="http://benpaodewoniu.github.io/categories/%E5%BA%94%E7%94%A8/"/>
    
      <category term="python" scheme="http://benpaodewoniu.github.io/categories/python/"/>
    
      <category term="chrome" scheme="http://benpaodewoniu.github.io/categories/%E5%BA%94%E7%94%A8/chrome/"/>
    
      <category term="模块" scheme="http://benpaodewoniu.github.io/categories/python/%E6%A8%A1%E5%9D%97/"/>
    
      <category term="selenium" scheme="http://benpaodewoniu.github.io/categories/python/%E6%A8%A1%E5%9D%97/selenium/"/>
    
    
      <category term="python" scheme="http://benpaodewoniu.github.io/tags/python/"/>
    
  </entry>
  
</feed>
